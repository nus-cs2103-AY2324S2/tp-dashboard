[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-W13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-W13-3/tp/actions)","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W13-3/tp/graph/badge.svg?token\u003d1WRVD2HJ79)](https://codecov.io/gh/AY2324S2-CS2103T-W13-3/tp)","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"-":5,"Cedricaca":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"run {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"    archiveFileName \u003d \u0027Rainbow_Dragon.jar\u0027","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"run {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"NusMinato"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"HongRay":2,"-":72,"Xuyan0518":4,"NusMinato":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"### Ng Hong Ray","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"\u003cimg src\u003d\"images/hongray.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"\u003c!-- [[homepage](http://www.comp.nus.edu.sg/~damithch)] --\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"[[GitHub](https://github.com/HongRay)]","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"[[Portfolio](team/members/hongRay.md)]","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"* Role: Developer","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"* Responsibility: UI","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"### Chen Xiao Yang","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"\u003cimg src\u003d\"images/chenxy128.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"[[Github](http://github.com/ChenXy128)]","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"[[Portfolio](team/members/Xiaoyang.md)]","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"* Role: Developer","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"### Zhou Xuyan","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"\u003cimg src\u003d\"images/xuyan0518.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"[[Github](http://github.com/Xuyan0518)]","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"[[Portfolio](team/members/Xuyan.md)]","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"### Tan Jun Jia Cedric","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"\u003cimg src\u003d\"images/cedricaca.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"[[Github](http://github.com/Cedricaca)]","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"[[Portfolio](team/members/Cedricaca.md)]","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"### Li Cheng Zhen","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"\u003cimg src\u003d\"images/nusminato.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"[[Github](http://github.com/NusMinato)]","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"[[Portfolio](team/members/Chengzhen.md)]","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"HongRay":24,"-":39}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"NusMinato"},"content":"# Rainbow Dragon Developer Guide","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Xuyan0518"},"content":"### Add functon","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"Xuyan0518"},"content":"The new add function allows user to add new contacts to the address book. \u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"Xuyan0518"},"content":"Users can now choose to add tags to the contact upon addition of new contacts by running the command as `add n/name t/tag`. \u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"Xuyan0518"},"content":"Users can also add multiple tags to a person upon addition of a new contact by running `add n/name t/tag1 t/tag2`\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"Xuyan0518"},"content":"Users can also assign new contact categories upon addition by running `add n/name t/tag c/cat d/description`, where `cat` is the category associated","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"Xuyan0518"},"content":"with the new contact and `description` is the category information that is assigned to the new contact. \u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"NusMinato"},"content":"Users can also assign multiple categorical information to the new contact added by running `add n/name t/tag c/cat1, cat2, cat3 d/d1, d2, d3`, where `cat1` corresponds to `d1` and `cat2` corresponds to `d2` and so on. Users can definitely add more than 3 categories with descriptions in one addition.","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"Xuyan0518"},"content":"The sequence diagram below illustrates how the add function can be used.","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"Xuyan0518"},"content":"\u003cpuml src\u003d\"docs/diagrams/AddSequenceDiagram.puml\" alt\u003d\"Add Command Sequence Diagram\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"Cedricaca"},"content":"### AddCategory function","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"Cedricaca"},"content":"The new addCategory function allows user to be able to add any category to a person \u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"Cedricaca"},"content":"he sequence diagram below illustrates the interaction within the `Logic` component, taking `execute(\"edit 1 c/Clan d/rainbow\")` API call as an example.","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"Cedricaca"},"content":"\u003cpuml src\u003d\"diagrams/AddCategorySequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `addCategory 1 c/class d/warrior` Command\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"Cedricaca"},"content":"#### 1. How the feature is implemented","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"Cedricaca"},"content":"Upon specification of a string for category and description, an entry object is created , which is then added to the person","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"Cedricaca"},"content":"specified by the index given by the user. If a duplicate category or invalid index is provided, an error will be thrown","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"Cedricaca"},"content":"#### 2. Why it is implemented that way.","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"Cedricaca"},"content":"Entry requiring only two Strings meant that the type of entries that can be created by the user is limitless, suitable for an application that inputs potential characteristics","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"Cedricaca"},"content":"from games. However, due to deleteCategory requiring the category name, it was decided that categories be unique per person. It was required that index be specified as Name can be non unique in addressbook.","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"Cedricaca"},"content":"#### 3. Alternatives considered.","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"NusMinato"},"content":"Given our initial vision of a customisable field option for the addressbook persons, there wasnt really much of an alternative as gaming contacts can vary quite widely. It would not make sense to have compulsory fields except for name since many things like phone, address and email may be unknown to the user for online or gaming contacts otherwise. This way, things like gaming information can be captured with no restrictions.","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"HongRay"},"content":"### Edit function","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"HongRay"},"content":"The new edit function allows user to be able to edit any category based they want.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"HongRay"},"content":"The sequence diagram below illustrates the interaction within the `Logic` component, taking `execute(\"edit 1 c/Clan d/rainbow\")` API call as an example.","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"HongRay"},"content":"\u003cpuml src\u003d\"diagrams/EditSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `edit 1 c/Clan d/rainbow` Command\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"HongRay"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"HongRay"},"content":"**Note:** The lifeline for `EditCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-03-26"},{"lineNumber":199,"author":{"gitId":"HongRay"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"HongRay"},"content":"#### 1. How the feature is implemented","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"HongRay"},"content":"The edit feature in the address book application is implemented through the `EditCommand` and `EditCommandParser` classes.","lastModifiedDate":"2024-03-26"},{"lineNumber":203,"author":{"gitId":"HongRay"},"content":"The `EditCommand` class handles the logic of editing a person\u0027s details, such as category, description, and tags.","lastModifiedDate":"2024-03-26"},{"lineNumber":204,"author":{"gitId":"HongRay"},"content":"It uses an inner class, `EditPersonDescriptor`, to hold the values to be edited, allowing partial updates to a person\u0027s information.","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"HongRay"},"content":"The execute method in `EditCommand` performs the actual update, ensuring that the edited person does not duplicate existing entries.","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"HongRay"},"content":"The `EditCommandParser` class parses user input into an `EditCommand` object. It validates the input and extracts the necessary information","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"HongRay"},"content":"(like index, category, description, and tags) to create an `EditPersonDescriptor`, which is then used to instantiate an `EditCommand`.","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"HongRay"},"content":"Below is the method used to instantiate the `EditPersonDescriptor` used to \"remember\" what category and description is being changed.","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"HongRay"},"content":"```","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"HongRay"},"content":"editPersonDescriptor.set(category, ParserUtil.parse(category, category));","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"HongRay"},"content":"editPersonDescriptor.setCategory(category);","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"HongRay"},"content":"```","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"HongRay"},"content":"Additionally, in the `EditCommand` class, the method:","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"HongRay"},"content":"```","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"HongRay"},"content":"Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"HongRay"},"content":"```","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"HongRay"},"content":"Creates this `EditPersonDescriptor` for it to edit the necessary code implemented by the user.","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"HongRay"},"content":"#### 2. Why it is implemented that way.","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"HongRay"},"content":"This implementation segregates the parsing of user input from the execution logic, adhering to the single responsibility principle","lastModifiedDate":"2024-03-26"},{"lineNumber":221,"author":{"gitId":"HongRay"},"content":"and making the code more maintainable and testable. The `EditCommand` class focuses solely on the business logic of editing a person\u0027s details,","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"HongRay"},"content":"while the `EditCommandParser` deals with interpreting the user\u0027s input. This separation allows for clearer structure and easier debugging,","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"HongRay"},"content":"as each class has a distinct responsibility. The use of `EditPersonDescriptor` as a way to encapsulate the editable attributes of a person enables a","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"HongRay"},"content":"flexible design where only specified fields can be updated, enhancing the user experience by allowing partial edits.","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"HongRay"},"content":"#### 3. Alternatives considered.","lastModifiedDate":"2024-03-26"},{"lineNumber":227,"author":{"gitId":"HongRay"},"content":"Alternatives that might have been considered include implementing the parsing logic directly within the `EditCommand class`, which would reduce the number","lastModifiedDate":"2024-03-26"},{"lineNumber":228,"author":{"gitId":"HongRay"},"content":"of classes and potentially simplify the command\u0027s initiation process. However, this approach could lead to a more complex `EditCommand` class, making it","lastModifiedDate":"2024-03-26"},{"lineNumber":229,"author":{"gitId":"HongRay"},"content":"harder to manage and maintain. Another alternative could be the use of reflection to dynamically update fields in the `Person` class based on input,","lastModifiedDate":"2024-03-26"},{"lineNumber":230,"author":{"gitId":"HongRay"},"content":"which would make adding new fields easier. However, this could increase complexity and decrease code readability and security due to the dynamic nature of reflection.","lastModifiedDate":"2024-03-26"},{"lineNumber":231,"author":{"gitId":"HongRay"},"content":"Additionally, the `EditPersonDescriptor` could be completely remove as the implementation of the `Entry` class would allow the edit of categories directly.","lastModifiedDate":"2024-03-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"ChenXy128"},"content":"### Find function","lastModifiedDate":"2024-03-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":236,"author":{"gitId":"ChenXy128"},"content":"The Find Command feature within the provided address book application is structured to enable users to search for persons based on specified criteria.","lastModifiedDate":"2024-03-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":238,"author":{"gitId":"ChenXy128"},"content":"#### Implementation","lastModifiedDate":"2024-03-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":240,"author":{"gitId":"ChenXy128"},"content":"The feature is implemented through several interconnected components:","lastModifiedDate":"2024-03-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":242,"author":{"gitId":"ChenXy128"},"content":"1. **FindCommand Class**: This is the core of the feature, encapsulating the logic to find and list all persons whose fields match the specified criteria. It leverages a `PersonFieldsContainKeywordPredicate` to filter matching persons. Upon execution, it updates the model\u0027s filtered person list to reflect the search results.","lastModifiedDate":"2024-03-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":244,"author":{"gitId":"ChenXy128"},"content":"2. **PersonFieldsContainKeywordPredicate Class**: Represents the criteria used to filter persons. It checks if any of the person\u0027s fields match the specified keywords in their categories, descriptions, or tags. This flexibility allows for a more nuanced search capability.","lastModifiedDate":"2024-03-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":246,"author":{"gitId":"ChenXy128"},"content":"3. **FindCommandParser Class**: Parses the user input into a usable format for the `FindCommand`. It ensures the input adheres to the expected format, extracting relevant information to create a `PersonFieldsContainKeywordPredicate`.","lastModifiedDate":"2024-03-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":248,"author":{"gitId":"ChenXy128"},"content":"4. **Model Interface**: Defines the API that the `FindCommand` interacts with, specifically the `updateFilteredPersonList` method that updates the list of displayed persons based on the predicate.","lastModifiedDate":"2024-03-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":250,"author":{"gitId":"ChenXy128"},"content":"#### Rationale","lastModifiedDate":"2024-03-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":252,"author":{"gitId":"ChenXy128"},"content":"The design choices made in implementing the Find Command are based on several considerations:","lastModifiedDate":"2024-03-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":254,"author":{"gitId":"ChenXy128"},"content":"- **Modularity and Single Responsibility**: Each class has a clear and distinct role. `FindCommand` handles command execution, `PersonFieldsContainKeywordPredicate` defines the search criteria, and `FindCommandParser` processes user input. This separation of concerns makes the code more maintainable and extendable.","lastModifiedDate":"2024-03-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":256,"author":{"gitId":"ChenXy128"},"content":"- **Flexibility in Search Criteria**: By using a predicate that can filter based on categories, descriptions, and tags, the implementation provides a versatile search functionality. This approach caters to various user needs, allowing for more detailed queries.","lastModifiedDate":"2024-03-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":258,"author":{"gitId":"ChenXy128"},"content":"- **User-Friendly Command Syntax**: The command syntax is designed to be intuitive, with clear prefixes indicating the type of criteria (category, description, tag). This choice aims to enhance usability, making it easier for users to construct their search queries.","lastModifiedDate":"2024-03-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":260,"author":{"gitId":"ChenXy128"},"content":"- **Enables Batch Processing**: Specifying multiple `c/\u003ccategory\u003e d/\u003cdescription\u003e` allows the user to look for multiple people who satisfy the at least one of the `c/ d/`.","lastModifiedDate":"2024-03-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":262,"author":{"gitId":"ChenXy128"},"content":"- **Tags**: Finding with tags also allows batch processing, which enhances the users\u0027 experience in searching for people who belong to different tags.","lastModifiedDate":"2024-03-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":264,"author":{"gitId":"ChenXy128"},"content":"#### Alternatives Considered","lastModifiedDate":"2024-03-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":266,"author":{"gitId":"ChenXy128"},"content":"1. **Regular Expression Searches**: Implementing search functionality that allows for regular expression patterns could provide even more flexibility. However, this might increase the complexity of the user interface and require users to have knowledge of regular expressions.","lastModifiedDate":"2024-03-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":268,"author":{"gitId":"ChenXy128"},"content":"2. **Separate Commands for Different Criteria**: Creating separate commands for searching by category, description, and tag could simplify the implementation. However, this approach was likely rejected because it would complicate the user experience, requiring users to remember and choose from multiple commands based on their search needs.","lastModifiedDate":"2024-03-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":270,"author":{"gitId":"ChenXy128"},"content":"In conclusion, the Find Command is implemented with a focus on flexibility, usability, and maintainability, balancing advanced search capabilities with ease of use for the end user. The chosen implementation provides a solid foundation that can be easily extended or modified as the application evolves.","lastModifiedDate":"2024-03-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":316,"author":{"gitId":"HongRay"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":317,"author":{"gitId":"NusMinato"},"content":"### DeleteCategory function","lastModifiedDate":"2024-03-26"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"NusMinato"},"content":"The command `deleteCategory INDEX c/CATEGORY` allows users to delete the `CATEGORY` of a person at the specified `INDEX`.","lastModifiedDate":"2024-03-26"},{"lineNumber":320,"author":{"gitId":"NusMinato"},"content":"The sequence diagram below illustrates the interaction within the `Logic` component, taking `execute(\"deleteCategory 1 c/Clan\")` API call as an example.","lastModifiedDate":"2024-03-26"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"NusMinato"},"content":"\u003cpuml src\u003d\"diagrams/DeleteCategorySequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `deleteCategory 1 c/Clan` Command\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"NusMinato"},"content":"**Note:** The lifeline for `DeleteCategoryCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-03-26"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"NusMinato"},"content":"The feature of deleting category is implemented by the `DeleteCategoryCommand` and `DeleteCategoryCommandParser` classes.","lastModifiedDate":"2024-03-26"},{"lineNumber":331,"author":{"gitId":"NusMinato"},"content":"The `DeleteCategoryCommand` class handles the logic of deleting one of user\u0027s category.","lastModifiedDate":"2024-03-26"},{"lineNumber":332,"author":{"gitId":"NusMinato"},"content":"The execute class in `DeleteCategoryCommand` class checks if the input category is existing.","lastModifiedDate":"2024-03-26"},{"lineNumber":333,"author":{"gitId":"NusMinato"},"content":"The `DeleteCategoryCommandParser` class parses user input into an `DeleteCategoryCommand` object. It validates the input and extracts the necessary information to instantiate an `DeleteCategoryCommand`.","lastModifiedDate":"2024-03-26"},{"lineNumber":334,"author":{"gitId":"NusMinato"},"content":"If the format of command is correct, the `DeleteCategory` object will try to call the `deleteEntry` method from `Parser` class to delete the corresponding category.","lastModifiedDate":"2024-03-26"},{"lineNumber":335,"author":{"gitId":"NusMinato"},"content":"If the format of command is wrong or the category does not exist, the `DeleteCategoryCommand` or `DeleteCategoryCommandParser` class will throw an exception.","lastModifiedDate":"2024-03-26"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":339,"author":{"gitId":"NusMinato"},"content":"**Note:** There are some caveat for `deleteCategory` command:","lastModifiedDate":"2024-03-26"},{"lineNumber":340,"author":{"gitId":"NusMinato"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-03-26"},{"lineNumber":341,"author":{"gitId":"NusMinato"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-26"},{"lineNumber":342,"author":{"gitId":"NusMinato"},"content":"* The category **must exist**.","lastModifiedDate":"2024-03-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"NusMinato"},"content":"* for clan managers or hard core gamers of the game","lastModifiedDate":"2024-03-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                                                              | So that I can…​                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"Xuyan0518"},"content":"|----------|---------------------|----------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-06"},{"lineNumber":380,"author":{"gitId":"Xuyan0518"},"content":"| `* * `   | Rainbow Dragon user | create and manage multiple character profiles, including their names, classes, and progress  | keep track of my gaming experience for different games                         |","lastModifiedDate":"2024-03-06"},{"lineNumber":381,"author":{"gitId":"Xuyan0518"},"content":"| `* * `   | Rainbow Dragon user | add custom notes or tags to character profiles                                               | jot down important details or strategies for future reference                  |","lastModifiedDate":"2024-03-06"},{"lineNumber":382,"author":{"gitId":"Xuyan0518"},"content":"| `* * `   | Rainbow Dragon user | learn comprehensive help documentation and tutorials accessible within the interface         | learn its features and commands more efficiently                               |","lastModifiedDate":"2024-03-06"},{"lineNumber":383,"author":{"gitId":"Xuyan0518"},"content":"| `* * `   | Rainbow Dragon user | easily search for specific characters or games within the CLI tool                           | quickly access the information I need without navigating through complex menus |","lastModifiedDate":"2024-03-06"},{"lineNumber":384,"author":{"gitId":"Xuyan0518"},"content":"| `* * `   | Rainbow Dragon user | gain insights and analytics about my gaming habits and progress from the CLI tool            | identify areas for improvement and set goals for future gameplay               |","lastModifiedDate":"2024-03-06"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"NusMinato"},"content":"(For all use cases below, the **System** is the `RainbowDragon` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-06"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"NusMinato"},"content":"2.  RainbowDragon shows a list of persons","lastModifiedDate":"2024-03-06"},{"lineNumber":398,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"NusMinato"},"content":"4.  RainbowDragon deletes the person","lastModifiedDate":"2024-03-06"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"NusMinato"},"content":"    * 3a1. RainbowDragon shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"NusMinato"},"content":"**Use case: Add a person**","lastModifiedDate":"2024-03-06"},{"lineNumber":416,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":417,"author":{"gitId":"NusMinato"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":418,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":419,"author":{"gitId":"NusMinato"},"content":"1.  User requests to add a person","lastModifiedDate":"2024-03-06"},{"lineNumber":420,"author":{"gitId":"NusMinato"},"content":"2.  RainbowDragon prompts user to enter person\u0027s details","lastModifiedDate":"2024-03-06"},{"lineNumber":421,"author":{"gitId":"NusMinato"},"content":"3.  User enters person\u0027s details","lastModifiedDate":"2024-03-06"},{"lineNumber":422,"author":{"gitId":"NusMinato"},"content":"4.  RainbowDragon validates the details","lastModifiedDate":"2024-03-06"},{"lineNumber":423,"author":{"gitId":"NusMinato"},"content":"5.  RainbowDragon adds the person to the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":424,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":425,"author":{"gitId":"NusMinato"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":426,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":427,"author":{"gitId":"NusMinato"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":428,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":429,"author":{"gitId":"NusMinato"},"content":"* 4a. User cancels the operation.","lastModifiedDate":"2024-03-06"},{"lineNumber":430,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":431,"author":{"gitId":"NusMinato"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":432,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":433,"author":{"gitId":"NusMinato"},"content":"* 4b. User enters invalid details.","lastModifiedDate":"2024-03-06"},{"lineNumber":434,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":435,"author":{"gitId":"NusMinato"},"content":"    * 4b1. RainbowDragon shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":436,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":437,"author":{"gitId":"NusMinato"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":438,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":439,"author":{"gitId":"NusMinato"},"content":"**Use case: Edit a person\u0027s details**","lastModifiedDate":"2024-03-06"},{"lineNumber":440,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":441,"author":{"gitId":"NusMinato"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":442,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":443,"author":{"gitId":"NusMinato"},"content":"1.  User requests to edit a person\u0027s details","lastModifiedDate":"2024-03-06"},{"lineNumber":444,"author":{"gitId":"NusMinato"},"content":"2.  RainbowDragon prompts user to select a person from the list","lastModifiedDate":"2024-03-06"},{"lineNumber":445,"author":{"gitId":"NusMinato"},"content":"3.  User selects a person from the list","lastModifiedDate":"2024-03-06"},{"lineNumber":446,"author":{"gitId":"NusMinato"},"content":"4.  RainbowDragon shows the person\u0027s details.","lastModifiedDate":"2024-03-06"},{"lineNumber":447,"author":{"gitId":"NusMinato"},"content":"5.  User edits the details","lastModifiedDate":"2024-03-06"},{"lineNumber":448,"author":{"gitId":"NusMinato"},"content":"6.  RainbowDragon validates the edited details","lastModifiedDate":"2024-03-06"},{"lineNumber":449,"author":{"gitId":"NusMinato"},"content":"7.  RainbowDragon updates the person\u0027s details","lastModifiedDate":"2024-03-06"},{"lineNumber":450,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":451,"author":{"gitId":"NusMinato"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":452,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":453,"author":{"gitId":"NusMinato"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":454,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":455,"author":{"gitId":"NusMinato"},"content":"* 3a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":456,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":457,"author":{"gitId":"NusMinato"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":458,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":459,"author":{"gitId":"NusMinato"},"content":"* 5a. User cancels the operation.","lastModifiedDate":"2024-03-06"},{"lineNumber":460,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":461,"author":{"gitId":"NusMinato"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":462,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":463,"author":{"gitId":"NusMinato"},"content":"* 6a. User enters invalid details.","lastModifiedDate":"2024-03-06"},{"lineNumber":464,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":465,"author":{"gitId":"NusMinato"},"content":"    * 6a1. RainbowDragon shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":466,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":467,"author":{"gitId":"NusMinato"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2024-03-06"},{"lineNumber":468,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":469,"author":{"gitId":"NusMinato"},"content":"**Use case: View all persons**","lastModifiedDate":"2024-03-06"},{"lineNumber":470,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":471,"author":{"gitId":"NusMinato"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":472,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":473,"author":{"gitId":"NusMinato"},"content":"1.  User requests to view all persons","lastModifiedDate":"2024-03-06"},{"lineNumber":474,"author":{"gitId":"NusMinato"},"content":"2.  RainbowDragon shows a list of all persons.","lastModifiedDate":"2024-03-06"},{"lineNumber":475,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":476,"author":{"gitId":"NusMinato"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":477,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":478,"author":{"gitId":"NusMinato"},"content":"**Use case: Search for a person**","lastModifiedDate":"2024-03-06"},{"lineNumber":479,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":480,"author":{"gitId":"NusMinato"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":481,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":482,"author":{"gitId":"NusMinato"},"content":"1.  User requests to search for a person","lastModifiedDate":"2024-03-06"},{"lineNumber":483,"author":{"gitId":"NusMinato"},"content":"2.  RainbowDragon prompts user to enter search keyword","lastModifiedDate":"2024-03-06"},{"lineNumber":484,"author":{"gitId":"NusMinato"},"content":"3.  User enters search keyword","lastModifiedDate":"2024-03-06"},{"lineNumber":485,"author":{"gitId":"NusMinato"},"content":"4.  RainbowDragon searches for persons matching the keyword","lastModifiedDate":"2024-03-06"},{"lineNumber":486,"author":{"gitId":"NusMinato"},"content":"5.  RainbowDragon shows a list of matching persons","lastModifiedDate":"2024-03-06"},{"lineNumber":487,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":488,"author":{"gitId":"NusMinato"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":489,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":490,"author":{"gitId":"NusMinato"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":491,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":492,"author":{"gitId":"NusMinato"},"content":"* 3a. User cancels the operation.","lastModifiedDate":"2024-03-06"},{"lineNumber":493,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":494,"author":{"gitId":"NusMinato"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":495,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":496,"author":{"gitId":"NusMinato"},"content":"**Use case: View all persons**","lastModifiedDate":"2024-03-06"},{"lineNumber":497,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":498,"author":{"gitId":"NusMinato"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":499,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":500,"author":{"gitId":"NusMinato"},"content":"1.  User requests to view all persons","lastModifiedDate":"2024-03-06"},{"lineNumber":501,"author":{"gitId":"NusMinato"},"content":"2.  RainbowDragon shows a list of all persons","lastModifiedDate":"2024-03-06"},{"lineNumber":502,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":503,"author":{"gitId":"NusMinato"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"ChenXy128"},"content":"1.  Should work on any _mainstream OS_.","lastModifiedDate":"2024-03-06"},{"lineNumber":508,"author":{"gitId":"ChenXy128"},"content":"2.  Java `11` or above installed in the user\u0027s device.","lastModifiedDate":"2024-03-06"},{"lineNumber":509,"author":{"gitId":"ChenXy128"},"content":"3.  The application should not have access to the internet.","lastModifiedDate":"2024-03-07"},{"lineNumber":510,"author":{"gitId":"ChenXy128"},"content":"4.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-07"},{"lineNumber":511,"author":{"gitId":"ChenXy128"},"content":"5.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-07"},{"lineNumber":512,"author":{"gitId":"ChenXy128"},"content":"6.  The user should be someone who plays strategy games, MOBAs (Multiplayer Online Battle Arenas), or certain RPGs (Role-Playing Games).","lastModifiedDate":"2024-03-07"},{"lineNumber":513,"author":{"gitId":"ChenXy128"},"content":"7.  The application should implement robust security measures to protect user data as the user will be adding sensitive information of others.","lastModifiedDate":"2024-03-07"},{"lineNumber":514,"author":{"gitId":"ChenXy128"},"content":"8.  The application will provide comprehensive documentation and tutorials for users to get the most out of the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":515,"author":{"gitId":"ChenXy128"},"content":"9.  The application should feature an optimized search algorithm to handle quick searches through extensive data, providing immediate feedback and results to users.","lastModifiedDate":"2024-03-07"},{"lineNumber":516,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":523,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"Xuyan0518"},"content":"* **AddressBook**: A software application used to store and manage contact information, such as names, phone numbers, and email addresses.","lastModifiedDate":"2024-03-06"},{"lineNumber":525,"author":{"gitId":"Xuyan0518"},"content":"* **Actor**: In the context of use cases, an actor is a user or system component that interacts with the system to achieve a specific goal.","lastModifiedDate":"2024-03-06"},{"lineNumber":526,"author":{"gitId":"Xuyan0518"},"content":"* **Use Case**: A description of how a system interacts with its users or other systems to achieve a particular goal.","lastModifiedDate":"2024-03-06"},{"lineNumber":527,"author":{"gitId":"Xuyan0518"},"content":"* **MSS**: Stands for Main Success Scenario, which outlines the basic steps that should occur when a use case is executed successfully.","lastModifiedDate":"2024-03-06"},{"lineNumber":528,"author":{"gitId":"Xuyan0518"},"content":"* **Extension**: Describes alternative paths or exceptional conditions that may occur during the execution of a use case.","lastModifiedDate":"2024-03-06"},{"lineNumber":529,"author":{"gitId":"Xuyan0518"},"content":"* **GUI**: Stands for Graphical User Interface, which is a visual way for users to interact with a software application using graphical elements such as windows, buttons, and menus.","lastModifiedDate":"2024-03-06"},{"lineNumber":530,"author":{"gitId":"Xuyan0518"},"content":"* **CLI**: Stands for Command Line Interface, which is a text-based way for users to interact with a software application by typing commands into a terminal or command prompt.","lastModifiedDate":"2024-03-06"},{"lineNumber":531,"author":{"gitId":"Xuyan0518"},"content":"* **Timestamp**: A record of the date and time when an event occurred, often used for tracking changes or actions in a system.","lastModifiedDate":"2024-03-06"},{"lineNumber":532,"author":{"gitId":"Xuyan0518"},"content":"* **Status Bar**: A horizontal bar typically located at the bottom of a window or application interface, providing information about the current status or state of the system.","lastModifiedDate":"2024-03-06"},{"lineNumber":533,"author":{"gitId":"Xuyan0518"},"content":"* **Exploratory Testing**: A testing approach where testers explore the software application freely, without predefined test cases, to discover bugs or issues.","lastModifiedDate":"2024-03-06"},{"lineNumber":534,"author":{"gitId":"Xuyan0518"},"content":"* **Jar file**: Stands for Java Archive file, which is a compressed file format used to package Java applications, libraries, or components.","lastModifiedDate":"2024-03-06"},{"lineNumber":535,"author":{"gitId":"Xuyan0518"},"content":"* **Prerequisites**: Conditions or actions that must be met or completed before a test case can be executed.","lastModifiedDate":"2024-03-06"},{"lineNumber":536,"author":{"gitId":"Xuyan0518"},"content":"* **Test Case**: A detailed description of steps to be followed and expected outcomes to be observed when testing a specific aspect or feature of a software application.","lastModifiedDate":"2024-03-06"},{"lineNumber":537,"author":{"gitId":"Xuyan0518"},"content":"* **Corrupted Data File**: A file that has been damaged or altered in such a way that it cannot be read or processed correctly by the software application.","lastModifiedDate":"2024-03-06"},{"lineNumber":538,"author":{"gitId":"Xuyan0518"},"content":"* **Status Message**: Information displayed to the user indicating the outcome or result of an action performed by the system.","lastModifiedDate":"2024-03-06"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":548,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":549,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ChenXy128":29,"HongRay":38,"-":368,"Cedricaca":11,"NusMinato":112,"Xuyan0518":35}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"# **Rainbow Dragon User Guide**","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"Welcome to the Rainbow Dragon User Guide! \u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"If you are:","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"- Passionate about being the **BEST** player in **ANY** games that you like","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"- Striving to build an unprecedentedly powerful clan or multiple clans","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"- Someone who values **camaraderie** and wants to **maintain and manage** good relationships with all your gaming friends","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"- More used to typing on keyboards than using the mouse \u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"***Rainbow Dragon*** is just the right application for you!","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"[Quick start](#quick-start)","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"[Features](#features)","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"1. [Viewing help : help](#viewing-the-menu-of-commands-help)","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"2. [Adding a person: add](#adding-a-person-add)","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"3. [Adding a category to a person](#adding-a-category-to-a-person-addcategory)","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"4. [Listing all persons : list](#listing-all-persons-list)","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"5. [Editing a person : edit](#editing-a-person-edit)","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"6. [Finding person/s : find](#finding-persons-by-category-and-description-or-by-tag-find)","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"7. [Deleting a person : delete](#deleting-a-person-delete)","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"8. [Deleting a category of a person : deleteCategory](#deleting-a-category-of-a-person-deletecategory)","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"9. [Clearing all entries : clear](#clearing-all-entries-clear)","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"10. [Undoing a command : undo](#undoing-a-command)","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"11. [Redoing an undo command : redo](#redoing-an-undo-command)","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"12. [Grouping all persons by Category : group](#group-all-persons-by-category-group)","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"13. [Exiting the program : exit](#exiting-the-program-exit)","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"[Saving the data](#saving-the-data)","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"[Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"[FAQ](#faq)","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"[Known issues](#known-issues)","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"[Command summary](#command-summary)","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"1. Download the latest `Rainbow_Dragon.jar` from [here](https://github.com/AY2324S2-CS2103T-W13-3/tp/releases/).","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"1. Open a command terminal, navigate into the folder you put the jar file in using `cd FILE_PATH`, and use the `java -jar Rainbow_Dragon.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"   A GUI similar to the below should appear in a few seconds if you are a first-time user. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"   ![Ui](images/Ui.png) \u003cbr\u003e\u003cbr\u003e The UI below will only be displayed if `group` command is called and the different groups will be displayed as follows:  ![UiWithGroups](images/UiWithGroups.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"   * `add n/John Doe` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"---------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"  e.g. in `add n/NAME c/CATEGORY d/DESCRIPTION`, `NAME` is a parameter which can be used as `add n/John Doe c/clan d/rainbow dragon`.","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"HongRay"},"content":"* In Rainbow Dragon, there are no restrictions on the types of fields you can create. ","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"HongRay"},"content":"The application supports custom fields, enabling you to record any information you need, tailored to your specific requirements.","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"HongRay"},"content":"* We call these fields **categories** and `c/` is the prefix for category and `d/` is the prefix for the description for the category. ","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"HongRay"},"content":"* Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"HongRay"},"content":"  e.g. `[t/TAG]…​` can be used as (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":96,"author":{"gitId":"HongRay"},"content":"* Rainbow Dragon accepts duplicated name as a gamer might have the same name and play a different game.","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"Cedricaca"},"content":"* We accept non-alphanumeric characters, such as \u0027/\u0027, numbers and spaces for all names, categories, descriptions and tags. Thus, please follow the command format and prefixes, such as leaving a space before each prefix.","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"Cedricaca"},"content":"* Using invalid prefixes such as \u0027e/\u0027, or not leaving spaces such as \u0027add n/Johnt/friend\u0027, will not throw errors as these characters are acceptable inputs. ","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"Cedricaca"},"content":"* Only duplicate Categories for the same Person is not allowed. There can be multiple Persons with the same name, categories and descriptions, and are not considered duplicates.","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"Cedricaca"},"content":"* Panels that displays command responses, Persons, and Groups is scrollable horizontally! This is to ensure long entries are still able to be displayed.","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"HongRay"},"content":"* The following command supports batch processing: ","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"HongRay"},"content":"  1. add","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"HongRay"},"content":"  2. addCategory","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"HongRay"},"content":"  3. edit","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"HongRay"},"content":"  4. deleteCategory","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"Cedricaca"},"content":"  5. find","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"HongRay"},"content":"\u003e **Note**","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"HongRay"},"content":"\u003e * After calling `group`, subsequent commands will not refresh your groups until you call `group` again.","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"Xuyan0518"},"content":"## Viewing the menu of commands: `help`","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Xuyan0518"},"content":"Shows a window explaining all the commands and their respective format.","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"Xuyan0518"},"content":"At the bottom of the help window, you can directly copy the URL to our user guide and paste it into your browser to access it.","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":127,"author":{"gitId":"Cedricaca"},"content":"The help menu requires a mouse to close. This is intentional to allow for using the app while referencing the help menu.","lastModifiedDate":"2024-04-10"},{"lineNumber":128,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"Xuyan0518"},"content":"*Format:* `help`","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"Xuyan0518"},"content":"## Listing all persons : `list`","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"Xuyan0518"},"content":"*Format:* `list`","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"Xuyan0518"},"content":"Example:","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"Xuyan0518"},"content":"![ListCommand](images/ListCommand.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"Xuyan0518"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"Cedricaca"},"content":"## Adding a person: `add`","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Cedricaca"},"content":"*Format:* `add n/NAME [t/TAG…] [c/ CATEGORY d/DESCRIPTION]` ","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"Xuyan0518"},"content":"**Note:** ","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"Xuyan0518"},"content":"- A person can have any number of tags (including 0).","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"Xuyan0518"},"content":"- A person can have any number of categories with corresponding description. **But the number of categories and descriptions must match.**","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"Cedricaca"},"content":"- Adding of tags, or category and description, is optional.","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"Cedricaca"},"content":"- Name added is a Description, with \"Name\" as its Category.","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"Cedricaca"},"content":"- If using batch processing, the number of specified Categories and Descriptions must be the same!","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"Cedricaca"},"content":"- \u003c/box\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"Xuyan0518"},"content":"* `add n/John Doe t/friend` Adds the person named \"John Doe\" to the address book with one tag \"friend\"","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"Xuyan0518"},"content":"* `add n/Betsy Crowe t/lover t/family` Adds the person named \"Betsy Crowe\" to the address book with two tags, \"lover\" and \"family\".","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"Xuyan0518"},"content":"* `add n/Cedric t/classmate c/class d/CS2103T` Adds the person named \"Cedric\" to the address book with the tag \"classmate\". It also adds a category \"class\" with corresponding description \"CS2103T\".","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"Xuyan0518"},"content":"* `add n/Joe t/classmate c/class d/CS2103T c/team d/3` Adds the person named \"Joe\"  to the address book with the tag \"classmate\". It also adds 2 categories, \"class\" and \"team\" with corresponding descriptions \"CS2103T\" and \"3\".","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"Xuyan0518"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"Xuyan0518"},"content":"Successful execution of the above commands will result in the following being displayed:","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"Xuyan0518"},"content":"![SuccessfulAddCommand](images/SuccessfulAddCommand.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"Cedricaca"},"content":"## Editing a person : `edit`","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"Cedricaca"},"content":"*Format:* `edit INDEX [c/CATEGORY d/DESCRIPTION] [t/TAG…]`","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"HongRay"},"content":"* The category you want to edit must **exist**.","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"HongRay"},"content":"* Description must be provided if you want to change a description for a category.","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"HongRay"},"content":"* You can just edit the tags without needing to specify the category and description.","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"HongRay"},"content":"* If you want to add more than 1 tag, cascade your commands. ","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"Cedricaca"},"content":"* If using batch processing, the number of specified Categories and Descriptions must be the same!","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"Cedricaca"},"content":"* Examples:","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"Xuyan0518"},"content":"* `edit 1 c/Clan d/rainbow` Edits person 1\u0027s clan name to \"rainbow\".","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"Cedricaca"},"content":"* `edit 1 c/Clan d/rainbow t/warrior` Edits person 1\u0027s clan name to \"rainbow\" and his tags to \"warrior\".","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"Xuyan0518"},"content":"* `edit 1 t/warrior t/mage` Edits person 1\u0027s tags to \"warrior\" and \"mage\".","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"Xuyan0518"},"content":"![EditCommand](images/EditCommand.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"Cedricaca"},"content":"## Adding a category to a person : `addCategory`","lastModifiedDate":"2024-04-10"},{"lineNumber":198,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":199,"author":{"gitId":"Cedricaca"},"content":"Adds an entry to an existing person in the address book.","lastModifiedDate":"2024-03-23"},{"lineNumber":200,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":201,"author":{"gitId":"Xuyan0518"},"content":"*Format:* `addCategory INDEX c/CATEGORY d/DESCRIPTION`","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":203,"author":{"gitId":"Cedricaca"},"content":"* Adds an entry to the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-23"},{"lineNumber":204,"author":{"gitId":"Cedricaca"},"content":"* The category you want to add must not already **exist** for that person.","lastModifiedDate":"2024-03-23"},{"lineNumber":205,"author":{"gitId":"Cedricaca"},"content":"* Both Category and Description must be provided.","lastModifiedDate":"2024-03-23"},{"lineNumber":206,"author":{"gitId":"Cedricaca"},"content":"* If using batch processing, the number of specified Categories and Descriptions must be the same!","lastModifiedDate":"2024-04-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-23"},{"lineNumber":209,"author":{"gitId":"Xuyan0518"},"content":"* `addCategory 1 c/Clan d/rainbow` Adds the clan name \"rainbow\" to person 1.","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"Xuyan0518"},"content":"* `addCategory 1 t/class d/warrior` Adds the class \"warrior\" to person 1.","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"Xuyan0518"},"content":"![AddCategoryCommand](images/AddCategoryCommand.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"Cedricaca"},"content":"## Finding persons by category and description or by tag: `find`","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"ChenXy128"},"content":"Find a specific person from the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"Xuyan0518"},"content":"*Format:* `find c/CATEGORY d/DESCRIPTON` or `find t/TAG`","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"ChenXy128"},"content":"* Find anyone in the address book with matching category and description or tag only","lastModifiedDate":"2024-03-24"},{"lineNumber":223,"author":{"gitId":"ChenXy128"},"content":"* Category refers to a field a person has, such as `name`, `phone` and etc.","lastModifiedDate":"2024-03-24"},{"lineNumber":224,"author":{"gitId":"ChenXy128"},"content":"* Tag refers to the specific type of person in the address book, such as `friends`, `neighbours` and etc.","lastModifiedDate":"2024-03-24"},{"lineNumber":225,"author":{"gitId":"Cedricaca"},"content":"* If using batch processing, the number of specified Categories and Descriptions must be the same!","lastModifiedDate":"2024-04-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"Xuyan0518"},"content":"* `find c/name d/Joe` Finds the person named \"Joe\" in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"Xuyan0518"},"content":"* `find t/friend` Finds the person whose tag is \"friend\".","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"Xuyan0518"},"content":"![FindCommand](images/FindCommand.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"Cedricaca"},"content":"## Deleting a person : `delete`","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"Xuyan0518"},"content":"*Format:* `delete INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"Xuyan0518"},"content":"* The index **must NOT be greater than the number of contacts in the address book**.","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"Xuyan0518"},"content":"* After `delete` command is called, there will be a pop-up alert asking whether the user wants to delete the person.","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"Xuyan0518"},"content":"![DeleteAlert](images/DeleteAlert.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"Xuyan0518"},"content":"* If the user clicks \"Ok\", the person will be deleted from the address book. ","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"Xuyan0518"},"content":"* If the user clicks \"Cancel\", the deletion will be aborted. ","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"Xuyan0518"},"content":"* `delete 1` deletes the first person in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"Xuyan0518"},"content":"![DeleteCommand](images/DeleteCommand.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"Cedricaca"},"content":"## Deleting a category of a person : `deleteCategory`","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"NusMinato"},"content":"Deletes the specified category of a person.","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"Xuyan0518"},"content":"*Format:* `deleteCategory INDEX c/CATEGORY`","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"NusMinato"},"content":"* Deletes the `CATEGORY` of a person at the specified `INDEX`.","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"NusMinato"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"NusMinato"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"NusMinato"},"content":"* The category **must exist**.","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"Cedricaca"},"content":"* You cannot delete a person\u0027s name!","lastModifiedDate":"2024-04-10"},{"lineNumber":266,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":267,"author":{"gitId":"NusMinato"},"content":"Examples:","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"Xuyan0518"},"content":"* `deleteCategory 2 c/Email` deletes the category \"Email\" of the second person in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"Xuyan0518"},"content":"* `deleteCategory 1 c/Address` deletes the category \"Address\" of the first person in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"Xuyan0518"},"content":"![DeleteCategory](images/DeleteCategory.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"Cedricaca"},"content":"## Clearing all entries : `clear`","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"Xuyan0518"},"content":"* After the `clear` command is called, there will be a pop-up alert asking whether the user really wants to clear the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"Xuyan0518"},"content":"![ClearAlert](images/ClearAlert.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"Xuyan0518"},"content":"* If the user clicks \"Ok\", the address book will be cleared.","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"Xuyan0518"},"content":"* If the user clicks \"Cancel\", the `clear` action will be aborted.","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"Xuyan0518"},"content":"**WARNING: This command CANNOT be undone!**","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"Xuyan0518"},"content":"*Format:* `clear`","lastModifiedDate":"2024-04-04"},{"lineNumber":285,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"Xuyan0518"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"Xuyan0518"},"content":"![ClearCommand](images/ClearCommand.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"Cedricaca"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":290,"author":{"gitId":"Cedricaca"},"content":"**Caution:**","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"Cedricaca"},"content":"You cannot undo or redo a clear command!","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"Cedricaca"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":296,"author":{"gitId":"HongRay"},"content":"## Undoing a command","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"HongRay"},"content":"Undoes a non-clear command.","lastModifiedDate":"2024-04-04"},{"lineNumber":298,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":299,"author":{"gitId":"HongRay"},"content":"Format `undo`","lastModifiedDate":"2024-04-04"},{"lineNumber":300,"author":{"gitId":"HongRay"},"content":"- Able to go back to the most recent state of the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":301,"author":{"gitId":"HongRay"},"content":"- Supports multiple `undo` actions, until the point where the address book was not changed during the same launch.","lastModifiedDate":"2024-04-04"},{"lineNumber":302,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":303,"author":{"gitId":"HongRay"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"HongRay"},"content":"## Redoing an undo command","lastModifiedDate":"2024-04-04"},{"lineNumber":305,"author":{"gitId":"HongRay"},"content":"Redoes an undo command.","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":307,"author":{"gitId":"HongRay"},"content":"Format `redo`","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"HongRay"},"content":"- Able to go back to the previous state of the address book after an undo command.","lastModifiedDate":"2024-04-04"},{"lineNumber":310,"author":{"gitId":"HongRay"},"content":"- Supports multiple `redo` actions, until the point where there is no more existing undo state.","lastModifiedDate":"2024-04-04"},{"lineNumber":311,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":312,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":313,"author":{"gitId":"Cedricaca"},"content":"## Group all Persons by Category : `Group`","lastModifiedDate":"2024-04-04"},{"lineNumber":314,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":315,"author":{"gitId":"Cedricaca"},"content":"Groups the addressbook by a specified category","lastModifiedDate":"2024-04-04"},{"lineNumber":316,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":317,"author":{"gitId":"Cedricaca"},"content":"Format: `group c/CATEGORY`","lastModifiedDate":"2024-04-10"},{"lineNumber":318,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":319,"author":{"gitId":"Cedricaca"},"content":"* Groups all persons by the specified category.","lastModifiedDate":"2024-04-04"},{"lineNumber":320,"author":{"gitId":"Cedricaca"},"content":"* Persons with the same description for the specified category will be grouped together.","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"Cedricaca"},"content":"* Persons without this category will be grouped under \u0027No Group\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":322,"author":{"gitId":"Cedricaca"},"content":"* If this category does not exist for any Person, all Persons will be listed under \u0027No Group\u0027","lastModifiedDate":"2024-04-10"},{"lineNumber":323,"author":{"gitId":"Cedricaca"},"content":"* The group panel will not refresh unless \u0027Group\u0027 is called.","lastModifiedDate":"2024-04-04"},{"lineNumber":324,"author":{"gitId":"Cedricaca"},"content":"* If the app is closed and reopened, active groups will not be saved. Call \u0027Group\u0027 again to redisplay the groups.","lastModifiedDate":"2024-04-10"},{"lineNumber":325,"author":{"gitId":"Cedricaca"},"content":"* If you wish to ungroup, call the Undo function to return the Group Panels to a previous state.","lastModifiedDate":"2024-04-10"},{"lineNumber":326,"author":{"gitId":"Cedricaca"},"content":"* If the group panels are being cut off, please maximise your window to see the entire group panel.","lastModifiedDate":"2024-04-10"},{"lineNumber":327,"author":{"gitId":"Cedricaca"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":328,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"Cedricaca"},"content":"**Tip:** Each Group Panel is scrollable horizontally! There is a invisible scrollpane for the group name, as well as for the names of the Persons in that group.","lastModifiedDate":"2024-04-10"},{"lineNumber":330,"author":{"gitId":"Cedricaca"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"Cedricaca"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"Cedricaca"},"content":"* `list` followed by `group c/clan`  groups all persons with the same clan together","lastModifiedDate":"2024-04-04"},{"lineNumber":334,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":335,"author":{"gitId":"HongRay"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":336,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":337,"author":{"gitId":"Cedricaca"},"content":"## Exiting the program : `exit`","lastModifiedDate":"2024-04-04"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2024-04-04"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":341,"author":{"gitId":"Cedricaca"},"content":"*Format:* `exit`","lastModifiedDate":"2024-04-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":343,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":345,"author":{"gitId":"Cedricaca"},"content":"## Saving the data","lastModifiedDate":"2024-04-04"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"Cedricaca"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":351,"author":{"gitId":"Cedricaca"},"content":"## Editing the data file","lastModifiedDate":"2024-04-04"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":355,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":357,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":358,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12"},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":361,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":363,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"Cedricaca"},"content":"**Q**: Why are my Descriptions being cut off?","lastModifiedDate":"2024-04-10"},{"lineNumber":369,"author":{"gitId":"Cedricaca"},"content":"**A**: All panels are scrollable horizontally.","lastModifiedDate":"2024-04-10"},{"lineNumber":370,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":371,"author":{"gitId":"Cedricaca"},"content":"**Q**: How do i save my data?","lastModifiedDate":"2024-04-10"},{"lineNumber":372,"author":{"gitId":"Cedricaca"},"content":"**A**: All data is saved automatically after every command.","lastModifiedDate":"2024-04-10"},{"lineNumber":373,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":374,"author":{"gitId":"Cedricaca"},"content":"**Q**: Can i save characters, objects and game details instead of Persons?","lastModifiedDate":"2024-04-10"},{"lineNumber":375,"author":{"gitId":"Cedricaca"},"content":"**A**: Yes! Our inputs allow any characters, so feel free to save any type of information. You can tag these objects to allow for easier finding in the future.","lastModifiedDate":"2024-04-10"},{"lineNumber":376,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":377,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":389,"author":{"gitId":"Cedricaca"},"content":"**Add**    | `add n/NAME [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho t/friend t/colleague`","lastModifiedDate":"2024-03-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"Cedricaca"},"content":"**AddCategory**  | `addCategory INDEX c/CATEGORY d/DESCRIPTION`\u003cbr\u003e e.g., `addCategory 1 c/class d/warrior`","lastModifiedDate":"2024-04-10"},{"lineNumber":392,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"Cedricaca"},"content":"**DeleteCategory**  | `deleteCategory INDEX c/CATEGORY…​` \u003cbr\u003e e.g., `deleteCategory 1 c/clan`","lastModifiedDate":"2024-04-10"},{"lineNumber":394,"author":{"gitId":"Cedricaca"},"content":"**Edit**   | `edit INDEX c/CATEGORY d/DESCRIPTION …​`\u003cbr\u003e e.g.,`edit 2 c/clan d/rainbow` \u003cbr\u003e\u003cbr\u003e `edit INDEX t/TAG …​` \u003cbr\u003e e.g.,`edit 1 t/warrior t/mage`","lastModifiedDate":"2024-04-10"},{"lineNumber":395,"author":{"gitId":"Cedricaca"},"content":"**Find**   | `find c/CATEGORY d/DESCRIPTION…​`\u003cbr\u003e e.g., `find c/clan d/rainbow` \u003cbr\u003e\u003cbr\u003e `find t/[TAG]…​` \u003cbr\u003e e.g., `find t/leader`","lastModifiedDate":"2024-04-10"},{"lineNumber":396,"author":{"gitId":"HongRay"},"content":"**Undo**   | `undo`","lastModifiedDate":"2024-04-04"},{"lineNumber":397,"author":{"gitId":"HongRay"},"content":"**Redo**   | `redo`","lastModifiedDate":"2024-04-04"},{"lineNumber":398,"author":{"gitId":"Cedricaca"},"content":"**Group**  | `group c/CATEGORY` \u003cbr\u003e e.g., `group c/clan`","lastModifiedDate":"2024-04-10"},{"lineNumber":399,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":402,"author":{"gitId":"Cedricaca"},"content":"### Glossary","lastModifiedDate":"2024-04-10"},{"lineNumber":403,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":404,"author":{"gitId":"Cedricaca"},"content":"* **Category**: The type of field to assign to a Person. For example, \"Name\", \"Age\", \"Class\",","lastModifiedDate":"2024-04-10"},{"lineNumber":405,"author":{"gitId":"Cedricaca"},"content":"* **Description**: The content of the field assigned to a Person. For example, for a category \"Name\", description can be \"John\". ","lastModifiedDate":"2024-04-10"},{"lineNumber":406,"author":{"gitId":"Cedricaca"},"content":"* **Tag**: A grouping or description for a Person that does not have a category, such as \"Family\", \"Friend\", or \"Enemy\"","lastModifiedDate":"2024-04-10"},{"lineNumber":407,"author":{"gitId":"Cedricaca"},"content":"* **Batch Processing** : Allows for multiple inputs at a time. For example, addCategory 1 c/clan d/Warriors c/Type d/Allies …","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"ChenXy128":4,"HongRay":48,"-":149,"Cedricaca":125,"Xuyan0518":70,"NusMinato":11}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eRainbow Dragon\u003c/a\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"HongRay":1,"-":66}},{"path":"docs/diagrams/AddCategorySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"@startuml","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"!include style.puml","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"participant \":AddCategoryCommandParser\" as AddCategoryCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"participant \"d:AddCategoryCommand\" as AddCategoryCommand LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"end box","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"end box","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"[-\u003e LogicManager : execute(\"addCategory 1 c/class d/warrior\")","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"activate LogicManager","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addCategory 1 c/class d/warrior\")","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"create AddCategoryCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"AddressBookParser -\u003e AddCategoryCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"activate AddCategoryCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"AddCategoryCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"deactivate AddCategoryCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"AddressBookParser -\u003e AddCategoryCommandParser : parse(\"addCategory 1 c/class d/warrior\")","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"activate AddCategoryCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"create AddCategoryCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"AddCategoryCommandParser -\u003e AddCategoryCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"activate AddCategoryCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"AddCategoryCommand --\u003e AddCategoryCommandParser :","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"deactivate AddCategoryCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"AddCategoryCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"deactivate AddCategoryCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"AddCategoryCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"destroy AddCategoryCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"LogicManager -\u003e AddCategoryCommand : execute(m)","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"activate AddCategoryCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"AddCategoryCommand -\u003e Model : SetPerson(PersontoEdit)","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"activate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"Model --\u003e AddCategoryCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"deactivate Model","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":"create CommandResult","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Cedricaca"},"content":"AddCategoryCommand -\u003e CommandResult","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"activate CommandResult","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"CommandResult --\u003e AddCategoryCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"AddCategoryCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"deactivate AddCategoryCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"@enduml","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Cedricaca":70}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"participant \"d:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"[-\u003e LogicManager : execute(\"add n/name t/tags\")","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add n/name t/tags\")","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"create AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"add n/name t/tags\")","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"create AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"activate AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"AddCommand --\u003e AddCommandParser :","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"destroy AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"LogicManager -\u003e AddCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"activate AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"AddCommand -\u003e Model : AddPerson(name, tags)","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"AddCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Xuyan0518":70}},{"path":"docs/diagrams/DeleteCategorySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NusMinato"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"NusMinato"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"NusMinato"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"NusMinato"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"NusMinato"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"NusMinato"},"content":"participant \":RainbowDragonParser\" as RainbowDragonParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"NusMinato"},"content":"participant \":DeleteCategoryCommandParser\" as DeleteCategoryCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"NusMinato"},"content":"participant \"d:DeleteCategoryCommand\" as DeleteCategoryCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"NusMinato"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"NusMinato"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"NusMinato"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"NusMinato"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"NusMinato"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"NusMinato"},"content":"[-\u003e LogicManager : execute(\"deleteCategory 1 c/Clan\")","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"NusMinato"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"NusMinato"},"content":"LogicManager -\u003e RainbowDragonParser : parseCommand(\"deleteCategory 1 c/Clan\")","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"NusMinato"},"content":"activate RainbowDragonParser","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"NusMinato"},"content":"create DeleteCategoryCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"NusMinato"},"content":"RainbowDragonParser -\u003e DeleteCategoryCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"NusMinato"},"content":"activate DeleteCategoryCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"NusMinato"},"content":"DeleteCategoryCommandParser --\u003e RainbowDragonParser","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"NusMinato"},"content":"deactivate DeleteCategoryCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"NusMinato"},"content":"RainbowDragonParser -\u003e DeleteCategoryCommandParser : parse(\"1 c/Clan\")","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"NusMinato"},"content":"activate DeleteCategoryCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"NusMinato"},"content":"create DeleteCategoryCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"NusMinato"},"content":"DeleteCategoryCommandParser -\u003e DeleteCategoryCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"NusMinato"},"content":"activate DeleteCategoryCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"NusMinato"},"content":"DeleteCategoryCommand --\u003e DeleteCategoryCommandParser :","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"NusMinato"},"content":"deactivate DeleteCategoryCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"NusMinato"},"content":"DeleteCategoryCommandParser --\u003e RainbowDragonParser : d","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"NusMinato"},"content":"deactivate DeleteCategoryCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"NusMinato"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"NusMinato"},"content":"DeleteCategoryCommandParser -[hidden]-\u003e RainbowDragonParser","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"NusMinato"},"content":"destroy DeleteCategoryCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"NusMinato"},"content":"RainbowDragonParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"NusMinato"},"content":"deactivate RainbowDragonParser","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"NusMinato"},"content":"LogicManager -\u003e DeleteCategoryCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"NusMinato"},"content":"activate DeleteCategoryCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"NusMinato"},"content":"DeleteCategoryCommand -\u003e Model : deleteEntry(Clan)","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"NusMinato"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"NusMinato"},"content":"Model --\u003e DeleteCategoryCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"NusMinato"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"NusMinato"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"NusMinato"},"content":"DeleteCategoryCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"NusMinato"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"NusMinato"},"content":"CommandResult --\u003e DeleteCategoryCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"NusMinato"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"NusMinato"},"content":"DeleteCategoryCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"NusMinato"},"content":"deactivate DeleteCategoryCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"NusMinato"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"NusMinato"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"NusMinato"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"NusMinato":70}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"participant \"d:EditPersonDescriptor\" as EditPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"[-\u003e LogicManager : execute(\"edit 1 c/Clan d/rainbow\")","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"activate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit 1 c/Clan d/rainbow\")","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"create EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"create EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"activate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"EditCommand --\u003e EditCommandParser :","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"EditCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"destroy EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"LogicManager -\u003e EditCommand : execute(m)","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"activate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"\u0027I have to change this from here on out EditPersonDescriptor class","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"create EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"EditCommand -\u003e EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"EditPersonDescriptor --\u003e EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"EditCommand -\u003e EditPersonDescriptor : createEditedPerson()","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"EditPersonDescriptor --\u003e EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"EditCommand -\u003e Model : setPerson()","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"create CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"activate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"HongRay"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"EditCommand --\u003e LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"HongRay"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"HongRay"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"HongRay"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"HongRay":86}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"participant \"d:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"[-\u003e LogicManager : execute(\"find c/name d/rain\")","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find c/name d/rain\")","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"create FindCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"c/name d/rain\")","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"create FindCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"activate FindCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"FindCommand --\u003e FindCommandParser :","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"FindCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"LogicManager -\u003e FindCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"activate FindCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(\"c/name d/rain\"))","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"FindCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"ChenXy128":70}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"Parser Classes\" as ParserClasses{","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" ParserClasses","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ParserClasses ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : \u003c\u003ccall\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"NusMinato"},"content":"LogicManager -down-\u003e Model","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"NusMinato"},"content":"LogicManager -down-\u003e Storage","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"NusMinato"},"content":"Logic .down.\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":44,"NusMinato":3}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"HiddenOutside .down.\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : \u003c\u003cuse\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":37,"NusMinato":1}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"Class JsonAdaptedEntry","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedEntry","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"Cedricaca":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"# Rainbow Dragon","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"**Rainbow Dragon** is an addressbook gaming app that uses CLI (Command Line Interface) tools that are designed for gamers who wants to **record detailed information about other players,**","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"**manage characters**, **track progress**, **add custom fields** to record and many more . It is ideal for those gamers that values **efficiency**, a **rich text-based interface**","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"and the ability to find information quickly without using their **mouse**.","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"* If you are interested in using Rainbow Dragon, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"* If you are interested about developing Rainbow Dragon, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"HongRay":6,"-":17}},{"path":"docs/team/members/Cedricaca.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"## Project: Rainbow Dragon Postmortem","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"### What went well","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"* The group dynamic is very bro-like, which means that everyone is looking out for each other.","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"* Everyone will attend meeting on time and will attend all meeting no matter the circumstances (for example, we would bring computer to everywhere we go and attend meeting even if we are hanging out with friends)","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"* Everyone is able to have some work assigned to them and everyone finished them","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"* We will help each other to verify our code and review seriously before merging into master.","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"* We will also help each other with their own issue if anyone has a problem.","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Cedricaca":7}},{"path":"docs/team/members/Chengzhen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NusMinato"},"content":"## Project: Rainbow Dragon Postmortem","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"NusMinato"},"content":"### **Reducing or even doing automated test:**","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"NusMinato"},"content":"1. In response to the initial challenge encountered with automated testing, modifications to the AB3 resulted in the incompatibility of several original test cases. Consequently, a decision was made to remove all test cases to prevent interference with the functionality of the GitHub automated testing system.","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"NusMinato"},"content":"2. Recognizing the importance of JUnit testing within our team project, efforts were made to selectively restore pertinent test cases. Despite the complexity of this task, we tried to sift through the existing test cases to identify and retain those deemed essential for ensuring the robustness and reliability of our software.","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"NusMinato"},"content":"3. Moving forward, the focus shifted to incorporating new JUnit test cases for the additional functionalities introduced in version 1.2 of the Rainbow Dragon. These test cases were meticulously crafted to validate the integrity and performance of the newly implemented features, thereby fortifying the overall quality of our product.","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"NusMinato":5}},{"path":"docs/team/members/Xiaoyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"## Project: Rainbow Dragon Postmortem","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"### **Switch of Workflow:**","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"1. Considering the structure of the CS2103T course, our team has chosen to implement a variation of the SCRUM agile methodology to enhance our project workflow.","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"To maintain a steady development pace, we\u0027ve instituted weekly sprints. Each sprint is designed to accomplish specific individual targets or components that contribute to the project\u0027s progress.","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"This systematic approach ensures continuous advancement despite our varying schedules and the possibility of unforeseen impediments stemming from other obligations.","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"2. Furthermore, recognizing the balancing act required due to our diverse commitments, we\u0027ve adapted the traditional daily SCRUM meetings into a more manageable, weekly format.","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"During these weekly SCRUM sessions, we take the opportunity to synthesize our efforts, discuss the work completed, and seamlessly integrate changes through the merging of pertinent Pull Requests (PRs).","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"This adjustment from daily to weekly meetings is intended to accommodate our team\u0027s unique dynamics while still upholding the spirit of collaboration and rapid iteration central to SCRUM\u0027s philosophy.","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Xuyan0518":9}},{"path":"docs/team/members/Xuyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"## Project: Rainbow Dragon Postmortem","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"### **Things that did not go very well in v1.2 of our product:**","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"1. One of the biggest problems that we faced was technical difficulties. Not many of us have prior experience in software engineering.","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"When we were first given a brownfield project, it took us a lot of time trying to understand the original code base and modify the code base to suit our product.","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"2. Another possible thing that did not go very well was time management, because some of our teammates were still involved in other businesses such as exams and external competitions.","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"Sometimes the tasks were overdue or were not deliverable by the deadline.","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Xuyan0518":6}},{"path":"docs/team/members/hongRay.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"## Project: Rainbow Dragon Postmortem","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"### **what can be improved in out work process.**","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"As mentioned in what went wrong, there were problems with time management and ineffective communication","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"within the group. Though, these \"what went wrong\" components are not as serious as they sound, it is important to note","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"and improve on it. Below are the consideration/implementations at that we had chosen to move forward to improve our workflow.","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"1. Given the nature of CS2103T course structure, we decided to adopt a SCRUM (or somewhat of a SCRUM) SDLC Process model to improve","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"   our workflow. We are currently holding sprints in each week to ensure that we at lease fulfil an individual component/goals that we","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"   set for ourselves. Of course, we have other commitments other than CS2103T, therefore, some of us might not be able to fulfil these goals","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"   under unforseen circumstances.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"   Additionally, we are having an \"extra\" SCRUM weekly meeting, instead of a daily meeting to consolidate what has been down, merge the relevant","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"   PR\u0027s.","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"2. To combat the ineffective communication that existed previously, we have decided to include a summary of every meeting that we attend in out","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"   person telegram group, on top of the summary in the Google Docs. Additionally, we would effectively set GitHub issues, with deadline, as a means to remind other","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"   members of the tasks at hand.","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Xuyan0518":17}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-7.6.2-bin.zip","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"HongRay":1,"-":4}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"        Font.loadFont(MainApp.class.getResourceAsStream(\"/docs/Pixel_font/PressStart2P-Regular.ttf\"), 14);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"HongRay":2,"-":41}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"    ObservableList\u003cPerson\u003e getFilteredGroupPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"HongRay":2,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"    public ObservableList\u003cPerson\u003e getFilteredGroupPersonList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        return model.getFilteredGroupPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"HongRay":4,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"    public static final String MESSAGE_CANNOT_DELETE_NAME \u003d \"You can not delete the name of the person.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"        for (int i \u003d 0; i \u003c person.getList().size(); i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"            Entry e \u003d person.getList().get(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"            builder.append(e.getCategory());","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"            builder.append(\": \");","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"            builder.append(e.getDescription());","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"            builder.append(\"; \");","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"        builder.append(\"Tags: \");","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":43,"Cedricaca":9,"NusMinato":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCategoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":" * Class for add category command","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"public class AddCategoryCommand extends Command {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"    public static final String COMMAND_WORD \u003d \"addCategory\";","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a category to a person \"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"            + \"by the index number used in the displayed person list.\\n \"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY NAME] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"            + PREFIX_CATEGORY + \"CLAN \"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"            + PREFIX_DESCRIPTION + \"KINGDOMS\";","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Added all entries to Person %1$s\";","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"    public static final String ENTRY_NOT_ADDED \u003d \"Both fields to add must be provided.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"    public static final String MESSAGE_DUPLICATE_CATEGORY \u003d \"No duplicate categories allowed.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"    public static final String DIFFERENT_NUMBER_CATEGORIES_DESCRIPTIONS \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"            \"Number of specified categories and descriptions must be the same.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"    private final Index index;","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"    private final EntryList entrylist;","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"     * @param entrylist the person\u0027s entrylist","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"    public AddCategoryCommand(Index index, EntryList entrylist) {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"        requireNonNull(entrylist);","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"        this.entrylist \u003d entrylist;","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"        //Gets the list of already existing person","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"        //Get the person you want to edit based on index","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"        Person original \u003d personToEdit.deepCopy();","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"        for (int i \u003d 0; i \u003c entrylist.size(); i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"            Entry toAdd \u003d entrylist.get(i);","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"            Entry test \u003d personToEdit.getEntry(toAdd.getCategory());","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"            if (test !\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_CATEGORY);","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Cedricaca"},"content":"        for (int i \u003d 0; i \u003c entrylist.size(); i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"Cedricaca"},"content":"            Entry entry \u003d entrylist.get(i);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"Cedricaca"},"content":"            personToEdit.addEntry(entry);","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"        model.savePersonState(personToEdit, original);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"        ModelManager.getActionTracker().push(false);","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"NusMinato"},"content":"        model.clearUndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"Cedricaca"},"content":"        model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"Cedricaca"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"Cedricaca"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"Cedricaca"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(personToEdit)","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"Cedricaca"},"content":"        ));","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"Cedricaca"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"Cedricaca"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"Cedricaca"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"Cedricaca"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"Cedricaca"},"content":"        return other instanceof AddCategoryCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"Cedricaca"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"Cedricaca"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"Cedricaca"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"Cedricaca"},"content":"                .add(\"entrylist\", entrylist)","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"Cedricaca"},"content":"                .toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ChenXy128":4,"HongRay":2,"Cedricaca":99,"NusMinato":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"     * The command word for adding a person.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"     * Usage message for the add command.","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY]... \"","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]...\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"            + PREFIX_CATEGORY + \"clan \"","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"            + PREFIX_DESCRIPTION + \"rainbow\";","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"     * Message indicating successful addition of a person.","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    public static final String MESSAGE_DUPLICATE_NAME \u003d \"This person already exists in the address book!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"    private final EntryList entryList;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"     * Creates an AddCommand to add the specified person.","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"     * @param person    The person to be added.","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"     * @param entryList The list of entries associated with the person.","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"    public AddCommand(Person person, EntryList entryList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"        this.toAdd \u003d person;","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"        this.entryList \u003d entryList;","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"     * Executes the add command by adding the person to the model.","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"     * @param model The model in which the person is to be added.","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"     * @return CommandResult indicating the outcome of the command execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"        ModelManager.getActionTracker().push(false);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"NusMinato"},"content":"        model.clearUndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"        assert toAdd !\u003d null : \"Person to add cannot be null\";","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_NAME);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"        if (entryList \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"            for (int i \u003d 0; i \u003c entryList.size(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"                Entry entry \u003d entryList.get(i);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"                toAdd.addEntry(entry);","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"            model.addPerson(toAdd);","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"     * Checks equality with another object.","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"Xuyan0518"},"content":"     * Generates a string representation of the AddCommand.","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"Xuyan0518"},"content":"     * @return String representation of the AddCommand.","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ChenXy128":3,"-":64,"Xuyan0518":57,"NusMinato":1}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"    public static final String MESSAGE_CANCEL \u003d \"Clear command cancelled!\";","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"    public static final String MESSAGE_CONFIRMATION \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"            \"Are you sure you want to clear the address book? This action cannot be undone.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"     * Executes the clear command.","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"     * @param model The model containing the address book.","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"     * @return The result of the command execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"NusMinato"},"content":"        model.clearUndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        model.clearAllCommandHistories();","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"        ModelManager.getActionTracker().clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"NusMinato"},"content":"        ModelManager.getUndoActionTracker().clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        CustomConfirmationDialog confirmationDialog \u003d new CustomConfirmationDialog(\"Clear Command\",","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"                MESSAGE_CONFIRMATION);","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"        Optional\u003cButtonType\u003e result \u003d confirmationDialog.showAndWait();","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"        if (result.isPresent() \u0026\u0026 result.get() \u003d\u003d ButtonType.OK) {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"            model.setGroupAddressBook(new AddressBook());","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"            return new CommandResult(MESSAGE_CANCEL);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"ChenXy128":4,"-":23,"Xuyan0518":22,"NusMinato":2}},{"path":"src/main/java/seedu/address/logic/commands/CustomConfirmationDialog.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.Dialog;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"import javafx.stage.StageStyle;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":" * A custom dialog for confirmation with OK and Cancel buttons.","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"public class CustomConfirmationDialog extends Dialog\u003cButtonType\u003e {","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a new CustomConfirmationDialog.","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     * @param title   The title of the dialog.","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     * @param message The message to be displayed in the dialog.","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    public CustomConfirmationDialog(String title, String message) {","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"        setTitle(title);","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"        initStyle(StageStyle.UTILITY);","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"        setHeaderText(null);","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"        setContentText(message);","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"        ButtonType okButton \u003d new ButtonType(\"OK\");","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"        ButtonType cancelButton \u003d new ButtonType(\"Cancel\");","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"        getDialogPane().getButtonTypes().addAll(okButton, cancelButton);","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"        getDialogPane().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"                Node focusedNode \u003d getDialogPane().getScene().getFocusOwner();","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"                if (focusedNode instanceof Button) {","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"                    Button focusedButton \u003d (Button) focusedNode;","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"                    if (focusedButton.getText().equals(\"OK\")) {","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"                        setResult(ButtonType.OK);","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"                        hide();","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"                    } else if (focusedButton.getText().equals(\"Cancel\")) {","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"                        setResult(ButtonType.CANCEL);","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"                        hide();","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"                    }","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"            } else if (event.getCode() \u003d\u003d KeyCode.ESCAPE) {","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"                setResult(ButtonType.CANCEL);","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"                hide();","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"            } else if (event.getCode() \u003d\u003d KeyCode.RIGHT || event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"                getDialogPane().lookupButton(okButton).requestFocus();","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"            } else if (event.getCode() \u003d\u003d KeyCode.LEFT || event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"                getDialogPane().lookupButton(cancelButton).requestFocus();","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"        });","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"        // Set the default button to OK","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"        Stage stage \u003d (Stage) getDialogPane().getScene().getWindow();","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"        stage.setOnShown(e -\u003e getDialogPane().getScene().getRoot().requestFocus());","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"Xuyan0518":61}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCategoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NusMinato"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"NusMinato"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"NusMinato"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"NusMinato"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"NusMinato"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"NusMinato"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"NusMinato"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"NusMinato"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"NusMinato"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"NusMinato"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"NusMinato"},"content":" * Deletes one existing category of an existing person in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"NusMinato"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"NusMinato"},"content":"public class DeleteCategoryCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"    public static final String COMMAND_WORD \u003d \"deleteCategory\";","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"NusMinato"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"NusMinato"},"content":"            + \": Deletes the category of person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"NusMinato"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"NusMinato"},"content":"            + PREFIX_CATEGORY + \"CATEGORY\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"NusMinato"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"NusMinato"},"content":"            + PREFIX_CATEGORY + \"Email\";","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"NusMinato"},"content":"    public static final String MESSAGE_DELETE_CATEGORY_SUCCESS \u003d \"Deleted Category of Person %1$s successfully\";","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"NusMinato"},"content":"    public static final String MESSAGE_CATEGORY_DOES_NOT_EXIST \u003d \"Category \\\"%1$s\\\" doesn\u0027t exist.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"NusMinato"},"content":"    public static final String MESSAGE_EMPTY_CATEGORY \u003d \"Please tell me the category you want to delete.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"NusMinato"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"NusMinato"},"content":"    private final List\u003cString\u003e categories;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"NusMinato"},"content":"     * @param targetIndex of the person in the filtered person list to edit","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"NusMinato"},"content":"     * @param categories the category needed to be deleted","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"NusMinato"},"content":"    public DeleteCategoryCommand(Index targetIndex, List\u003cString\u003e categories) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"NusMinato"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"NusMinato"},"content":"        this.categories \u003d categories;","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"NusMinato"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"NusMinato"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"NusMinato"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"NusMinato"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"NusMinato"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"NusMinato"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"NusMinato"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"        Person original \u003d personToEdit.deepCopy();","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"NusMinato"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"NusMinato"},"content":"        for (int i \u003d 0; i \u003c categories.size(); i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"NusMinato"},"content":"            String category \u003d categories.get(i);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"NusMinato"},"content":"            Entry entry \u003d personToEdit.getEntry(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"NusMinato"},"content":"            if (entry \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"NusMinato"},"content":"                throw new CommandException(String.format(MESSAGE_CATEGORY_DOES_NOT_EXIST, category));","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"NusMinato"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"NusMinato"},"content":"            personToEdit.deleteEntry(entry.getCategory());","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"            model.savePersonState(personToEdit, original);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"            ModelManager.getActionTracker().push(false);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"NusMinato"},"content":"            model.clearUndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"NusMinato"},"content":"            model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"NusMinato"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"NusMinato"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"NusMinato"},"content":"                MESSAGE_DELETE_CATEGORY_SUCCESS, Messages.format(personToEdit)","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"NusMinato"},"content":"        ));","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"NusMinato"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ChenXy128":4,"NusMinato":76}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"    public static final String MESSAGE_CANCEL_DELETE \u003d \"Deletion cancelled.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"        model.saveAddressBookState();","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"        ModelManager.getActionTracker().push(false);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"NusMinato"},"content":"        model.clearUndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"        // Create a confirmation dialog","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"        Alert confirmationAlert \u003d new Alert(AlertType.CONFIRMATION);","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"        confirmationAlert.setTitle(\"Delete Command\");","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"        confirmationAlert.setHeaderText(null);","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"        confirmationAlert.setContentText(\"Are you sure you want to delete this person?\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"                + personToDelete.getEntry(\"Name\").getDescription());","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"        Optional\u003cButtonType\u003e result \u003d confirmationAlert.showAndWait();","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"        if (result.isPresent() \u0026\u0026 result.get() \u003d\u003d ButtonType.OK) {","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"                    personToDelete.getEntry(\"Name\").getDescription()));","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"            return new CommandResult(MESSAGE_CANCEL_DELETE);","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ChenXy128":3,"-":68,"Xuyan0518":21,"NusMinato":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"    //testing pull request","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"            + PREFIX_CATEGORY + \"Clan \"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"            + PREFIX_DESCRIPTION + \"Kingdom\";","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"    public static final String MESSAGE_CATEGORY_DOESNT_EXIST \u003d \"Category doesnt exist!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"Invalid edit, please provide a description!\";","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"    public static final String ENTRY_NOT_ADDED \u003d \"Both fields to add must be provided.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"    public static final String DIFFERENT_NUMBER_CATEGORIES_DESCRIPTIONS \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"            \"Number of specified categories and descriptions must be the same.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"    public static final String MESSAGE_DUPLICATE_CATEGORY \u003d \"No duplicate categories allowed.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"        //Finds the person","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"        Person originalPerson \u003d personToEdit.deepCopy();","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"        //Over here, they replaced the old person info with the new person (editpersondescriptor)","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"        model.savePersonState(editedPerson, originalPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"        ModelManager.getActionTracker().push(false);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"NusMinato"},"content":"        model.clearUndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"HongRay"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"HongRay"},"content":"            editPersonDescriptor) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"HongRay"},"content":"        assert editPersonDescriptor !\u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"HongRay"},"content":"        EntryList entryList \u003d editPersonDescriptor.getEntryList();","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"HongRay"},"content":"        //Checks whether category exist for this person.","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"HongRay"},"content":"        for (int i \u003d 0; i \u003c entryList.size(); i++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"HongRay"},"content":"            Entry toAdd \u003d entryList.get(i);","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"HongRay"},"content":"            Entry test \u003d personToEdit.getEntry(toAdd.getCategory().toLowerCase());","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"HongRay"},"content":"            if (test \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"HongRay"},"content":"                throw new CommandException(MESSAGE_CATEGORY_DOESNT_EXIST);","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"HongRay"},"content":"            } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"HongRay"},"content":"                //if the category exit","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"HongRay"},"content":"                Entry entryToAdd \u003d new Entry(test.getCategory(), toAdd.getDescription());","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"HongRay"},"content":"                personToEdit.deleteEntry(toAdd.getCategory());","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"HongRay"},"content":"                personToEdit.addEntry(entryToAdd);","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"HongRay"},"content":"        personToEdit.setTags(updatedTags);","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"HongRay"},"content":"        return personToEdit;","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"HongRay"},"content":"        private EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"HongRay"},"content":"        private String category;","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"HongRay"},"content":"        private String description;","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"HongRay"},"content":"        /**","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"HongRay"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"HongRay"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"HongRay"},"content":"         */","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"HongRay"},"content":"            assert toCopy !\u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"Cedricaca"},"content":"            this.entryList \u003d toCopy.entryList;","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"Cedricaca"},"content":"            this.tags \u003d toCopy.tags;","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"HongRay"},"content":"            this.category \u003d toCopy.getCategory();","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"HongRay"},"content":"            this.description \u003d toCopy.getDescription();","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"HongRay"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"HongRay"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"HongRay"},"content":"        public EditPersonDescriptor(Person toCopy) {","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"HongRay"},"content":"            assert toCopy !\u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"HongRay"},"content":"            this.entryList \u003d toCopy.getList();","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"HongRay"},"content":"            this.tags \u003d toCopy.getTags();","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"HongRay"},"content":"        // Getter and setter for category and description","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"HongRay"},"content":"        public String getCategory() {","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"HongRay"},"content":"            return category;","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"HongRay"},"content":"        public void setCategory(String category) {","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"HongRay"},"content":"            this.category \u003d category;","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"HongRay"},"content":"        public String getDescription() {","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"HongRay"},"content":"            return description;","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"HongRay"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"HongRay"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"HongRay"},"content":"        public boolean isAnyTagEdited() {","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"HongRay"},"content":"            return CollectionUtil.isAnyNonNull(tags);","lastModifiedDate":"2024-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":198,"author":{"gitId":"HongRay"},"content":"        /**","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"HongRay"},"content":"         * Sets an entry in the entry list based on the specified category.","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"HongRay"},"content":"         * If an entry with the given category exists, its description is updated.","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"HongRay"},"content":"         * Otherwise, the new entry is added to the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"HongRay"},"content":"         *","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"HongRay"},"content":"         * @param category the category of the entry to be set. This is used to find","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"HongRay"},"content":"         *                 an existing entry in the list.","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"HongRay"},"content":"         * @param entry the new entry to be added or used for updating the description of the","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"HongRay"},"content":"         *              existing entry. It should not be {@code null}.","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"HongRay"},"content":"         */","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"Cedricaca"},"content":"        public void set(String category, Entry entry) {","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"Cedricaca"},"content":"            Entry e \u003d entryList.get(category);","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"Cedricaca"},"content":"            if (e \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"Cedricaca"},"content":"                entryList.add(entry);","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"Cedricaca"},"content":"                e.setDescription(entry.getDescription());","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"HongRay"},"content":"        public void addEntry(Entry entry) {","lastModifiedDate":"2024-03-30"},{"lineNumber":217,"author":{"gitId":"HongRay"},"content":"            entryList.add(entry);","lastModifiedDate":"2024-03-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"HongRay"},"content":"        public void setEntryList(EntryList entryList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":221,"author":{"gitId":"HongRay"},"content":"            this.entryList \u003d entryList;","lastModifiedDate":"2024-03-30"},{"lineNumber":222,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"HongRay"},"content":"        public EntryList getEntryList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"HongRay"},"content":"            return entryList;","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"HongRay"},"content":"        /**","lastModifiedDate":"2024-03-14"},{"lineNumber":228,"author":{"gitId":"HongRay"},"content":"         * Gets category from the entry","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"HongRay"},"content":"         * @param category of the entry list","lastModifiedDate":"2024-03-14"},{"lineNumber":230,"author":{"gitId":"HongRay"},"content":"         * @return the category","lastModifiedDate":"2024-03-14"},{"lineNumber":231,"author":{"gitId":"HongRay"},"content":"         */","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"Cedricaca"},"content":"        public Optional\u003cEntry\u003e get(String category) {","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"Cedricaca"},"content":"            return Optional.ofNullable(entryList.get(category));","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":264,"author":{"gitId":"HongRay"},"content":"            return Objects.equals(entryList, otherEditPersonDescriptor.getEntryList())","lastModifiedDate":"2024-03-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"HongRay"},"content":"                    .add(\"Category\", category)","lastModifiedDate":"2024-03-19"},{"lineNumber":272,"author":{"gitId":"HongRay"},"content":"                    .add(\"Description\", description)","lastModifiedDate":"2024-03-19"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ChenXy128":4,"HongRay":86,"-":174,"Cedricaca":12,"NusMinato":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.person.PersonFieldsContainKeywordPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":" * Represents a Command to find and list all persons in the address book whose fields match the criteria specified","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":" * by the {@link PersonFieldsContainKeywordPredicate} provided at creation. This command allows for searching","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":" * persons based on various fields such as categories and descriptions, making it flexible for user queries.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":" * The command uses a {@code PersonFieldsContainKeywordPredicate} to filter matching persons, which are then","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":" * displayed to the user as a list with index numbers.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"        + \": Finds all persons based on the specified category and description \"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"        + \"and displays them as a list with index numbers. Use prefixes \u0027c/\u0027 for category and \u0027d/\u0027 for description.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"        + \"Parameters: c/CATEGORY d/DESCRIPTION\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"        + \"Example: \" + COMMAND_WORD + \" c/email d/johndoe@example.com\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    private final PersonFieldsContainKeywordPredicate predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     * Creates a FindCommand to find all persons whose fields match the criteria specified by the provided","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"     * {@code PersonFieldsContainKeywordPredicate}.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"     * @param predicate The predicate used to determine the matching persons.","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    public FindCommand(PersonFieldsContainKeywordPredicate predicate) {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"     * Executes the find command and updates the filtered person list in the model to reflect the persons","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"     * that match the criteria specified by this command\u0027s predicate.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"     * @param model The model in which the filtered person list will be updated.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"     * @return A {@code CommandResult} object that contains the result message of executing this command.","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"     * Compares this command with another object for equality.","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"     * @param other The object to compare this command against.","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"     * @return True if the other object is an instance of {@code FindCommand}","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"     *     and its predicate is equal to this command\u0027s predicate.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"     * Returns a string representation of this find command, including the details of its predicate.","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"     * @return A string representation of this command.","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"        return \"FindCommand{\"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"            + \"predicate\u003d\"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"            + predicate","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"            + \u0027}\u0027;","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ChenXy128":43,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/GroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":" * creates a groupcommand","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"public class GroupCommand extends Command {","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"    public static final String COMMAND_WORD \u003d \"group\";","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"    public static final String TOO_MANY_CATEGORIES \u003d \"Please specify only 1 category\";","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"    public static final String NO_INPUT \u003d \"Please specify a category\";","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     * Usage message for the group command.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Groups contacts in the address book. \"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"            + PREFIX_CATEGORY + \"CATEGORY\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"            + PREFIX_CATEGORY + \"CLAN \";","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"    private String category;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"    private Group group \u003d new Group();","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a GroupCommand with the specified category.","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"     * @param category The category by which contacts will be grouped. Must not be null.","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"     * @throws NullPointerException if the specified category is null.","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"    public GroupCommand(String category) {","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        requireNonNull(category);","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"     * executes the model to group list","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"     * @return success result","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"NusMinato"},"content":"        model.clearUndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"        model.groupPerson(category);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"        return new CommandResult(\"All person in the address book are grouped.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"HongRay":2,"Cedricaca":26,"Xuyan0518":24,"NusMinato":1}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NusMinato"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"NusMinato"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"NusMinato"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"NusMinato"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"NusMinato"},"content":" * Represents a redo command used to reapply the last change made to the address book that was previously undone.","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"NusMinato"},"content":" * This command allows users to redo their last action that was undone, whether it was a modification","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"NusMinato"},"content":" * to the contacts list, a grouping operation, or any other change that supports redo functionality.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"NusMinato"},"content":" * The ability to redo depends on the internal tracking of user actions and states within the model,","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"NusMinato"},"content":" * and it assumes that an undo operation has occurred before a redo operation can be performed.","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"NusMinato"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"NusMinato"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"NusMinato"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"NusMinato"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo successful.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"NusMinato"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No undone actions to redo.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"NusMinato"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"NusMinato"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"NusMinato"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"        if (model.canRedo()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"NusMinato"},"content":"            model.redo();","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"NusMinato"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"NusMinato"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"NusMinato"},"content":"            return new CommandResult(MESSAGE_FAILURE);","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"NusMinato"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"NusMinato":29}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":" * Represents an undo command used to revert the last change made to the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":" * This command allows users to undo their last action, whether it was a modification","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":" * to the contacts list, a grouping operation, or any other change that supports undo functionality.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":" * The ability to undo depends on the internal tracking of user actions and states within the model.","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo successful.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No actions to undo.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"        if (model.canUndo()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"            model.undo();","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"            return new CommandResult(MESSAGE_FAILURE);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ChenXy128":26,"NusMinato":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCategoryCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.logic.commands.AddCategoryCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":" * Parser class for addcategorycommand","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"public class AddCategoryCommandParser implements Parser\u003cAddCategoryCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"     * Creates the addcategorycommand","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"     * @param args our arguments","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"     * @return the command","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"     * @throws ParseException if no index","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"    public AddCategoryCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CATEGORY, PREFIX_DESCRIPTION);","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"        Index index;","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"            throw new ParseException(String","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"                    .format(MESSAGE_INVALID_COMMAND_FORMAT, AddCategoryCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"        List\u003cString\u003e categories \u003d argMultimap.getAllValues(PREFIX_CATEGORY);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"        List\u003cString\u003e descriptions \u003d argMultimap.getAllValues(PREFIX_DESCRIPTION);","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"        if (hasDuplicates(categories)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"            throw new ParseException(AddCategoryCommand.MESSAGE_DUPLICATE_CATEGORY);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"        if (categories.size() \u003d\u003d 0 || descriptions.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"            throw new ParseException(AddCategoryCommand.ENTRY_NOT_ADDED);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"        if (categories.size() !\u003d descriptions.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"            throw new ParseException(AddCategoryCommand.DIFFERENT_NUMBER_CATEGORIES_DESCRIPTIONS);","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"        EntryList entrylist \u003d ParserUtil.parseEntries(categories, descriptions);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"        return new AddCategoryCommand(index, entrylist);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"     * Checks whether a given list contains any duplicate elements.","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"     * @param list The list to be checked for duplicates.","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"     * @return {@code true} if the list contains duplicates, {@code false} otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"     * @throws NullPointerException if the specified list is null.","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"    private boolean hasDuplicates(List\u003cString\u003e list) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"        Set\u003cString\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"        for (String element : list) {","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"            if (set.contains(element)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"                return true; // Found a duplicate","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"            set.add(element);","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"        return false; // No duplicates found","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Cedricaca":70,"Xuyan0518":7}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.logic.commands.AddCategoryCommand;","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"        boolean hasEntry \u003d true;","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG, PREFIX_CATEGORY, PREFIX_DESCRIPTION);","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"        assert argMultimap.getValue(PREFIX_NAME).isPresent() : \"Name prefix is present\";","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"        if (argMultimap.getValue(PREFIX_NAME).get().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"            throw new ParseException(\"Name cannot be empty!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CATEGORY) \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"            hasEntry \u003d false;","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"        } else if (!arePrefixesPresent(argMultimap, PREFIX_CATEGORY)","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"            throw new ParseException(\"Category cannot be empty!\");","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_CATEGORY)","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"            throw new ParseException(\"Description cannot be empty!\");","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"            List\u003cString\u003e categories \u003d argMultimap.getAllValues(PREFIX_CATEGORY);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"            List\u003cString\u003e descriptions \u003d argMultimap.getAllValues(PREFIX_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"            List\u003cString\u003e lowercaseCategories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"            for (int i \u003d 0; i \u003c categories.size(); i++) {","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"                String cat \u003d categories.get(i);","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"                lowercaseCategories.add(cat.toLowerCase().trim());","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"            if (hasDuplicates(lowercaseCategories)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"                throw new ParseException(AddCategoryCommand.MESSAGE_DUPLICATE_CATEGORY);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"            if (categories.size() \u003d\u003d 0 || descriptions.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"                throw new ParseException(AddCategoryCommand.ENTRY_NOT_ADDED);","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"            if (categories.size() !\u003d descriptions.size()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"                throw new ParseException(AddCategoryCommand.DIFFERENT_NUMBER_CATEGORIES_DESCRIPTIONS);","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"            for (int i \u003d 0; i \u003c categories.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"                if (categories.get(i).equalsIgnoreCase(\"Name\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"                    throw new ParseException(\"Name already exists!\");","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"            entryList \u003d ParserUtil.parseEntries(categories, descriptions);","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"        assert argMultimap.getValue(PREFIX_NAME).isPresent() : \"Name prefix is present\";","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"        Entry name \u003d ParserUtil.parse(\"Name\", argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"        Person person \u003d new Person(name, tagList);","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"        if (hasEntry) {","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"            return new AddCommand(person, entryList);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"            return new AddCommand(person, null);","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"Xuyan0518"},"content":"     * Checks whether a given list contains any duplicate elements.","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"Xuyan0518"},"content":"     * @param list The list to be checked for duplicates.","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"Xuyan0518"},"content":"     * @return {@code true} if the list contains duplicates, {@code false} otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"Xuyan0518"},"content":"     * @throws NullPointerException if the specified list is null.","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"Xuyan0518"},"content":"    private boolean hasDuplicates(List\u003cString\u003e list) {","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"Xuyan0518"},"content":"        Set\u003cString\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"Xuyan0518"},"content":"        for (String element : list) {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"Xuyan0518"},"content":"            if (set.contains(element)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"Xuyan0518"},"content":"                return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"Xuyan0518"},"content":"            set.add(element);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"Xuyan0518"},"content":"        return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":45,"Cedricaca":9,"Xuyan0518":73}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.logic.commands.AddCategoryCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.logic.commands.DeleteCategoryCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"NusMinato"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"Cedricaca"},"content":"        case GroupCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"Cedricaca"},"content":"            return new GroupCommandParser().parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"Cedricaca"},"content":"        case AddCategoryCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"Cedricaca"},"content":"            return new AddCategoryCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"NusMinato"},"content":"        case DeleteCategoryCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"NusMinato"},"content":"            return new DeleteCategoryCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"            return new UndoCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"NusMinato"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"NusMinato"},"content":"            return new RedoCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ChenXy128":7,"-":85,"Cedricaca":6,"NusMinato":7}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":15,"Cedricaca":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCategoryCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NusMinato"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"NusMinato"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.logic.Messages.MESSAGE_CANNOT_DELETE_NAME;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"NusMinato"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"NusMinato"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"NusMinato"},"content":"import seedu.address.logic.commands.DeleteCategoryCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"NusMinato"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"NusMinato"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"NusMinato"},"content":" * Parser class for deleteCategoryCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"NusMinato"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"NusMinato"},"content":"public class DeleteCategoryCommandParser implements Parser\u003cDeleteCategoryCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"NusMinato"},"content":"     * Creates the deleteCategoryCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"NusMinato"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"NusMinato"},"content":"     * @param args our arguments","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"     * @return the command","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"NusMinato"},"content":"     * @throws ParseException if no index","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"NusMinato"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"NusMinato"},"content":"    public DeleteCategoryCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"NusMinato"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"NusMinato"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"NusMinato"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CATEGORY);","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"NusMinato"},"content":"        Index index;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"NusMinato"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"NusMinato"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"NusMinato"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"NusMinato"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"NusMinato"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, DeleteCategoryCommand.MESSAGE_USAGE","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"NusMinato"},"content":"            ), pe);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"NusMinato"},"content":"        // Gets each category from the command","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"NusMinato"},"content":"        List\u003cString\u003e categories \u003d argMultimap.getAllValues(PREFIX_CATEGORY);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"NusMinato"},"content":"        if (categories.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"NusMinato"},"content":"            throw new ParseException(DeleteCategoryCommand.MESSAGE_EMPTY_CATEGORY);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"NusMinato"},"content":"        for (int i \u003d 0; i \u003c categories.size(); i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"NusMinato"},"content":"            String category \u003d categories.get(i);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"NusMinato"},"content":"            if (category.equals(\"Name\")) {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"NusMinato"},"content":"                throw new ParseException(MESSAGE_CANNOT_DELETE_NAME);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"NusMinato"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"NusMinato"},"content":"        return new DeleteCategoryCommand(index, categories);","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"NusMinato"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"NusMinato":56}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":" * Testing","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CATEGORY, PREFIX_DESCRIPTION, PREFIX_TAG);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"        //Check whether the String that is parsed in contains the following prefix.","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"        List\u003cString\u003e categories \u003d argMultimap.getAllValues(PREFIX_CATEGORY);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"        List\u003cString\u003e descriptions \u003d argMultimap.getAllValues(PREFIX_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"        //check for duplicate category","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"        if (hasDuplicates(categories)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"            throw new ParseException(EditCommand.MESSAGE_DUPLICATE_CATEGORY);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"        for (String description : descriptions) {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"            if (description.trim().isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"                throw new ParseException(EditCommand.MESSAGE_EMPTY_DESCRIPTION);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"        boolean categoryExists \u003d !categories.isEmpty();","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"        boolean descriptionExists \u003d !descriptions.isEmpty();","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"        //Checks if either category or description exist, the other must exist","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"        //Doing this allows tags to exist without both fields","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"        if ((categoryExists \u0026\u0026 !descriptionExists) || (!categoryExists \u0026\u0026 descriptionExists)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"            throw new ParseException(EditCommand.ENTRY_NOT_ADDED);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"        //Ensure they are both of same size","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"        if (categories.size() !\u003d descriptions.size()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"            throw new ParseException(EditCommand.DIFFERENT_NUMBER_CATEGORIES_DESCRIPTIONS);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"        if (categories.isEmpty() \u0026\u0026 !editPersonDescriptor.isAnyTagEdited()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"        EntryList entrylist \u003d ParserUtil.parseEntries(categories, descriptions);","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"        editPersonDescriptor.setEntryList(entrylist);","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"HongRay"},"content":"    private boolean hasDuplicates(List\u003cString\u003e list) {","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"HongRay"},"content":"        assert list !\u003d null : \"The list should not be null\";","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"HongRay"},"content":"        Set\u003cString\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"HongRay"},"content":"        for (String element : list) {","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"HongRay"},"content":"            if (set.contains(element)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"HongRay"},"content":"                return true; // Found a duplicate","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"HongRay"},"content":"            set.add(element);","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"HongRay"},"content":"        return false; // No duplicates found","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"HongRay":39,"-":64}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.person.PersonFieldsContainKeywordPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":" * Parses input arguments and creates a new FindCommand object.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":" * This class is responsible for handling the parsing of input arguments provided by the user","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":" * for the find command. It supports filtering persons by categories, descriptions, and tags.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":" * The input arguments are expected to contain specific prefixes that denote the type of filter","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":" * to apply.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"     * The method expects arguments to contain at least one valid prefix (category/description or tag).","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"     * Each category must have a corresponding description if specified. Tags can be listed","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"     * separately and are split by whitespace.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"     * @param args the input arguments provided by the user for the find command.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"     * @return a FindCommand object ready for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_CATEGORY, PREFIX_DESCRIPTION, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"        boolean isTagPresent \u003d arePrefixesPresent(argMultimap, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"        Map\u003cString, List\u003cString\u003e\u003e categoryDescriptionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_CATEGORY, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"            List\u003cString\u003e categories \u003d argMultimap.getAllValues(PREFIX_CATEGORY);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"            List\u003cString\u003e descriptions \u003d argMultimap.getAllValues(PREFIX_DESCRIPTION);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"            for (int i \u003d 0; i \u003c categories.size(); i++) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"                categoryDescriptionMap.computeIfAbsent(categories.get(i).trim(), k -\u003e new ArrayList\u003c\u003e())","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"                    .add(descriptions.get(i).trim());","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"        Set\u003cString\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"        if (isTagPresent) {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"            tags.addAll(new HashSet\u003c\u003e(argMultimap.getAllValues(PREFIX_TAG)));","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"        if (categoryDescriptionMap.isEmpty() \u0026\u0026 tags.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"        return new FindCommand(new PersonFieldsContainKeywordPredicate(categoryDescriptionMap, tags));","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     * Checks if the specified prefixes are present in the argument multimap and not empty.","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"     * This utility method is used to validate that the necessary prefixes for a command are provided","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"     * by the user and that they contain values.","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"     * @param argumentMultimap the multimap of arguments parsed from the user\u0027s input.","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"     * @param prefixes the prefixes to check for presence and non-empty values.","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"     * @return true if all specified prefixes are present and contain non-empty values, otherwise false.","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent()","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"            \u0026\u0026 !argumentMultimap.getValue(prefix).get().isEmpty());","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ChenXy128":54,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/GroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":" * Parses the arguments to create a groupCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"public class GroupCommandParser implements Parser\u003cGroupCommand\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"     * parses the arguments","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"     * @param args the arguments","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"     * @return the GroupCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"     * @throws ParseException the error thrown","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"    public GroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CATEGORY);","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CATEGORY)","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"        if (argMultimap.getValue(PREFIX_CATEGORY).get().isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"            throw new ParseException(GroupCommand.NO_INPUT);","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"        // Gets each category from the command","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        List\u003cString\u003e categories \u003d argMultimap.getAllValues(PREFIX_CATEGORY);","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"        if (categories.size() \u003e 1) {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"            throw new ParseException(GroupCommand.TOO_MANY_CATEGORIES);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"        if (categories.get(0).trim() \u003d\u003d \"\") {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"            throw new ParseException(GroupCommand.NO_INPUT);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"        return new GroupCommand(categories.get(0));","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"Cedricaca":36,"Xuyan0518":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.logic.commands.AddCategoryCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"    public static Entry parse(String category, String description) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"        requireNonNull(description);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"        requireNonNull(category);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"        if (!Entry.isValid(category.trim(), description.trim())) {","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"            throw new ParseException(Entry.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"        return new Entry(category.trim(), description.trim());","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":79,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"Cedricaca"},"content":"     * converts a list of string categories and list of string descriptions into an entrylist","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Cedricaca"},"content":"     * @param categories","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"Cedricaca"},"content":"     * @param descriptions","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Cedricaca"},"content":"     * @return the entrylist","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"    public static EntryList parseEntries(List\u003cString\u003e categories, List\u003cString\u003e descriptions) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Cedricaca"},"content":"        requireNonNull(categories);","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"Cedricaca"},"content":"        requireNonNull(descriptions);","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"Cedricaca"},"content":"        EntryList e \u003d new EntryList();","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"Cedricaca"},"content":"        for (int i \u003d 0; i \u003c categories.size(); i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"            String category \u003d categories.get(i).trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"            String description \u003d descriptions.get(i).trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"            if (category.isEmpty() || description.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"                throw new ParseException(AddCategoryCommand.ENTRY_NOT_ADDED);","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Cedricaca"},"content":"            Entry entry \u003d new Entry(category, description);","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"Cedricaca"},"content":"            e.add(entry);","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"Cedricaca"},"content":"        return e;","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":69,"Cedricaca":25,"Xuyan0518":7}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"     * Replace the target with the edited person.","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"     * @param target to be replaced.","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"     * @param editedPerson to replace the target.","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"    public void replacePerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"        persons.replacePerson(target, editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ChenXy128":8,"-":128}},{"path":"src/main/java/seedu/address/model/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package seedu.address.model;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import java.util.Deque;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import java.util.LinkedList;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":" * Represents a history of commands executed on the address book, allowing for undo operations.","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":" * This class maintains a stack-like structure of address book states, where each state represents","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":" * the address book at a certain point in time. This enables the application to revert to previous","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":" * states in response to an undo command, effectively undoing recent changes.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"public class CommandHistory {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    private Deque\u003cReadOnlyAddressBook\u003e history \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"     * Pushing the current state of the address book into the command history.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"     * @param currentState represents the current address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    public void push(ReadOnlyAddressBook currentState) {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"        history.push(currentState);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * Retrieve the most recent address book state.","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    public ReadOnlyAddressBook pop() {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"        return history.pop();","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"     * Check for the presence of command history.","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"     * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"        return history.isEmpty();","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"     * Finds the number of copies of histories","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"    public int size() {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"        return history.size();","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"     * Clears the deque.","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"    public void clear() {","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"        history.clear();;","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ChenXy128":40,"HongRay":7,"NusMinato":4}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     * Groups persons in the address book based on a specified category. This method allows for organizing","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"     * contacts into groups, such as by last name, city, or any other specified category.","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"     * @param category The category by which to group persons.","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    void groupPerson(String category) throws CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"HongRay"},"content":"    ObservableList\u003cPerson\u003e getFilteredGroupPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"     * Performs an undo action. This method allows reverting the last change made to the address book data,","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"     * supporting undo functionality for user actions.","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"    void undo();","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"NusMinato"},"content":"     * Performs a redo action. This method allows reverting the last undo command made to the address book data,","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"NusMinato"},"content":"     * supporting redo functionality for user actions.","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"NusMinato"},"content":"    void redo();","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"     * Keep track if the address book can undo","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"    boolean canUndo();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"     * Checks if an undo operation can be performed. This method allows the application to determine","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"     * if there are actions that can be undone, typically to enable or disable undo functionality in the UI.","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"     * @return true if an undo operation can be performed, false otherwise.","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"NusMinato"},"content":"    boolean canRedo();","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"     * Saves the address book state.","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"    void saveAddressBookState();","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"NusMinato"},"content":"     * Saves the undone address book state.","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"NusMinato"},"content":"    void saveUndoneAddressBookState();","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"     * Saves the group address book state.","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"    void saveGroupAddressBookState();","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"NusMinato"},"content":"     * Saves the undone group address book state.","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"NusMinato"},"content":"    void saveUndoneGroupAddressBookState();","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"     * Saves the person\u0027s current state by replacing the before with after.","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"     * @param before person to be replaced.","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"     * @param after the replacing person.","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"ChenXy128"},"content":"    void savePersonState(Person before, Person after);","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"ChenXy128"},"content":"     * Replaces the target person with the replacing person.","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"ChenXy128"},"content":"     * @param target person to be replaced.","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"ChenXy128"},"content":"     * @param replacing to replace the target.","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"ChenXy128"},"content":"    void replacePerson(Person target, Person replacing);","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"HongRay"},"content":"    void setGroupAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"NusMinato"},"content":"     * Clears all states from the undo history.","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"NusMinato"},"content":"    void clearUndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"ChenXy128"},"content":"     * Clears all histories","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"ChenXy128"},"content":"    void clearAllCommandHistories();","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ChenXy128":41,"HongRay":6,"-":87,"Xuyan0518":3,"NusMinato":20}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import java.util.Stack;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    private static Stack\u003cBoolean\u003e actionTracker \u003d new Stack\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"NusMinato"},"content":"    private static Stack\u003cBoolean\u003e undoActionTracker \u003d new Stack\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    private final AddressBook groupAddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"    private FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"NusMinato"},"content":"    private UndoHistory undoHistory \u003d new UndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"    private FilteredList\u003cPerson\u003e filteredGroupPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"    private CommandHistory groupCommandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"NusMinato"},"content":"    private UndoHistory groupUndoHistory \u003d new UndoHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"    private Group group \u003d new Group();","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"        //creates an empty addressbook for group.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"        this.groupAddressBook \u003d new AddressBook();","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"        filteredGroupPerson \u003d new FilteredList\u003c\u003e(this.groupAddressBook.getPersonList());","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"    public static Stack\u003cBoolean\u003e getActionTracker() {","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"        return ModelManager.actionTracker;","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"NusMinato"},"content":"    public static Stack\u003cBoolean\u003e getUndoActionTracker() {","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"NusMinato"},"content":"        return ModelManager.undoActionTracker;","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"    public void groupPerson(String category) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"        ArrayList\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(addressBook.getPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"        group.group(persons, category);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        saveGroupAddressBookState();","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"        groupAddressBook.setPersons(group.getGroupList());","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"        ModelManager.getActionTracker().push(true);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"        filteredGroupPerson \u003d new FilteredList\u003c\u003e(groupAddressBook.getPersonList());","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"HongRay"},"content":"    public void setGroupAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"HongRay"},"content":"        this.groupAddressBook.resetData(addressBook);","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"ChenXy128"},"content":"    public void undo() {","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"ChenXy128"},"content":"        if (actionTracker.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"ChenXy128"},"content":"            System.out.println(\"Nothing to undo.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"ChenXy128"},"content":"            return;","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"ChenXy128"},"content":"        // Peek at the last action to decide whether it\u0027s a group or non-group action.","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"ChenXy128"},"content":"        boolean lastActionWasGroup \u003d actionTracker.peek();","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"ChenXy128"},"content":"        if (lastActionWasGroup) {","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"ChenXy128"},"content":"            // If the last action was a group action and there\u0027s something to undo.","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"ChenXy128"},"content":"            if (!groupCommandHistory.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"HongRay"},"content":"                undoGrouping();","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"ChenXy128"},"content":"                // After undoing, pop the action type since it\u0027s been handled.","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"NusMinato"},"content":"                undoActionTracker.push(actionTracker.pop());","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"ChenXy128"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"ChenXy128"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"ChenXy128"},"content":"            // If the last action was a non-group action and there\u0027s something to undo.","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"ChenXy128"},"content":"            if (!commandHistory.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"NusMinato"},"content":"                saveUndoneAddressBookState();","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"ChenXy128"},"content":"                setAddressBook(commandHistory.pop());","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"ChenXy128"},"content":"                // After undoing, pop the action type since it\u0027s been handled.","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"NusMinato"},"content":"                undoActionTracker.push(actionTracker.pop());","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"NusMinato"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"NusMinato"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"NusMinato"},"content":"    public void redo() {","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"NusMinato"},"content":"        if (undoActionTracker.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"NusMinato"},"content":"            System.out.println(\"Nothing to redo.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"NusMinato"},"content":"            return;","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"NusMinato"},"content":"        // Peek at the last undo action to decide whether it\u0027s a group or non-group action.","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"NusMinato"},"content":"        boolean lastUndoActionWasGroup \u003d undoActionTracker.peek();","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"NusMinato"},"content":"        if (lastUndoActionWasGroup) {","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"NusMinato"},"content":"            // If the last undo action was a group action and there\u0027s something to redo.","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"NusMinato"},"content":"            if (!groupUndoHistory.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"NusMinato"},"content":"                redoGrouping();","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"NusMinato"},"content":"                // After redoing, pop the action type since it\u0027s been handled.","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"NusMinato"},"content":"                actionTracker.push(undoActionTracker.pop());","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"NusMinato"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"NusMinato"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"NusMinato"},"content":"            // If the last undo action was a non-group action and there\u0027s something to redo.","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"NusMinato"},"content":"            if (!undoHistory.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"NusMinato"},"content":"                saveAddressBookState();","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"NusMinato"},"content":"                setAddressBook(undoHistory.pop());","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"NusMinato"},"content":"                // After redoing, pop the action type since it\u0027s been handled.","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"NusMinato"},"content":"                actionTracker.push(undoActionTracker.pop());","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"NusMinato"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"ChenXy128"},"content":"    private void undoGrouping() {","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"NusMinato"},"content":"        saveUndoneGroupAddressBookState();","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"ChenXy128"},"content":"        setGroupAddressBook(groupCommandHistory.pop());","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"NusMinato"},"content":"    private void redoGrouping() {","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"NusMinato"},"content":"        saveGroupAddressBookState();","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"NusMinato"},"content":"        setGroupAddressBook(groupUndoHistory.pop());","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"ChenXy128"},"content":"    public boolean canUndo() {","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"ChenXy128"},"content":"        return (!commandHistory.isEmpty() || !groupCommandHistory.isEmpty()) \u0026\u0026 !actionTracker.isEmpty();","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"NusMinato"},"content":"    public boolean canRedo() {","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"NusMinato"},"content":"        return (!undoHistory.isEmpty() || !groupUndoHistory.isEmpty()) \u0026\u0026 !undoActionTracker.isEmpty();","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"NusMinato"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"ChenXy128"},"content":"    public void saveAddressBookState() {","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"ChenXy128"},"content":"        commandHistory.push(new AddressBook(addressBook));","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"NusMinato"},"content":"    public void saveUndoneAddressBookState() {","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"NusMinato"},"content":"        undoHistory.push(new AddressBook(addressBook));","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"NusMinato"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"ChenXy128"},"content":"    public void saveGroupAddressBookState() {","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"ChenXy128"},"content":"        groupCommandHistory.push(new AddressBook(groupAddressBook));","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"NusMinato"},"content":"    public void saveUndoneGroupAddressBookState() {","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"NusMinato"},"content":"        groupUndoHistory.push(new AddressBook(groupAddressBook));","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"NusMinato"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"ChenXy128"},"content":"    public void savePersonState(Person before, Person after) {","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"ChenXy128"},"content":"        AddressBook withEditedPerson \u003d new AddressBook(addressBook);","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"ChenXy128"},"content":"        withEditedPerson.replacePerson(before, after);","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"ChenXy128"},"content":"        commandHistory.push(withEditedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"ChenXy128"},"content":"    public void replacePerson(Person target, Person replacing) {","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"ChenXy128"},"content":"        this.addressBook.replacePerson(target, replacing);","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"NusMinato"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"NusMinato"},"content":"    public void clearUndoHistory() {","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"NusMinato"},"content":"        this.undoHistory.clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"NusMinato"},"content":"        this.groupUndoHistory.clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"ChenXy128"},"content":"    public void clearAllCommandHistories() {","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"ChenXy128"},"content":"        commandHistory.clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"ChenXy128"},"content":"        groupCommandHistory.clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":264,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"HongRay"},"content":"    public ObservableList\u003cPerson\u003e getFilteredGroupPersonList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"HongRay"},"content":"        return filteredGroupPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":267,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":268,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ChenXy128":60,"HongRay":22,"-":145,"Cedricaca":4,"Xuyan0518":3,"NusMinato":57}},{"path":"src/main/java/seedu/address/model/UndoHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NusMinato"},"content":"package seedu.address.model;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"NusMinato"},"content":"import java.util.Deque;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"NusMinato"},"content":"import java.util.LinkedList;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"NusMinato"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"NusMinato"},"content":" * Represents a history of commands that have been undone in the address book, allowing for redo operations.","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"NusMinato"},"content":" * This class maintains a stack-like structure where each element represents the address book state","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"NusMinato"},"content":" * just after a command was undone. This enables the application to reapply changes that were undone.","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"NusMinato"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"NusMinato"},"content":"public class UndoHistory {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"NusMinato"},"content":"    private Deque\u003cReadOnlyAddressBook\u003e undoHistory \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"NusMinato"},"content":"     * Pushing the state of the address book just undone into the undo history.","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"NusMinato"},"content":"     * @param stateJustUndone represents the address book state just undone.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"NusMinato"},"content":"    public void push(ReadOnlyAddressBook stateJustUndone) {","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"NusMinato"},"content":"        undoHistory.push(stateJustUndone);","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"NusMinato"},"content":"     * Retrieve the most recent address book state.","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"NusMinato"},"content":"     * @return The last undone address book state for redo operations.","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"NusMinato"},"content":"    public ReadOnlyAddressBook pop() {","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"NusMinato"},"content":"        return undoHistory.pop();","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"NusMinato"},"content":"     * Check for the presence of undo history.","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"NusMinato"},"content":"     * @return true if there are states to redo.","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"NusMinato"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"NusMinato"},"content":"        return undoHistory.isEmpty();","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"NusMinato"},"content":"     * Finds the number of copies of undo histories","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"NusMinato"},"content":"    public int size() {","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"NusMinato"},"content":"        return undoHistory.size();","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"NusMinato"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"NusMinato"},"content":"     * Clears all states from the undo history.","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"NusMinato"},"content":"     * This method is used to reset the undo history when input new command except undo.","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"NusMinato"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"NusMinato"},"content":"    public void clear() {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"NusMinato"},"content":"        undoHistory.clear();","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"NusMinato"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"NusMinato":52}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"rainbow_dragon.json\");","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":87,"Xuyan0518":1}},{"path":"src/main/java/seedu/address/model/person/Entry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":" * Entry Class","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"public class Entry implements Comparable\u003cEntry\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Category or description cannot be empty!\";","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"    private String category;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"    private String description;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"     * Constructor for entry class","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"     * @param category category","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"     * @param description description","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"    public Entry(String category, String description) {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"    public String getCategory() {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"        return category;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"        return description;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"    public int compareTo(Entry entry) {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"        return category.compareTo(entry.getCategory());","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"        return category + \": \" + description;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"     * checks if entry is valid","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"     * @param category","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"     * @param description","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"     * @return","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"    public static boolean isValid(String category, String description) {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"        if (description.trim().equals(\"\")) {","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"        if (category.trim().equals(\"\")) {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"Cedricaca"},"content":"        return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"        if (!(other instanceof Entry)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"        return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"Cedricaca"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"Cedricaca"},"content":"        return description.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"Cedricaca":79}},{"path":"src/main/java/seedu/address/model/person/EntryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":" * class for entryList","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"public class EntryList {","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"    private ArrayList\u003cEntry\u003e entryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"    public void add(Entry entry) {","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(entry);","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"    //get specific entry via index","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"    public Entry get(int num) {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"        if (num \u003e\u003d 0 \u0026\u0026 num \u003c entryList.size()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"            return entryList.get(num);","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"        return null;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    //get specific entry via string","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"    //Gets entry with category","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"    public Entry get(String category) {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"        Entry result \u003d null;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"        for (Entry entry : entryList) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"            if (entry.getCategory().equalsIgnoreCase(category)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"                result \u003d entry;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"                return result;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"        return result;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    public List\u003cEntry\u003e getEntries() {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"        return new ArrayList\u003c\u003e(entryList);","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"    public int size() {","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"        return entryList.size();","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"NusMinato"},"content":"    public void delete(String category) {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"NusMinato"},"content":"        entryList.remove(this.get(category));","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"        ToStringBuilder builder \u003d new ToStringBuilder(this);","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"        for (Entry entry : entryList) {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"            builder.add(\"Category\", entry.getCategory())","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"                    .add(\"Description\", entry.getDescription());","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"    public void sort() {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"        Collections.sort(entryList);","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"ChenXy128":6,"HongRay":16,"Cedricaca":37,"NusMinato":4}},{"path":"src/main/java/seedu/address/model/person/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":" * Represents a grouping of {@code Person} objects based on a specific category.","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":" * This class allows for the organization of persons into groups where each group","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":" * corresponds to a unique value of a specified category.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"public class Group {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"    private static final String MESSAGE_EMPTY_ADDRESS_BOOK \u003d \"Address book is empty!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    private ArrayList\u003cPerson\u003e groupList;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"     * Groups a list of {@code Person} objects based on the specified category.","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"     * Each group is represented by a {@code Person} object where the \"Group Name\"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"     * entry is set to the category value. If the category is not present in a person,","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"     * they are added to a default group named \"No group\".","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"     * @param personArrayList The list of {@code Person} objects to be grouped.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"     * @param category The category used to group the {@code Person} objects.","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    public void group(ArrayList\u003cPerson\u003e personArrayList, String category) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"        if (personArrayList.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"            throw new CommandException(MESSAGE_EMPTY_ADDRESS_BOOK);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"        Map\u003cString, Person\u003e groupMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"        Person noCategoryGroup \u003d new Person(new Entry(\"Group Name\", \"No group\"), new HashSet\u003c\u003e());","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"        boolean noCategoryGroupAdded \u003d false;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"        for (Person person : personArrayList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"            String personCat \u003d person.getEntry(category) !\u003d null ? person.getEntry(category).getDescription() : null;","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"            if (personCat \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"                noCategoryGroup.addEntry(new Entry(\"No category\", person.getEntry(\"Name\").getDescription()));","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"                noCategoryGroupAdded \u003d true;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"                Person group \u003d groupMap.get(personCat);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"                if (group \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"                    group \u003d new Person(new Entry(\"Group Name\", personCat), new HashSet\u003c\u003e());","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"                    groupMap.put(personCat, group);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"                group.addEntry(new Entry(\"Name\", person.getEntry(\"Name\").getDescription()));","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"        ArrayList\u003cPerson\u003e groupedPerson \u003d new ArrayList\u003c\u003e(groupMap.values());","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"        if (noCategoryGroupAdded) {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"            groupedPerson.add(noCategoryGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"        groupList \u003d groupedPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"    public ArrayList\u003cPerson\u003e getGroupList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"        return groupList;","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"HongRay":58,"Xuyan0518":6}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"public class Person implements Comparable\u003cPerson\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"    private EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"    private String toCompare \u003d \"\";","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"    public Person(Entry name, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"        requireAllNonNull(name, tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(name);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"     * This constructor is used for testing in PersonBuilder","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"    public Person(EntryList entryList, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"        this.entryList \u003d entryList;","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"     * Sets the new comparator for each person for group function","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"     * @param category to set as toCompare","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"    public void toCompare(String category) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d this.getEntry(category);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"        if (entry \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"            toCompare \u003d \"\";","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"            return;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"        toCompare \u003d entry.getDescription();","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"     * Compares this person with the specified person for order. Returns a negative integer,","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"     * zero, or a positive integer as this person is less than, equal to, or greater than the","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"     * specified person. Comparison is based on the string representations obtained from the","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"     * {@code toCompare} properties of the persons, ignoring case sensitivity.","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"     * @param person The person to be compared.","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"     * @return A negative integer, zero, or a positive integer as this person is less than,","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"     *         equal to, or greater than the specified person.","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"     * @throws NullPointerException if the specified person is null.","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"    public int compareTo(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"        if (toCompare.isEmpty() \u0026\u0026 !person.getToCompare().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"            return 1; // Treat empty string as greater","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"        } else if (!toCompare.isEmpty() \u0026\u0026 person.getToCompare().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"            return -1; // Treat empty string as greater","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"            // Compare based on natural ordering","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"            return toCompare.toLowerCase().compareTo(person.getToCompare().toLowerCase());","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"Cedricaca"},"content":"    public String getToCompare() {","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"Cedricaca"},"content":"        return toCompare;","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Cedricaca"},"content":"     * Adds an entry into the list, and then sorts the list","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Cedricaca"},"content":"     * @param entry entry to be added","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Cedricaca"},"content":"    public void addEntry(Entry entry) {","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(entry);","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"Cedricaca"},"content":"        entryList.sort();","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"Cedricaca"},"content":"    public Entry getEntry(String category) {","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"Cedricaca"},"content":"        return entryList.get(category);","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":94,"author":{"gitId":"NusMinato"},"content":"    public void deleteEntry(String category) {","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"NusMinato"},"content":"        entryList.delete(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"HongRay"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"HongRay"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"Xuyan0518"},"content":"        if (otherPerson.equals(this)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"Cedricaca"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"Cedricaca"},"content":"        return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"Cedricaca"},"content":"        return Objects.hash(getEntry(\"Name\"), getEntry(\"Phone\"), getEntry(\"Email\"), getEntry(\"Address\"), tags);","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"Cedricaca"},"content":"    public EntryList getList() {","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"Cedricaca"},"content":"        return entryList;","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"Cedricaca"},"content":"    public void setList(EntryList e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"Cedricaca"},"content":"        entryList \u003d e;","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"ChenXy128"},"content":"     * Create a deep copy person.","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"ChenXy128"},"content":"      * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"ChenXy128"},"content":"    public Person deepCopy() {","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"ChenXy128"},"content":"        EntryList copiedEntryList \u003d new EntryList();","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"ChenXy128"},"content":"        for (Entry e : this.entryList.getEntries()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"ChenXy128"},"content":"            copiedEntryList.add(new Entry(e.getCategory(), e.getDescription()));","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"ChenXy128"},"content":"        Set\u003cTag\u003e copiedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"ChenXy128"},"content":"        for (Tag t : tags) {","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"ChenXy128"},"content":"            copiedTags.add(new Tag(t.getTagName()));","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"ChenXy128"},"content":"        return new Person(copiedEntryList, copiedTags);","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ChenXy128":15,"HongRay":13,"-":81,"Cedricaca":50,"Xuyan0518":11,"NusMinato":2}},{"path":"src/main/java/seedu/address/model/person/PersonFieldsContainKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":" * Represents a Predicate for filtering {@code Person} objects based on keyword matches in their categories,","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":" * descriptions, or tags. This allows for complex queries against a person\u0027s attributes to be executed in a","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":" * streamlined manner. The predicate evaluates to true if any of the person\u0027s entries match the specified","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":" * categories or descriptions, or if any of the person\u0027s tags match the specified tags.","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":" *","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":" * Each person\u0027s entry is checked against a map of category descriptions, where the key is the category and","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":" * the value is the description to match. Additionally, a set of tags can be provided to further filter the","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":" * persons based on the tags associated with them.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"public class PersonFieldsContainKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    private final Map\u003cString, List\u003cString\u003e\u003e categoryDescriptionMap;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    private final Set\u003cString\u003e tags;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * Constructs a {@code PersonFieldsContainKeywordPredicate} with the specified category-description mappings","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     * and tags.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"     * @param categoryDescriptionMap A map where each key-value pair consists of a category and its corresponding","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"     *                                description to match against a person\u0027s entries.","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"     * @param tags A set of tags to match against a person\u0027s tags.","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    public PersonFieldsContainKeywordPredicate(Map\u003cString, List\u003cString\u003e\u003e categoryDescriptionMap, Set\u003cString\u003e tags) {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"        this.categoryDescriptionMap \u003d categoryDescriptionMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"     * Tests whether a given {@code Person} matches any of the category-description pairs or tags specified in this","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"     * predicate.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"     * @param person The {@code Person} to test.","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"     * @return True if the person matches any of the specified category-description pairs or tags, otherwise false.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"        boolean matchesCategoryDescription \u003d categoryDescriptionMap.entrySet().stream().anyMatch(entry -\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"            Optional.ofNullable(person.getList().getEntries()).orElse(Collections.emptyList()).stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"                .filter(e -\u003e Optional.ofNullable(e.getCategory()).orElse(\"\").toLowerCase()","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"                    .contains(entry.getKey().toLowerCase()))","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"                .anyMatch(e -\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"                    entry.getValue().stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"                        .anyMatch(expectedDesc -\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"                            Optional.ofNullable(e.getDescription()).orElse(\"\").toLowerCase()","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"                                .contains(expectedDesc.toLowerCase()))","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"                )","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"        );","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"        boolean matchesTags \u003d person.getTags().stream().anyMatch(personTag -\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"            tags.stream().anyMatch(searchTag -\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"                personTag.tagName.toLowerCase().contains(searchTag.toLowerCase())));","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"        return tags.isEmpty() ? matchesCategoryDescription","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"                : !categoryDescriptionMap.isEmpty()","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"                ? matchesTags \u0026\u0026 matchesCategoryDescription","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"                : matchesTags;","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"     * Compares this predicate with another object to determine if they are equal.","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"     * @param other The object to compare this predicate against.","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"     * @return True if the other object is a {@code PersonFieldsContainKeywordPredicate} with the same","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"     *         category-description map and tags, otherwise false.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"        if (!(other instanceof PersonFieldsContainKeywordPredicate)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"        PersonFieldsContainKeywordPredicate otherPredicate \u003d (PersonFieldsContainKeywordPredicate) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"        return categoryDescriptionMap.equals(otherPredicate.categoryDescriptionMap) \u0026\u0026 tags.equals(otherPredicate.tags);","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"     * Returns a string representation of this predicate, including the category-description map and tags.","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"     * @return A string representation of this predicate.","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"        return \"PersonFieldsContainKeywordPredicate{\"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"            + \"categoryDescriptionMap\u003d\" + categoryDescriptionMap","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"            + \", tags\u003d\" + tags","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"            + \u0027}\u0027;","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"ChenXy128":93}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"     * Replaces the target with the edited person.","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"      * @param target to be replaced.","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"     * @param editedPerson to replace the target.","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"    public void replacePerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ChenXy128":16,"-":149}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"        return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"    public String getTagName() {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"        return tagName;","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HongRay":3,"-":61,"Cedricaca":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"        Person p1 \u003d new Person(new Entry(\"Name\", \"Alex Yeoh\"), getTagSet(\"friends\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"        p1.addEntry(new Entry(\"Phone\", \"87438807\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"        p1.addEntry(new Entry(\"Email\", \"alexyeoh@example.com\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"        p1.addEntry(new Entry(\"Address\", \"Blk 30 Geylang Street 29, #06-40\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"        Person p2 \u003d new Person(new Entry(\"Name\", \"Bernice Yu\"), getTagSet(\"colleagues\", \"friends\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"        p2.addEntry(new Entry(\"Phone\", \"99272758\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"        p2.addEntry(new Entry(\"Email\", \"berniceyu@example.com\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"        p2.addEntry(new Entry(\"Address\", \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"        Person p3 \u003d new Person(new Entry(\"Name\", \"Charlotte Oliveiro\"), getTagSet(\"neighbours\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"        p3.addEntry(new Entry(\"Phone\", \"93210283\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"        p3.addEntry(new Entry(\"Email\", \"charlotte@example.com\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"        p3.addEntry(new Entry(\"Address\", \"Blk 11 Ang Mo Kio Street 74, #11-04\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"        Person p4 \u003d new Person(new Entry(\"Name\", \"David Li\"), getTagSet(\"family\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"        p4.addEntry(new Entry(\"Phone\", \"91031282\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"        p4.addEntry(new Entry(\"Email\", \"lidavid@example.com\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"        p4.addEntry(new Entry(\"Address\", \"Blk 436 Serangoon Gardens Street 26, #16-43\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"        Person p5 \u003d new Person(new Entry(\"Name\", \"Irfan Ibrahim\"), getTagSet(\"classmates\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"        p5.addEntry(new Entry(\"Phone\", \"92492021\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"        p5.addEntry(new Entry(\"Email\", \"irfan@example.com\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"        p5.addEntry(new Entry(\"Address\", \"Blk 47 Tampines Street 20, #17-35\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"        Person p6 \u003d new Person(new Entry(\"Name\", \"Roy Balakrishnan\"), getTagSet(\"colleagues\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"        p6.addEntry(new Entry(\"Phone\", \"92624417\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"        p6.addEntry(new Entry(\"Email\", \"royb@example.com\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"        p6.addEntry(new Entry(\"Address\", \"Blk 45 Aljunied Street 85, #11-31\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"        return new Person[] {p1, p2, p3, p4, p5, p6};","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":36,"Cedricaca":31}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":" * Class allowing entries to be stored as a Json","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"public class JsonAdaptedEntry {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"    private final String category;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"    private final String description;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"     * Creates an entry to be stored in Json","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"     * @param category","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"     * @param description","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    public JsonAdaptedEntry(@JsonProperty(\"category\") String category,","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"                            @JsonProperty(\"description\") String description) {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"    public String getCategory() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"        return category;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"        return description;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Cedricaca":31}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEntryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":" * Custom class to store Json EntryList","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"public class JsonAdaptedEntryList {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"    private final List\u003cJsonAdaptedEntry\u003e entryList;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"    public JsonAdaptedEntryList(@JsonProperty(\"entryList\") List\u003cJsonAdaptedEntry\u003e entryList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"        this.entryList \u003d entryList;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"    public List\u003cJsonAdaptedEntry\u003e getEntryList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"        return entryList;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Cedricaca":23}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"    private EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"            @JsonProperty(\"entryList\") JsonAdaptedEntryList jsonEntryList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"        // Adapt entryList to match the structure in the JSON","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"        for (JsonAdaptedEntry entry : jsonEntryList.getEntryList()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"            entryList.add(new Entry(entry.getCategory(), entry.getDescription()));","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"        // Assign the adapted entryList to this.entryList","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"        this.entryList \u003d entryList;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"        // Assign tags if not null","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"        entryList \u003d source.getList();","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"        Person result \u003d new Person(new Entry(\"Name\", \"name\"), modelTags);","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"        result.setList(entryList);","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"        return result;","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":55,"Cedricaca":21}},{"path":"src/main/java/seedu/address/ui/GroupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":" * A UI component that displays information of a {@code Group}.","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"public class GroupCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"    private static final String FXML \u003d \"GroupCard.fxml\";","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"    private static final String FONT_PATH \u003d \"../../resources/view/Pixel_font/PressStart2P-Regular.ttf\";","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"    public final Person group;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"    private Label groupNameLabel;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"    private Label nameListLabel;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"     * Creates a Group","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"    public GroupCard(Person group) {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"        super(FXML);","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"        this.group \u003d group;","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"        String text \u003d \"\";","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"        EntryList e \u003d group.getList();","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"        for (int i \u003d 0; i \u003c e.size(); i++) {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"            Entry entry \u003d e.get(i);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"            if (!entry.getCategory().equals(\"Group Name\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"                String inputString \u003d entry.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"                int colonIndex \u003d inputString.indexOf(\u0027:\u0027);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"                text \u003d text + inputString.substring(colonIndex + 1).trim() + \"\\n\";","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"        Entry groupNameEntry \u003d group.getEntry(\"Group Name\");","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"        if (groupNameEntry !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"            groupNameLabel.setText(groupNameEntry.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"            groupNameLabel.setText(\"\");","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"        groupNameLabel.setFont(Font.loadFont(FONT_PATH, 120));","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"        nameListLabel.setText(text);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"        nameListLabel.setFont(Font.loadFont(FONT_PATH, 120));","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"HongRay":56,"Cedricaca":3}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"    //testing","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    public static final String DASH \u003d \"----------------------------------------\"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"           + \"--------------------------------------\\n\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"    public static final String HELP_MENU \u003d \"Here is a list of commands and their examples.\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"            + \"Add: add n/NAME [t/TAG]…\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"            + \"e.g. add n/James Ho t/friend t/colleague\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"            + \"Add a Category: addCategory INDEX [c/CATEGORY] [d/DESCRIPTION]\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"            + \"e.g. addCategory 1 c/class d/warrior\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"            + \"Delete a Category: deleteCategory INDEX [c/CATEGORY]\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"            + \"deleteCategory 1 c/class\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"            + \"Edit a category: edit INDEX [c/CATEGORY] [d/DESCRIPTION]\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"HongRay"},"content":"            + \"Or\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"            + \"edit INDEX [t/TAG]\"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"            + \"e.g. edit 2 c/clan d/rainbow\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"            + \"e.g. edit 1 t/warrior t/mage\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"            + \"Find: find KEYWORD [MORE_KEYWORDS]\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"            + \"e.g. find James Jake\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"            + \"Delete an entry: delete INDEX\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"            + \"e.g. delete 3\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"            + \"Group: group [c/CATEGORY]\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"            + \"e.g. group c/clans\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"            + \"List: list\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"            + \"Undo: undo\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"            + \"Redo: redo\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"            + DASH","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"            + \"Clear: clear\\n\";","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"    private Label helpMenuLabel;","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"        helpMenuLabel.setText(HELP_MENU);","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"        helpMessage.prefWidthProperty().bind(helpMenuLabel.widthProperty());","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":146,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"HongRay"},"content":"    private void mouseClicked(MouseEvent event) {","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"HongRay"},"content":"        if (event.getSource() instanceof Button) {","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"HongRay"},"content":"            Button button \u003d (Button) event.getSource();","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"HongRay"},"content":"            // Change the button\u0027s background color","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"HongRay"},"content":"            button.setStyle(\"-fx-background-color: #f09905;\"); // Change to your desired color","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"HongRay"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"HongRay"},"content":"    private void mouseReleased(MouseEvent event) {","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"HongRay"},"content":"        if (event.getSource() instanceof Button) {","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"HongRay"},"content":"            Button button \u003d (Button) event.getSource();","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"HongRay"},"content":"            // Change the button\u0027s background color","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"HongRay"},"content":"            button.setStyle(\"-fx-background-color: #d6b47a;\"); // Change to your desired color","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"HongRay":63,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"    private PersonListPanel groupPersonListPanel;","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"    private ResultDisplay groupResultDisplay;","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"    private HBox rightPanel;","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"    private ObservableList\u003cPerson\u003e groups;","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"Xuyan0518"},"content":"    void fillOuterParts() {","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"HongRay"},"content":"        groups \u003d new FilteredList\u003c\u003e(logic.getFilteredGroupPersonList());","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"Xuyan0518"},"content":"        // Create a GridPane","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"Xuyan0518"},"content":"        GridPane gridPane \u003d new GridPane();","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"Xuyan0518"},"content":"        // Set properties of the GridPane (optional)","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"Xuyan0518"},"content":"        gridPane.setHgap(10); // Horizontal gap between cells","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"Xuyan0518"},"content":"        gridPane.setVgap(10); // Vertical gap between cells","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"Xuyan0518"},"content":"        // Add groupPersonCards to the GridPane","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"Xuyan0518"},"content":"        int columnIndex \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"Xuyan0518"},"content":"        int rowIndex \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"Xuyan0518"},"content":"        int maxColumns \u003d 5; // Define the maximum number of columns","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"HongRay"},"content":"        for (int i \u003d 0; i \u003c groups.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"HongRay"},"content":"            GroupCard groupPersonCard \u003d new GroupCard(groups.get(i));","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"Xuyan0518"},"content":"            // Add groupPersonCard to the GridPane","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"Xuyan0518"},"content":"            gridPane.add(groupPersonCard.getRoot(), columnIndex, rowIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"Xuyan0518"},"content":"            // Increment row index or move to the next column","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"Xuyan0518"},"content":"            columnIndex++;","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"Xuyan0518"},"content":"            if (columnIndex \u003e\u003d maxColumns) {","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"Xuyan0518"},"content":"                columnIndex \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"Xuyan0518"},"content":"                rowIndex++;","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"Xuyan0518"},"content":"        rightPanel.getChildren().add(gridPane);","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"Xuyan0518"},"content":"    void refreshRightPanel() {","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"Xuyan0518"},"content":"        // Clear existing content","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"Xuyan0518"},"content":"        rightPanel.getChildren().clear();","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"Xuyan0518"},"content":"        // Ensure it\u0027s observing the right list","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"HongRay"},"content":"        groups \u003d new FilteredList\u003c\u003e(logic.getFilteredGroupPersonList());","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"Xuyan0518"},"content":"        // Create a new GridPane","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"Xuyan0518"},"content":"        GridPane gridPane \u003d new GridPane();","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"Xuyan0518"},"content":"        gridPane.setHgap(10);","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"Xuyan0518"},"content":"        gridPane.setVgap(10);","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"HongRay"},"content":"        gridPane.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"Xuyan0518"},"content":"        // Add groupPersonCards to the GridPane","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"Xuyan0518"},"content":"        int columnIndex \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"Xuyan0518"},"content":"        int rowIndex \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"Xuyan0518"},"content":"        int maxColumns \u003d 5; // Define the maximum number of columns","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"HongRay"},"content":"        for (int i \u003d 0; i \u003c groups.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"HongRay"},"content":"            GroupCard groupPersonCard \u003d new GroupCard(groups.get(i));","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"Xuyan0518"},"content":"            // Add groupPersonCard to the GridPane","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"Xuyan0518"},"content":"            gridPane.add(groupPersonCard.getRoot(), columnIndex, rowIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"Xuyan0518"},"content":"            // Increment row index or move to the next column","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"Xuyan0518"},"content":"            columnIndex++;","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"Xuyan0518"},"content":"            if (columnIndex \u003e\u003d maxColumns) {","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"Xuyan0518"},"content":"                columnIndex \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"Xuyan0518"},"content":"                rowIndex++;","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"Xuyan0518"},"content":"        // Add the GridPane to the rightPanel","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"Xuyan0518"},"content":"        rightPanel.getChildren().add(gridPane);","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"Xuyan0518"},"content":"            this.refreshRightPanel();","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"HongRay":8,"-":196,"Xuyan0518":70}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"    private static final String FONT_PATH \u003d \"../../resources/view/Pixel_font/PressStart2P-Regular.ttf\";","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"    private Label result;","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"        String text \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"        EntryList e \u003d person.getList();","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"        for (int i \u003d 0; i \u003c e.size(); i++) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"            Entry entry \u003d e.get(i);","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"            if (!entry.getCategory().equals(\"Name\")) {","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"                text \u003d text + e.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"        id.setFont(Font.loadFont(FONT_PATH, 120));","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"        name.setText(person.getEntry(\"Name\").toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"        name.setFont(Font.loadFont(FONT_PATH, 120));","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"        result.setText(text);","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"        result.setFont(Font.loadFont(FONT_PATH, 120));","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"HongRay":5,"-":50,"Cedricaca":14}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/RD_Logo.png\";","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"            mainWindow.fillOuterParts();","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"HongRay":1,"-":87,"Xuyan0518":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink background */","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"    background-color: #ffffff; /* White background for default.html */","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #555555; /* Dark gray text */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #000000; /* Red text for bright labels */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #000000; /* Red text for headers */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"/* Similar changes should be made to other elements, adjusting colors to fit the light pink, red, and white theme. */","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    -fx-base: #ffe6ea; /* Lighter pink base for tables */","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"    -fx-control-inner-background: #ffe6ea; /* Lighter pink background */","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffe6ea; /* Lighter pink background */","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":".button {","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"    -fx-border-color: #ffccd5; /* Light pink border */","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffffff; /* White background for buttons */","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #ff0000; /* Red text */","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":".button:hover {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink background on hover */","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"/* Continue updating other elements in a similar manner to achieve the desired light pink, red, and white theme. */","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #fff0f3; /* Very light pink background for list views */","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink for even rows */","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffebf0; /* Even lighter pink for odd rows */","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ff667a; /* A more vivid pink for selected items */","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"    -fx-border-color: #ff2043; /* Red border for selected items */","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #000000; /* Red text for labels in list cells */","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #ff0000; /* Red text for big labels */","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #ff0000; /* Red text for small labels */","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"HongRay"},"content":".split-pane {","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"HongRay"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"HongRay"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #fff0f3; /* Very light pink background for split panes */","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffebf0; /* Light pink background for the status bar */","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":112,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #000000; /* Red text for status bar labels */","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ff667a; /* More vivid pink for pressed buttons */","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"HongRay"},"content":".scroll-bar {","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #fff0f3; /* Light pink for scroll bar background */","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"HongRay"},"content":".scroll-bar .thumb {","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink for scroll bar thumb */","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"HongRay"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"HongRay"},"content":"/* Continue with this theme styling for any other elements as needed, ensuring all colors are adjusted to fit the light pink, red, and white palette. */","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #fff0f3; /* Light pink background for dialog panes */","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink for button bars in dialogs */","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #000000; /* Red text for dialog content */","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink for dialog headers */","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: white; /* White text for dialog header labels */","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"HongRay"},"content":".menu-bar {","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink for menu bars */","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"HongRay"},"content":".menu-bar .label {","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"HongRay"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"HongRay"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #000000; /* Red text for menu bar labels */","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"HongRay"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":168,"author":{"gitId":"HongRay"},"content":".context-menu {","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffebf0; /* Light pink for context menus */","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":172,"author":{"gitId":"HongRay"},"content":".context-menu .label {","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill: #000000; /* Red text for context menu items */","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink for scroll bar arrows */","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink for scroll bar arrows */","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ffccd5; /* Light pink for filtered fields and panels */","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":192,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: transparent, #ffccd5, transparent, #ffccd5;","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":196,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":203,"author":{"gitId":"HongRay"},"content":"    -fx-background-color: #ff2043; /* Red background for tags */","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":209,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"HongRay":64,"-":144,"Xuyan0518":1}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"    -fx-background: #d06651;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"/* Hide the vertical scroll bar */","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":".scroll-pane .scroll-bar:vertical {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"/* Hide the horizontal scroll bar */","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":".scroll-pane .scroll-bar:horizontal {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"HongRay":1,"-":18,"Xuyan0518":10}},{"path":"src/main/resources/view/GroupCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HongRay"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"   \u003cGridPane style\u003d\"-fx-background-color: #ff8f8f; -fx-background-radius: 10;\" styleClass\u003d\"grid-pane\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"HongRay"},"content":"      \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"      \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"      \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"105\" style\u003d\"-fx-background-color: #ffe680; -fx-border-color: #ffb380; -fx-border-width: 3; -fx-background-radius: 9; -fx-border-radius: 10;\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"         \u003cHBox alignment\u003d\"TOP_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"            \u003c!-- Wrap groupNameLabel inside a ScrollPane for horizontal scrolling --\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"            \u003cScrollPane hbarPolicy\u003d\"ALWAYS\" maxHeight\u003d\"50\" minHeight\u003d\"50\" prefHeight\u003d\"50\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\" vbarPolicy\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"               \u003ccontent\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"                  \u003cLabel fx:id\u003d\"groupNameLabel\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black;\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"                        \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"               \u003c/content\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"         \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"         \u003cVBox alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_small_label\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"            \u003c!-- Wrap nameListLabel inside a ScrollPane for vertical scrolling --\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"            \u003cScrollPane hbarPolicy\u003d\"NEVER\" maxHeight\u003d\"200\" minHeight\u003d\"200\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\" vbarPolicy\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"               \u003ccontent\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"                  \u003cLabel fx:id\u003d\"nameListLabel\" alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_small_label\" style\u003d\"-fx-text-fill: black;\" text\u003d\"\\$result\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"                        \u003cFont size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"               \u003c/content\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"   \u003c/GridPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"HongRay":25,"Xuyan0518":22}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"HongRay"},"content":"    -fx-text-fill:  black;","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"HongRay":1,"-":18}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"\u003cfx:root title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"HongRay"},"content":"      \u003cVBox alignment\u003d\"CENTER\" spacing\u003d\"10\" style\u003d\"-fx-background-color: #ffffd6;\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"        \u003cLabel fx:id\u003d\"helpMenuLabel\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" style\u003d\"-fx-background-color: #ffffd6; -fx-text-alignment: center; -fx-background-radius: 5; -fx-padding: 2;\" text\u003d\"Help Menu\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"               \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"HongRay"},"content":"        \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" style\u003d\"-fx-background-color: #ffffd6; -fx-background-radius: 10; -fx-padding: 2; -fx-border-color: #d6b47a;\" text\u003d\"Label\" textFill\u003d\"#d6b47a\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" onMousePressed\u003d\"#mouseClicked\" onMouseReleased\u003d\"#mouseReleased\" prefHeight\u003d\"25.0\" prefWidth\u003d\"150.0\" style\u003d\"-fx-background-color: #d6b47a;\" text\u003d\"Copy URL\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"HongRay":17,"-":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"HongRay"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Rainbow Dragon\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"HongRay"},"content":"    \u003cImage url\u003d\"@/images/RD_Logo.png\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"      \u003cSplitPane dividerPositions\u003d\"0.7\"\u003e \u003c!-- Adjust dividerPositions as needed --\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"        \u003c!-- Left side --\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"        \u003cVBox maxWidth\u003d\"300\" minWidth\u003d\"200\" prefWidth\u003d\"250\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #d6b47a;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"          \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"          \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"          \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"300\" prefWidth\u003d\"350\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"        \u003c!-- Right side --\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"        \u003cVBox fx:id\u003d\"rightSideContent\" minWidth\u003d\"200\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"          \u003cStackPane opacity\u003d\"0.7\" style\u003d\"-fx-background-color: #ffffd6;\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"                     \u003cImageView fx:id\u003d\"RD_Watermark\" opacity\u003d\"0.53\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"                        \u003cimage\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"                           \u003cImage url\u003d\"@../images/RD_Logo.png\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"                        \u003c/image\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"                     \u003c/ImageView\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"            \u003cHBox fx:id\u003d\"rightPanel\" \u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"      \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"HongRay":13,"-":39,"Xuyan0518":23}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"  \u003cGridPane style\u003d\"-fx-background-color: #ff8f8f;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" style\u003d\"-fx-background-color: #ffa28f; -fx-border-color: #ffffff; -fx-border-width: 2;\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"      \u003cLabel fx:id\u003d\"result\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$result\" /\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"HongRay":12,"-":19,"Cedricaca":1}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"  \u003cListView fx:id\u003d\"personListView\" style\u003d\"-fx-background-color: #d06651;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"HongRay":4,"-":4}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"HongRay"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" style\u003d\"-fx-background-color: #ff667a;\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"HongRay":4,"-":4}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"HongRay"},"content":"        assertNotNull(AppUtil.getImage(\"/images/RD_Logo_noBackground.png\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"HongRay":1,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/AddCategoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"public class AddCategoryCommandTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"    private AddCategoryCommand addCategoryCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCategoryCommand(null, new EntryList()));","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    public void constructor_nullEntryList_throwsNullPointerException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCategoryCommand(Index.fromZeroBased(0), null));","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Cedricaca":21}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    public void execute_validPersonWithoutEntry_success() throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, null);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"        CommandResult commandResult \u003d addCommand.execute(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"    public void execute_validPersonWithEntry_success() throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"        entryList.add(new Entry(\"Category\", \"Description\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, entryList);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        CommandResult commandResult \u003d addCommand.execute(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"    public void execute_validPersonWithMultipleEntries_success() throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"        entryList.add(new Entry(\"Category1\", \"Description1\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"        entryList.add(new Entry(\"Category2\", \"Description2\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"        entryList.add(new Entry(\"Category3\", \"Description3\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"        Person validPerson \u003d new PersonBuilder().withEntries(entryList.get(0), entryList.get(1),","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"                entryList.get(2)).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, entryList);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"        CommandResult commandResult \u003d addCommand.execute(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"    public void execute_validPersonWithCategoryWithoutDescription_success() throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"        entryList.add(new Entry(\"Category1\", \"\")); // Empty description","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"        Person validPerson \u003d new PersonBuilder().withEntries(entryList.get(0)).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, entryList);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"        CommandResult commandResult \u003d addCommand.execute(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"    public void execute_validPersonWithDescriptionWithoutCategory_success() throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"        entryList.add(new Entry(\"\", \"Description1\")); // Empty category","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"        Person validPerson \u003d new PersonBuilder().withEntries(entryList.get(0)).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, entryList);","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        CommandResult commandResult \u003d addCommand.execute(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"-":40,"Xuyan0518":50}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"    public void execute_clearConfirmed_clearsAddressBook() {","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"        ClearCommand clearCommand \u003d new ClearCommand();","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"        assertTrue(clearCommand.equals(clearCommand));","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"-":10,"Xuyan0518":4}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"    public static final String VALID_CLAN_BOB \u003d \"Lightning\";","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"    public static final String VALID_CLASS_BOB \u003d \"Explorer\";","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"    public static final String VALID_CLAN_AMY \u003d \"Ocean\";","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"    public static final String VALID_CLASS_AMY \u003d \"Science\";","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"    public static final String VALID_TAG_AMY \u003d \"Friendly\";","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"    public static final String VALID_TAG_BOB \u003d \"Strategist\";","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().addEditorEntry(new Entry(\"Name\", VALID_NAME_AMY))","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"                .addEditorEntry(new Entry(\"Clan\", VALID_CLAN_AMY))","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"                .addEditorEntry(new Entry(\"Class\", VALID_CLASS_AMY))","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"                .build();","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().addEditorEntry(new Entry(\"Name\", VALID_NAME_BOB))","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"                .addEditorEntry(new Entry(\"Clan\", VALID_CLAN_BOB))","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"                .addEditorEntry(new Entry(\"Class\", VALID_CLASS_BOB))","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"HongRay":12,"-":106,"Cedricaca":1,"Xuyan0518":4}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCategoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NusMinato"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"NusMinato"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SIXTH_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"NusMinato"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"NusMinato"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"NusMinato"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"NusMinato"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"NusMinato"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"NusMinato"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"NusMinato"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"NusMinato"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"NusMinato"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"NusMinato"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"NusMinato"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"public class DeleteCategoryCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"NusMinato"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"NusMinato"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"NusMinato"},"content":"    public void execute_validOneCategoryDeleteCategory_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"NusMinato"},"content":"        Index validIndex \u003d INDEX_SIXTH_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"NusMinato"},"content":"        List\u003cString\u003e validCategory \u003d List.of(\"Clan\");","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"NusMinato"},"content":"        DeleteCategoryCommand deleteCategoryCommand \u003d new DeleteCategoryCommand(validIndex, validCategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"NusMinato"},"content":"        Person expectedPerson \u003d new PersonBuilder().withEntries(","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"NusMinato"},"content":"                new Entry(\"Name\", \"Fiona\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"NusMinato"},"content":"                new Entry(\"Class\", \"Sailor\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"NusMinato"},"content":"                new Entry(\"Game\", \"Adventure\")","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"NusMinato"},"content":"            ).withTag(\"Explorer\", \"Seafarer\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"NusMinato"},"content":"        String expectedMessage \u003d String.format(DeleteCategoryCommand.MESSAGE_DELETE_CATEGORY_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"NusMinato"},"content":"                Messages.format(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"NusMinato"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"NusMinato"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"NusMinato"},"content":"            CommandResult result \u003d deleteCategoryCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"NusMinato"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"NusMinato"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"NusMinato"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"NusMinato"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"NusMinato"},"content":"    public void execute_validManyCategoriesDeleteCategory_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"NusMinato"},"content":"        Index validIndex \u003d INDEX_FOURTH_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"NusMinato"},"content":"        List\u003cString\u003e validCategory \u003d List.of(\"Clan\", \"Class\");","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"NusMinato"},"content":"        DeleteCategoryCommand deleteCategoryCommand \u003d new DeleteCategoryCommand(validIndex, validCategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"NusMinato"},"content":"        Person expectedPerson \u003d new PersonBuilder().withEntries(","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"NusMinato"},"content":"                new Entry(\"Name\", \"Daniel\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"NusMinato"},"content":"                new Entry(\"Game\", \"Stealth\")","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"NusMinato"},"content":"        ).withTag(\"Sneaky\", \"Assassin\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"NusMinato"},"content":"        String expectedMessage \u003d String.format(DeleteCategoryCommand.MESSAGE_DELETE_CATEGORY_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"NusMinato"},"content":"                Messages.format(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"NusMinato"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"NusMinato"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"NusMinato"},"content":"            CommandResult result \u003d deleteCategoryCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"NusMinato"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"NusMinato"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"NusMinato"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"NusMinato"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"NusMinato"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"NusMinato":65}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"class DeleteCommandTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"-":34,"Xuyan0518":1}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLAN_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"HongRay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_OUTOFBOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"    //testing","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"        Person editedPerson \u003d new PersonBuilder().withEntries(new Entry(\"Clan\", \"Rainbow\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"                        new Entry(\"Class\", \"Warrior\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"                        new Entry(\"Game\", \"RPG\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"                        new Entry(\"Name\", \"Alice\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"                .withTag(\"Noob\", \"Lord\")","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"                .build();","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"            CommandResult result \u003d editCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"HongRay"},"content":"        Person expectedPerson \u003d new PersonBuilder().withEntries(new Entry(\"Clan\" , VALID_CLAN_BOB),","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"HongRay"},"content":"                new Entry(\"Class\", \"Archer\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"                new Entry(\"Game\", \"Survival\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"                        new Entry(\"Name\", VALID_NAME_BOB))","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"                .withTag(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"                .addEditorEntry(new Entry(\"Name\", VALID_NAME_BOB))","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"                .addEditorEntry(new Entry(\"Clan\" , VALID_CLAN_BOB))","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"                        .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"HongRay"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"HongRay"},"content":"                Messages.format(expectedPerson));","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"HongRay"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"HongRay"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"HongRay"},"content":"            CommandResult result \u003d editCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"HongRay"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"HongRay"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"HongRay"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"HongRay"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"HongRay"},"content":"                .addEditorEntry(new Entry(\"Name\", VALID_NAME_BOB)).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"HongRay"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_OUTOFBOUND,","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"HongRay"},"content":"                new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"HongRay"},"content":"                        .addEditorEntry(new Entry(\"Name\", VALID_NAME_BOB)).build());","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"HongRay":41,"-":108,"Cedricaca":1}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"import seedu.address.model.person.PersonFieldsContainKeywordPredicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":" * Contains integration tests (interaction with the Model) and unit tests for FindCommand.","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"    private Model model;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"     * Sets up the model and expectedModel with a typical address book before each test.","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"     * This ensures a consistent starting state for tests.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"     * Tests the equality of the FindCommand. Verifies that:","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"     * - A FindCommand equals itself.","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"     * - Two FindCommand objects with the same predicate are equal.","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"     * - A FindCommand is not equal to null.","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"     * - A FindCommand is not equal to an object of a different type.","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"     * - Two FindCommand objects with different predicates are not equal.","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"        HashMap\u003cString, List\u003cString\u003e\u003e categoryDescriptionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"        categoryDescriptionMap.put(\"LOL\", Arrays.asList(\"King\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"        PersonFieldsContainKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"            new PersonFieldsContainKeywordPredicate(categoryDescriptionMap, new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"        PersonFieldsContainKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"            new PersonFieldsContainKeywordPredicate(new HashMap\u003c\u003e(), new HashSet\u003c\u003e(Arrays.asList(\"friend\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"     * Tests the behavior of FindCommand with no keywords. Verifies that no persons are found and the","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"     * resulting list is empty.","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"        PersonFieldsContainKeywordPredicate predicate \u003d preparePredicate(\" \", \" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"     * Tests the FindCommand\u0027s ability to filter persons based on a single category and description pair.","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"     * Verifies that the correct person is found.","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"    public void execute_singleCategoryDescription_singlePersonsFound() {","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"        PersonFieldsContainKeywordPredicate predicate \u003d preparePredicate(\"Clan\", \"Rainbow\");","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"     * Tests the FindCommand\u0027s functionality with multiple categories and descriptions.","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"     * Verifies that all matching persons are correctly identified and listed.","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"    public void execute_multipleCategoriesKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"        PersonFieldsContainKeywordPredicate predicate \u003d preparePredicate(","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"            \"Class\", \"Warrior\", \"Class\", \"Mage\", \"Class\", \"Priest\");","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(model.getFilteredPersonList().containsAll(Arrays.asList(ALICE, BENSON, CARL)));","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"     * Tests the FindCommand\u0027s handling of non-existing category and description pairs.","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"     * Verifies that no persons are found when the specified category and description do not match any person.","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"    public void execute_nonExistingCategoryAndDescription_noPersonFound() {","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"        PersonFieldsContainKeywordPredicate predicate \u003d preparePredicate(\"NilCategory\", \"NilDescription\");","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"ChenXy128"},"content":"     * Tests the FindCommand\u0027s ability to filter persons based on one tag.","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"     * Verifies that the correct person is found when valid tag is used","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"    public void execute_singleValidTag_singlePersonFound() {","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"        Set\u003cString\u003e tags \u003d new HashSet\u003c\u003e(Arrays.asList(\"Noob\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"        PersonFieldsContainKeywordPredicate predicate \u003d new PersonFieldsContainKeywordPredicate(new HashMap\u003c\u003e(), tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"ChenXy128"},"content":"     * Tests the FindCommand\u0027s ability to filter persons based on multiple tags.","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"ChenXy128"},"content":"     * Verifies that the correct persons are found when valid tags are used.","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"ChenXy128"},"content":"    public void execute_multipleValidTags_multiplePersonsFound() {","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"ChenXy128"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"ChenXy128"},"content":"        Set\u003cString\u003e tags \u003d new HashSet\u003c\u003e(Arrays.asList(\"Noob\", \"Veteran\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"ChenXy128"},"content":"        PersonFieldsContainKeywordPredicate predicate \u003d new PersonFieldsContainKeywordPredicate(new HashMap\u003c\u003e(), tags);","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"ChenXy128"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"ChenXy128"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"ChenXy128"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"ChenXy128"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"ChenXy128"},"content":"     * Helper method to prepare a {@link PersonFieldsContainKeywordPredicate} based on the provided category","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"ChenXy128"},"content":"     * and description pairs. Facilitates easier creation of predicates for testing.","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"ChenXy128"},"content":"     * @param categoryDescriptionPairs Varargs input where each pair of strings represent","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"ChenXy128"},"content":"     *     a category and its corresponding description.","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"ChenXy128"},"content":"     * @return A {@code PersonFieldsContainKeywordPredicate} created from the specified category and description pairs.","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"ChenXy128"},"content":"    private PersonFieldsContainKeywordPredicate preparePredicate(String... categoryDescriptionPairs) {","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"ChenXy128"},"content":"        Map\u003cString, List\u003cString\u003e\u003e categoryDescriptionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"ChenXy128"},"content":"        for (int i \u003d 0; i \u003c categoryDescriptionPairs.length; i +\u003d 2) {","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"ChenXy128"},"content":"            String category \u003d categoryDescriptionPairs[i];","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"ChenXy128"},"content":"            String description \u003d categoryDescriptionPairs[i + 1];","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"ChenXy128"},"content":"            categoryDescriptionMap.computeIfAbsent(category, k -\u003e new ArrayList\u003c\u003e()).add(description);","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"ChenXy128"},"content":"        return new PersonFieldsContainKeywordPredicate(categoryDescriptionMap, new HashSet\u003c\u003e());","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"ChenXy128":118,"-":50}},{"path":"src/test/java/seedu/address/logic/commands/GroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"public class GroupCommandTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"    private GroupCommand groupCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    public void constructor_nullCategory_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GroupCommand(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"Xuyan0518":15}},{"path":"src/test/java/seedu/address/logic/parser/AddCategoryCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.logic.commands.AddCategoryCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"public class AddCategoryCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    private final AddCategoryCommandParser parser \u003d new AddCategoryCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"    public void parse_validArgs_returnsAddCategoryCommand() throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"        String args \u003d \"1 \" + CliSyntax.PREFIX_CATEGORY + \"category1 \" + CliSyntax.PREFIX_DESCRIPTION + \"description1\";","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"        EntryList e \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"        e.add(new Entry(\"category1\", \"description1\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"        AddCategoryCommand expectedCommand \u003d new AddCategoryCommand(Index.fromOneBased(1), e);","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"    public void parse_missingIndex_throwsParseException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"        String args \u003d CliSyntax.PREFIX_CATEGORY + \"category1 \" + CliSyntax.PREFIX_DESCRIPTION + \"description1\";","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"    public void parse_missingCategory_throwsParseException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"        String args \u003d \"1 \" + CliSyntax.PREFIX_DESCRIPTION + \"description1\";","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"    public void parse_missingDescription_throwsParseException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"        String args \u003d \"1 \" + CliSyntax.PREFIX_CATEGORY + \"category1\";","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"    // Add more test cases as needed","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Cedricaca":48}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"-":14,"Xuyan0518":3}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCategoryCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NusMinato"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"NusMinato"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"NusMinato"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"NusMinato"},"content":"import seedu.address.logic.commands.DeleteCategoryCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"NusMinato"},"content":"public class DeleteCategoryCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"NusMinato"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"NusMinato"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCategoryCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"NusMinato"},"content":"    private DeleteCategoryCommandParser parser \u003d new DeleteCategoryCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"NusMinato"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"NusMinato"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"NusMinato"},"content":"        // no field specified","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"NusMinato"},"content":"        assertParseFailure(parser, \"2\", DeleteCategoryCommand.MESSAGE_EMPTY_CATEGORY);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"NusMinato"},"content":"        // no index and no field specified","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"NusMinato"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"NusMinato"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"NusMinato"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"NusMinato"},"content":"        // negative index","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"NusMinato"},"content":"        assertParseFailure(parser, \"-1\" + NAME_DESC_BOB, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"NusMinato"},"content":"        // zero index","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"NusMinato"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_BOB, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"NusMinato"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"NusMinato"},"content":"        assertParseFailure(parser, \"1 b a l a b a l a\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"NusMinato"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"NusMinato"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"NusMinato"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"NusMinato"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"NusMinato"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"NusMinato":38}},{"path":"src/test/java/seedu/address/logic/parser/GroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"public class GroupCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    private final GroupCommandParser parser \u003d new GroupCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    public void parse_missingCategory_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"        String args \u003d \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"    public void parse_emptyCategory_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"        String args \u003d \" \" + CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"    public void parse_tooManyCategories_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"        String args \u003d \" \" + CliSyntax.PREFIX_CATEGORY + \"category1\"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"                + \" \" + CliSyntax.PREFIX_CATEGORY + \"category2\";","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"Xuyan0518":32}},{"path":"src/test/java/seedu/address/model/person/EntryListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"public class EntryListTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"    public void add_validEntry_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(entry);","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(1, entryList.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"    public void get_validIndex_returnsEntry() {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(entry);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(entry, entryList.get(0));","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"    public void get_invalidIndex_returnsNull() {","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"        assertNull(entryList.get(0));","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"    public void get_validCategory_returnsEntry() {","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(entry);","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(entry, entryList.get(\"Category\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"    public void get_invalidCategory_returnsNull() {","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"        assertNull(entryList.get(\"NonexistentCategory\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"    public void size_emptyList_returnsZero() {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(0, entryList.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"    public void delete_validCategory_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(entry);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"        entryList.delete(\"Category\");","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(0, entryList.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"    public void delete_invalidCategory_noChange() {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(entry);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"        entryList.delete(\"NonexistentCategory\");","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(1, entryList.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"    public void sort_validList_sorted() {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(new Entry(\"Z\", \"Description Z\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(new Entry(\"A\", \"Description A\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"Cedricaca"},"content":"        entryList.sort();","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(\"A\", entryList.get(0).getCategory());","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(\"Z\", entryList.get(1).getCategory());","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"Cedricaca"},"content":"    public void toString_validList_returnsStringRepresentation() {","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"Cedricaca"},"content":"        EntryList entryList \u003d new EntryList();","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(new Entry(\"Category1\", \"Description1\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"Cedricaca"},"content":"        entryList.add(new Entry(\"Category2\", \"Description2\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(\"seedu.address.model.person.EntryList{Category\u003dCategory1, \"","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"Cedricaca"},"content":"                + \"Description\u003dDescription1, Category\u003dCategory2, Description\u003dDescription2}\", entryList.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Cedricaca":88}},{"path":"src/test/java/seedu/address/model/person/EntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"public class EntryTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"    public void constructor_validEntry_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(\"Category\", entry.getCategory());","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(\"Description\", entry.getDescription());","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"    public void isValid_validEntry_returnsTrue() {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"        assertTrue(Entry.isValid(\"Category\", \"Description\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"    public void isValid_invalidDescription_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"        assertFalse(Entry.isValid(\"Category\", \"\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"    public void isValid_invalidCategory_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"        assertFalse(Entry.isValid(\"\", \"Description\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"    public void toString_validEntry_returnsStringRepresentation() {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(\"Category: Description\", entry.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"        assertTrue(entry.equals(entry));","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"    public void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"        assertFalse(entry.equals(\"Not an Entry object\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"    public void equals_equalAttributes_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"        Entry entry1 \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"        Entry entry2 \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"        assertFalse(entry1.equals(entry2));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"Cedricaca"},"content":"    public void equals_differentCategory_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"        Entry entry1 \u003d new Entry(\"Category1\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"        Entry entry2 \u003d new Entry(\"Category2\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"        assertFalse(entry1.equals(entry2));","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"    public void equals_differentDescription_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"        Entry entry1 \u003d new Entry(\"Category\", \"Description1\");","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"        Entry entry2 \u003d new Entry(\"Category\", \"Description2\");","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"        assertFalse(entry1.equals(entry2));","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"    public void hashCode_sameObject_equalHashCode() {","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"        Entry entry \u003d new Entry(\"Category\", \"Description\");","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(entry.hashCode(), entry.hashCode());","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Cedricaca":77}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    public void constructor_validNameAndTags_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"        Entry name \u003d new Entry(\"Name\", \"John Doe\");","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"        tags.add(new Tag(\"Friend\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"        Person person \u003d new Person(name, tags);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(name, person.getEntry(\"Name\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(tags, person.getTags());","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"    public void isSamePerson_samePerson_returnsTrue() {","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"        Person person \u003d new Person(new Entry(\"Name\", \"John Doe\"), Collections.emptySet());","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"        assertTrue(person.isSamePerson(person));","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"    public void isSamePerson_differentPerson_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"        Person person1 \u003d new Person(new Entry(\"Name\", \"John Doe\"), Collections.emptySet());","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"        Person person2 \u003d new Person(new Entry(\"Name\", \"Jane Doe\"), Collections.emptySet());","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"        assertFalse(person1.isSamePerson(person2));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"    public void equals_samePerson_returnsTrue() {","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"        Person person \u003d new Person(new Entry(\"Name\", \"John Doe\"), Collections.emptySet());","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"        assertTrue(person.equals(person));","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"    public void equals_differentPerson_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"        Person person1 \u003d new Person(new Entry(\"Name\", \"John Doe\"), Collections.emptySet());","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"        Person person2 \u003d new Person(new Entry(\"Name\", \"Jane Doe\"), Collections.emptySet());","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"        assertFalse(person1.equals(person2));","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"-":24,"Cedricaca":28}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"HongRay"},"content":"        descriptor \u003d new EditPersonDescriptor(person);","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"     * Sets the entry for the specified category in the edit person descriptor.","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"     * This method allows setting or updating an entry associated with a specific category.","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"     * If an entry with the given category already exists in the descriptor, its details","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"     * are updated. Otherwise, the new entry is added.","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"     * @param entry The entry object containing the details to be set or updated. Cannot be null.","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"     * @return The instance of this {@code EditPersonDescriptorBuilder} to allow for method chaining.","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"HongRay"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"HongRay"},"content":"    public EditPersonDescriptorBuilder addEditorEntry(Entry entry) {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"        descriptor.addEntry(entry);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"HongRay":14,"-":45}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.EntryList;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"    private EntryList entryList;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"        entryList \u003d new EntryList();","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"        // Add default values for entries and tags if necessary","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"        entryList \u003d personToCopy.getList();","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"     * Sets the {@code EntryList} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"    public PersonBuilder withEntries(Entry... entries) {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"        for (Entry entry : entries) {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"            this.entryList.add(entry);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"     * Adds a new tag to the set of tags of the {@code Person} we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"    public PersonBuilder withTag(String... tagName) {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"        for (String tag : tagName) {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"            this.tags.add(new Tag(tag));","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"     * Builds and returns the Person.","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"        return new Person(entryList, tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"HongRay":18,"-":42}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"NusMinato"},"content":"    public static final Index INDEX_FOURTH_PERSON \u003d Index.fromOneBased(4);","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"NusMinato"},"content":"    public static final Index INDEX_FIFTH_PERSON \u003d Index.fromOneBased(5);","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"NusMinato"},"content":"    public static final Index INDEX_SIXTH_PERSON \u003d Index.fromOneBased(6);","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"HongRay"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"    public static final Index INDEX_OUTOFBOUND \u003d Index.fromOneBased(20);","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"HongRay":2,"-":12,"NusMinato":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"HongRay"},"content":"import seedu.address.model.person.Entry;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"HongRay"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\" , \"Alice\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Rainbow\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Warrior\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"RPG\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Noob\", \"Lord\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"NusMinato"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"Benson\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Thunder\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Mage\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"Strategy\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Veteran\", \"Strategist\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"NusMinato"},"content":"    public static final Person CARL \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"Carl\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Sunshine\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Priest\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"MMORPG\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Healer\", \"Friendly\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"NusMinato"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"Daniel\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Shadow\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Rogue\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"Stealth\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Sneaky\", \"Assassin\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"NusMinato"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"Elle\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Flame\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Berserker\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"Action\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Aggressive\", \"Powerful\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"HongRay"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"Fiona\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Ocean\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Sailor\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"Adventure\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Explorer\", \"Seafarer\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"HongRay"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"George\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Wind\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Archer\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"Survival\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Sharpshooter\", \"Resourceful\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"HongRay"},"content":"    public static final Person HOON \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"Hoon\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Mountain\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Monk\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"Fantasy\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Monastic\", \"Zen\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"HongRay"},"content":"    public static final Person IDA \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"Ida\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Volcano\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Sorcerer\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"Puzzle\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Mystic\", \"Brainy\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"HongRay"},"content":"    public static final Person AMY \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"Amy\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Desert\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Explorer\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"History\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Adventurous\", \"Curious\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"HongRay"},"content":"    public static final Person BOB \u003d new PersonBuilder().withEntries(TypicalPersons.entry(\"Name\", \"Bob\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Clan\", \"Jungle\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Class\", \"Scientist\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"HongRay"},"content":"                    TypicalPersons.entry(\"Game\", \"Science\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"HongRay"},"content":"            .withTag(\"Innovative\", \"Smart\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"HongRay"},"content":"    private static Entry entry(String category, String description) {","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"HongRay"},"content":"        return new Entry(category, description);","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"HongRay"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"HongRay":55,"-":38,"Cedricaca":1,"NusMinato":4}}]
