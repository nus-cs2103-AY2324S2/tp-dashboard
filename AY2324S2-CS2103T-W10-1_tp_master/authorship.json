[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-W10-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"# Welcome to Realodex","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"* This is **CS2103T W10-1\u0027s Brownfield implementation of AddressBook 3** .\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * as a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"## So what is this project about?","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"* This project aims to help real estate agents with keeping track of their client data in their day-to-day activity.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"* This project is also optimised for fast typing users and hence we will focus on a well optimised CLI system.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"* The project simulates an ongoing software project for a desktop application by extending CS2103T\u0027s existing project (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"  * It is **written in OOP fashion**. It provides a **very well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"* It is named `Realodex` (`RDX` for short) as we were inspired by the real life Rolodex that helps store a contact list. Importantly, it sounds catchy too.","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://ay2324s2-cs2103t-w10-1.github.io/tp/)**.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"UdhayaShan1":13,"-":8}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"mainClassName \u003d \u0027seedu.realodex.Main\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"    archiveFileName \u003d \u0027realodex.jar\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"run {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"UdhayaShan1":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"appleraincoat"},"content":"You can reach us at the email `cs2103t_w10_1[at]comp.nus.edu.sg`","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"### James Lau","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"appleraincoat"},"content":"\u003cimg src\u003d\"images/appleraincoat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"appleraincoat"},"content":"[[github](https://github.com/appleraincoat)]","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"appleraincoat"},"content":"[[portfolio](team/appleraincoat)]","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"### Tan Wee Kian, Justin","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"\u003cimg src\u003d\"images/jyztintan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"[[github](http://github.com/jyztintan)]","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"[[portfolio](team/jyztintan.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"* Role: Developer","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"* Responsibilities: TBC","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"wapisai"},"content":"### Alicia Yap","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wapisai"},"content":"\u003cimg src\u003d\"images/wapisai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"wapisai"},"content":"[[github](http://github.com/wapisai)] [[portfolio](team/wapisai.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"4llysa"},"content":"### Allysa Tan","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"4llysa"},"content":"\u003cimg src\u003d\"images/4llysa.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"4llysa"},"content":"[[github](http://github.com/4llysa)]","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"4llysa"},"content":"[[portfolio](team/4llysa.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"### Shanmugam Udhaya","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"\u003cimg src\u003d\"images/udhayashan1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"[[github](http://github.com/udhayashan1)]","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"[[portfolio](team/udhaya.md)]","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"* Responsibilities: TBC","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"4llysa":4,"jyztintan":6,"-":38,"UdhayaShan1":5,"appleraincoat":5,"wapisai":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"# Realodex Developer Guide","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"https://ay2324s2-cs2103t-w10-1.github.io/tp/DeveloperGuide.html","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"* implements its functionality using a concrete `LogicManager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"Realodex has implemented a dynamic delete function that either deletes user by index or by their name. Here we illustrate","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"deletion by index for brevity.","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"appleraincoat"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `RealodexParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"appleraincoat"},"content":"* When called upon to parse a user command, the `RealodexParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `RealodexParser` returns back as a `Command` object.","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"700\" /\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"appleraincoat"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the Realodex, which `Person` references. This allows Realodex to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"appleraincoat"},"content":"* inherits from both `RealodexStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"appleraincoat"},"content":"Classes used by multiple components are in the `seedu.realodex.commons` package.","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"4llysa"},"content":"``### Filter by Name feature","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"jyztintan"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"jyztintan"},"content":"The Filter by Name feature allows users to filter the list of persons in Realodex based on their names. ","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"jyztintan"},"content":"It is implemented using a predicate that checks if a person\u0027s name contains the keyphrase provided by the user. ","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"jyztintan"},"content":"The key components involved in this feature include:","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"jyztintan"},"content":"- FilterCommand: A command that, when executed, updates the filtered person list based on the predicate.","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"jyztintan"},"content":"- NameContainsKeyphrasePredicate: A predicate that tests whether a person\u0027s name contains the given keyphrase.","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"jyztintan"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"jyztintan"},"content":"1. The user launches the application and the Model is initialized with the initial list of persons. ","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"jyztintan"},"content":"2. The user executes the command filter n/John, intending to filter out persons whose names contain \"John\".","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"jyztintan"},"content":"3. `LogicManager` parses the command, creating a FilterCommand with a NameContainsKeyphrasePredicate initialized with \"John\".","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"jyztintan"},"content":"4. `FilterCommand` is executed, using the predicate to filter the list of persons.","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"jyztintan"},"content":"5. The UI is updated to show only the persons whose names contain \"John\".","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"jyztintan"},"content":"#### Design considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"jyztintan"},"content":"Aspect: Handling of partial names","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"jyztintan"},"content":"**Alternative 1 (current choice): Allow partial matches of names. For example, filter n/Jo will match \"John\", \"Joanna\", etc.**","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"jyztintan"},"content":"Pros: More flexible search.","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"jyztintan"},"content":"Cons: May return too many results for very short keyphrases.","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"jyztintan"},"content":"**Alternative 2: Require exact matches.**","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"jyztintan"},"content":"Pros: Precise filtering.","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"jyztintan"},"content":"Cons: Less flexible; users must remember exact names.","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"4llysa"},"content":"``","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"4llysa"},"content":"### Sort by Birthday feature","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"jyztintan"},"content":"####  Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"4llysa"},"content":"The \"Sort by Birthday\" feature enables users to sort persons based on their birthday associated with them, if any. The core components for this feature are:","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"4llysa"},"content":"- SortCommand: A command that, when executed, updates the sorted person list based on the predicate.","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"jyztintan"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"jyztintan"},"content":"1. User launches the application, and the list of persons is loaded.","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"4llysa"},"content":"2. User executes `sort`, aiming to sort persons by birthday","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"4llysa"},"content":"3. LogicManager parses the command into a SortCommand.","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"4llysa"},"content":"4. The SortCommand is executed, sorting the list based on the predicate.","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"4llysa"},"content":"5. The UI sorts the persons by birthday, with the next upcoming birthday first, and all persons without birthdays will not show up. ","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"jyztintan"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"jyztintan"},"content":"Aspect: Matching of remarks","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"4llysa"},"content":"__Alternative 1 (current choice): Support sort by other days besides Today.__","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"jyztintan"},"content":"Pros: Allows for more flexible searches.","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"4llysa"},"content":"Cons: May be difficult to understand","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"appleraincoat"},"content":"### Help feature","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"appleraincoat"},"content":"####  Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"appleraincoat"},"content":"The Help feature provides help to the user by giving details on how all commands are used in a new window. ","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"appleraincoat"},"content":"The core components for this feature are:","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"appleraincoat"},"content":"- HelpCommand: A command that, when executed, either shows a new window summarising help for all commands, or","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"appleraincoat"},"content":"prints the help message in the Main Window for the requested command, depending on user input.","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"appleraincoat"},"content":"- HelpCommandParser: Processes the user input to instantiate the HelpCommand object appropriately to perform the","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"appleraincoat"},"content":"correct action (the type of help to give, in this case help for all commands).","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"appleraincoat"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"appleraincoat"},"content":"1. User launches the application.","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"appleraincoat"},"content":"2. User executes `help`, wanting to get the help for all commands.","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"appleraincoat"},"content":"3. LogicManager instantiates a RealodexParser, which parses the command into a HelpCommand.","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"appleraincoat"},"content":"4. The HelpCommand is executed, showing a new window with help for all the features in Realodex.","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"appleraincoat"},"content":"5. The GUI reflects that the help window is currently open.","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"appleraincoat"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"appleraincoat"},"content":"Aspect: Information to include in the Help Window","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"appleraincoat"},"content":"__Alternative 1 (current choice): Includes summary of ways to use all commands.__","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"appleraincoat"},"content":"Pros: User does not need to leave the app to get the appropriate help, and can visit the UG if he/she needs more information.","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"appleraincoat"},"content":"Cons: May be lengthy and hard to find when the set of commands added becomes larger in the future.","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":252,"author":{"gitId":"appleraincoat"},"content":"__Alternative 2: Only include link to User Guide in the help window.__","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"appleraincoat"},"content":"Pros: Help window does not have too much information.","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":256,"author":{"gitId":"appleraincoat"},"content":"Cons: User will need to leave the application and look at a website everytime they require help which can be inconvenient.","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":258,"author":{"gitId":"appleraincoat"},"content":"### Help by command feature","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"appleraincoat"},"content":"####  Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"appleraincoat"},"content":"The Help by command feature provides help to the user for an individual command specified by the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"appleraincoat"},"content":"The core components for this feature are:","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"appleraincoat"},"content":"- HelpCommand: A command that, when executed, either shows a new window summarising help for all commands, or","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"appleraincoat"},"content":"  prints the help message in the Main Window for the requested command, depending on user input.","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"appleraincoat"},"content":"- HelpCommandParser: Processes the user input to instantiate the HelpCommand object appropriately to perform the","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"appleraincoat"},"content":"  correct action (the type of help to give, in this case for individual commands).","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"appleraincoat"},"content":"#### Example Usage Scenario ","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"appleraincoat"},"content":"1. User launches the application.","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"appleraincoat"},"content":"2. User executes `COMMAND help`, wanting to get the help for only specified `COMMAND`.","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"appleraincoat"},"content":"3. LogicManager instantiates a RealodexPraser, which parses the command into a HelpCommand with appropriate parameters.","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"appleraincoat"},"content":"4. The HelpCommand is executed, printing the help message for the specified `COMMAND` in the GUI.","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"appleraincoat"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"appleraincoat"},"content":"Aspect: Method to request for help","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"appleraincoat"},"content":"__Alternative 1 (current choice): Format is `COMMAND help`.__","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"appleraincoat"},"content":"Pros: Intuitive syntax for the user, and is consistent with other CLI-based applications.","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"appleraincoat"},"content":"Cons: Harder to implement and maintain as a Developer as awareness of how other commands are currently being parsed is needed to preserve functionality.","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"appleraincoat"},"content":"__Alternative 2: Format is `help COMMAND`.__","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"appleraincoat"},"content":"Pros: Easy to implement as all functionality can be contained within help-related classes only.","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"appleraincoat"},"content":"Cons: Syntax may not be as intuitive.","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"wapisai"},"content":"* A real estate agent","lastModifiedDate":"2024-02-28"},{"lineNumber":315,"author":{"gitId":"wapisai"},"content":"* has a need to manage a significant number of contacts of their clients","lastModifiedDate":"2024-02-28"},{"lineNumber":316,"author":{"gitId":"wapisai"},"content":"* has to note down many details about each client","lastModifiedDate":"2024-02-28"},{"lineNumber":317,"author":{"gitId":"wapisai"},"content":"* has to frequently add, delete, and search for clients","lastModifiedDate":"2024-02-28"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"jyztintan"},"content":"* is a real estate agent that wants to store relevant information about clients","lastModifiedDate":"2024-02-28"},{"lineNumber":322,"author":{"gitId":"jyztintan"},"content":"* able to store additional notes about contacts","lastModifiedDate":"2024-02-28"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"jyztintan"},"content":"**Value proposition**:","lastModifiedDate":"2024-02-28"},{"lineNumber":325,"author":{"gitId":"jyztintan"},"content":"* manage contacts faster than a typical mouse/GUI driven applications.","lastModifiedDate":"2024-02-28"},{"lineNumber":326,"author":{"gitId":"jyztintan"},"content":"* storing of information tailored to real-estate agents","lastModifiedDate":"2024-02-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"| Priority | As a …​                    | I want to …​                                             | So that I can…​                                                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"jyztintan"},"content":"|----------|----------------------------|----------------------------------------------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-02-28"},{"lineNumber":335,"author":{"gitId":"jyztintan"},"content":"| `* * *`  | first-time user            | receive a simple tutorial on app usage                    | easily navigate Realodex                                                                          |","lastModifiedDate":"2024-02-28"},{"lineNumber":336,"author":{"gitId":"jyztintan"},"content":"| `* * *`  | tech-savvy user            | use a command-line interface                              | navigate the app more efficiently due to my fast typing speed                                    |","lastModifiedDate":"2024-02-28"},{"lineNumber":337,"author":{"gitId":"jyztintan"},"content":"| `* * *`  | fast typer                 | quickly input various commands in the text box           | perform actions like adding new clients, editing profiles, finding clients, without using GUI    |","lastModifiedDate":"2024-02-28"},{"lineNumber":338,"author":{"gitId":"jyztintan"},"content":"| `* * *`  | real-estate agent user     | easily log personal notes after client interactions       | reference these in future conversations for more personalized communication                     |","lastModifiedDate":"2024-02-28"},{"lineNumber":339,"author":{"gitId":"jyztintan"},"content":"| `* * *`  | user with inactive clients | delete inactive clients permanently                      | remove them from my database and free up space                                                   |","lastModifiedDate":"2024-02-28"},{"lineNumber":340,"author":{"gitId":"jyztintan"},"content":"| `* *`    | real estate agent user     | search for clients interested in specific property listings | quickly match selling and buying clients                                                         |","lastModifiedDate":"2024-02-28"},{"lineNumber":341,"author":{"gitId":"jyztintan"},"content":"| `* *`    | real estate agent user     | record and access clients\u0027 preferred house types          | filter and match clients with relevant property listings                                         |","lastModifiedDate":"2024-02-28"},{"lineNumber":342,"author":{"gitId":"jyztintan"},"content":"| `* *`    | real estate agent user     | analyze trends in housing preferences                     | understand market demands and tailor my services                                                 |","lastModifiedDate":"2024-02-28"},{"lineNumber":343,"author":{"gitId":"jyztintan"},"content":"| `* *`    | efficient user             | filter clients by tag                                    | organize and access client information more efficiently                                           |","lastModifiedDate":"2024-02-28"},{"lineNumber":344,"author":{"gitId":"jyztintan"},"content":"| `* *`    | efficient user             | filter clients by categories                             | better categorize and manage client information based on personal attributes                     |","lastModifiedDate":"2024-02-28"},{"lineNumber":345,"author":{"gitId":"jyztintan"},"content":"| `* *`    | first-time user            | be guided through setting up my user profile              | save my details for future use                                                                   |","lastModifiedDate":"2024-02-28"},{"lineNumber":346,"author":{"gitId":"jyztintan"},"content":"| `* *`    | first-time user            | learn how to create and edit client profiles              | manage client information efficiently                                                            |","lastModifiedDate":"2024-02-28"},{"lineNumber":347,"author":{"gitId":"jyztintan"},"content":"| `* *`    | first-time user            | understand how to navigate the app and use CLI commands   | effectively use Realodex\u0027s features                                                              |","lastModifiedDate":"2024-02-28"},{"lineNumber":348,"author":{"gitId":"jyztintan"},"content":"| `* *`    | forgetful user             | get instructions on how to set up profiles and navigate  | refresh my memory on how to use Realodex when needed                                             |","lastModifiedDate":"2024-02-28"},{"lineNumber":349,"author":{"gitId":"jyztintan"},"content":"| `* *`    | user with inactive clients | archive inactive clients                                 | hide them from my active list while keeping their information for future reference               |","lastModifiedDate":"2024-02-28"},{"lineNumber":350,"author":{"gitId":"jyztintan"},"content":"| `* `     | real estate agent user     | be notified of upcoming client birthdays                  | send personalized greetings and strengthen my relationships                                      |","lastModifiedDate":"2024-02-28"},{"lineNumber":351,"author":{"gitId":"jyztintan"},"content":"| `*`      | real estate agent user     | be notified of upcoming holidays                          | prepare gifts for my clients and enhance our relationship                                        |","lastModifiedDate":"2024-02-28"},{"lineNumber":352,"author":{"gitId":"jyztintan"},"content":"| `*`      | real estate agent user     | be reminded of significant client milestones              | acknowledge these events and further personalize our relationship                                |","lastModifiedDate":"2024-02-28"},{"lineNumber":353,"author":{"gitId":"jyztintan"},"content":"| `*`      | tech-savvy user            | use tab to autofill parts of my command                  | speed up my use of the command line                                                              |","lastModifiedDate":"2024-02-28"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"appleraincoat"},"content":"(For all use cases below, the **System** is Realodex and the **Actor** is the user, unless specified otherwise)","lastModifiedDate":"2024-03-29"},{"lineNumber":359,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":360,"author":{"gitId":"UdhayaShan1"},"content":"**Use case: Creating a user profile**","lastModifiedDate":"2024-02-28"},{"lineNumber":361,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":362,"author":{"gitId":"UdhayaShan1"},"content":"**Actor: User**","lastModifiedDate":"2024-02-28"},{"lineNumber":363,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":364,"author":{"gitId":"UdhayaShan1"},"content":"**MSS**","lastModifiedDate":"2024-02-28"},{"lineNumber":365,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":366,"author":{"gitId":"UdhayaShan1"},"content":"1. User Executes \"Add client....\" Command:","lastModifiedDate":"2024-03-01"},{"lineNumber":367,"author":{"gitId":"UdhayaShan1"},"content":"2. System adds use profile to local storage and replies to user with success message.","lastModifiedDate":"2024-03-01"},{"lineNumber":368,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":369,"author":{"gitId":"UdhayaShan1"},"content":"    Use case ends.","lastModifiedDate":"2024-02-28"},{"lineNumber":370,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":371,"author":{"gitId":"UdhayaShan1"},"content":"**Extensions**","lastModifiedDate":"2024-02-28"},{"lineNumber":372,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":373,"author":{"gitId":"UdhayaShan1"},"content":"* 1a. Name exceeds the length constraints.","lastModifiedDate":"2024-03-01"},{"lineNumber":374,"author":{"gitId":"UdhayaShan1"},"content":"  * 1a1. Realodex throws an error and requests shorter name representation.","lastModifiedDate":"2024-03-01"},{"lineNumber":375,"author":{"gitId":"UdhayaShan1"},"content":"  * 1a2. User enters new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":376,"author":{"gitId":"4llysa"},"content":"  * Use case resumes from step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":377,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":378,"author":{"gitId":"UdhayaShan1"},"content":"* 1b. Name Length is not fully English.","lastModifiedDate":"2024-03-01"},{"lineNumber":379,"author":{"gitId":"UdhayaShan1"},"content":"    * 1b1. Realodex throws an error and requests for only English input.","lastModifiedDate":"2024-03-01"},{"lineNumber":380,"author":{"gitId":"UdhayaShan1"},"content":"    * 1b2. User enters new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":381,"author":{"gitId":"4llysa"},"content":"      * Use case resumes from step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":382,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":383,"author":{"gitId":"UdhayaShan1"},"content":"* 1c. Name contains erraneous whitespace.","lastModifiedDate":"2024-03-01"},{"lineNumber":384,"author":{"gitId":"UdhayaShan1"},"content":"    * 1c1. Realodex throws a warning and fixes this for user.","lastModifiedDate":"2024-03-01"},{"lineNumber":385,"author":{"gitId":"4llysa"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":386,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":387,"author":{"gitId":"UdhayaShan1"},"content":"* 1d. Name is not capitalized.","lastModifiedDate":"2024-03-01"},{"lineNumber":388,"author":{"gitId":"UdhayaShan1"},"content":"    * 1d1. Realodex throws a warning and fixes this for user.","lastModifiedDate":"2024-03-01"},{"lineNumber":389,"author":{"gitId":"4llysa"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":390,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":391,"author":{"gitId":"UdhayaShan1"},"content":"* 1e. Name is not in expected format.","lastModifiedDate":"2024-03-01"},{"lineNumber":392,"author":{"gitId":"UdhayaShan1"},"content":"    * 1e1. Realodex throws an error and highlights the format to user.","lastModifiedDate":"2024-03-01"},{"lineNumber":393,"author":{"gitId":"UdhayaShan1"},"content":"    * 1e2. User enters new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":394,"author":{"gitId":"4llysa"},"content":"    * Use case resumes from step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":395,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":396,"author":{"gitId":"UdhayaShan1"},"content":"* 1f. Address is not fully English","lastModifiedDate":"2024-03-01"},{"lineNumber":397,"author":{"gitId":"UdhayaShan1"},"content":"    * 1f1. Realodex throws an error and requests for only English input.","lastModifiedDate":"2024-03-01"},{"lineNumber":398,"author":{"gitId":"UdhayaShan1"},"content":"    * 1f2. User enters new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":399,"author":{"gitId":"4llysa"},"content":"    * Use case resumes from step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":400,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":401,"author":{"gitId":"UdhayaShan1"},"content":"* 1g. Address exceeds the length constraints","lastModifiedDate":"2024-03-01"},{"lineNumber":402,"author":{"gitId":"UdhayaShan1"},"content":"    * 1g1. Realodex throws an error and requests shorter address representation.","lastModifiedDate":"2024-03-01"},{"lineNumber":403,"author":{"gitId":"UdhayaShan1"},"content":"    * 1g2. User enters new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":404,"author":{"gitId":"4llysa"},"content":"    * Use case resumes from step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":405,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":406,"author":{"gitId":"UdhayaShan1"},"content":"* 1h. Address is not capitalized for each part.","lastModifiedDate":"2024-03-01"},{"lineNumber":407,"author":{"gitId":"UdhayaShan1"},"content":"    * 1h1. Realodex throws a warning and fixes this for user.","lastModifiedDate":"2024-03-01"},{"lineNumber":408,"author":{"gitId":"4llysa"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":409,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":410,"author":{"gitId":"UdhayaShan1"},"content":"* 1i. Income is not in SGD","lastModifiedDate":"2024-03-01"},{"lineNumber":411,"author":{"gitId":"UdhayaShan1"},"content":"    * 1i. Realodex throws an error and requests a SGD value.","lastModifiedDate":"2024-03-01"},{"lineNumber":412,"author":{"gitId":"UdhayaShan1"},"content":"    * 1i2. User enters new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":413,"author":{"gitId":"4llysa"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":414,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":415,"author":{"gitId":"UdhayaShan1"},"content":"* 1j. Income is negative","lastModifiedDate":"2024-03-01"},{"lineNumber":416,"author":{"gitId":"UdhayaShan1"},"content":"    * 1j1. Realodex throws an error and requests a positive income value.","lastModifiedDate":"2024-03-01"},{"lineNumber":417,"author":{"gitId":"UdhayaShan1"},"content":"    * 1j2. User enters new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":418,"author":{"gitId":"4llysa"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":419,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":420,"author":{"gitId":"UdhayaShan1"},"content":"* 1k. Additonal notes exceed length constraints.","lastModifiedDate":"2024-03-01"},{"lineNumber":421,"author":{"gitId":"UdhayaShan1"},"content":"    * 1k1. Realodex throws an error and requests a shorter input.","lastModifiedDate":"2024-03-01"},{"lineNumber":422,"author":{"gitId":"UdhayaShan1"},"content":"    * 1k2. User enters new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":423,"author":{"gitId":"4llysa"},"content":"    * Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":425,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"UdhayaShan1"},"content":"1.  User requests to delete user","lastModifiedDate":"2024-03-01"},{"lineNumber":430,"author":{"gitId":"UdhayaShan1"},"content":"2.  Realodex deletes the person with success message","lastModifiedDate":"2024-03-01"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"wapisai"},"content":"* 2a. The input name is not found","lastModifiedDate":"2024-02-28"},{"lineNumber":437,"author":{"gitId":"UdhayaShan1"},"content":" * 2a1. Realodex shows an error message \"\u003cName\u003e is not found\".","lastModifiedDate":"2024-03-01"},{"lineNumber":438,"author":{"gitId":"4llysa"},"content":" * Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":439,"author":{"gitId":"wapisai"},"content":"**Use case: List**","lastModifiedDate":"2024-02-28"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":441,"author":{"gitId":"wapisai"},"content":"**MSS**","lastModifiedDate":"2024-02-28"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":443,"author":{"gitId":"wapisai"},"content":"1.  User requests to list","lastModifiedDate":"2024-02-28"},{"lineNumber":444,"author":{"gitId":"wapisai"},"content":"2.  Realodex shows the list of all clients","lastModifiedDate":"2024-02-28"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"wapisai"},"content":"**Extensions**","lastModifiedDate":"2024-02-28"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"wapisai"},"content":"* 2a. The list is empty","lastModifiedDate":"2024-02-28"},{"lineNumber":451,"author":{"gitId":"UdhayaShan1"},"content":"  * 2a1. Realodex shows an empty list.","lastModifiedDate":"2024-03-01"},{"lineNumber":452,"author":{"gitId":"4llysa"},"content":"  * Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"jyztintan"},"content":"**Use case: Filter by Name**","lastModifiedDate":"2024-03-29"},{"lineNumber":455,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":456,"author":{"gitId":"wapisai"},"content":"**MSS**","lastModifiedDate":"2024-02-28"},{"lineNumber":457,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":458,"author":{"gitId":"jyztintan"},"content":"1. User requests to filter clients by providing a name substring. ","lastModifiedDate":"2024-03-29"},{"lineNumber":459,"author":{"gitId":"jyztintan"},"content":"2. Realodex filters and displays a list of all clients whose names include the input substring.","lastModifiedDate":"2024-03-29"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":461,"author":{"gitId":"wapisai"},"content":"    Use case ends.","lastModifiedDate":"2024-02-28"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":463,"author":{"gitId":"wapisai"},"content":"**Extensions**","lastModifiedDate":"2024-02-28"},{"lineNumber":464,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":465,"author":{"gitId":"jyztintan"},"content":"* 1a. The input substring is empty.","lastModifiedDate":"2024-03-29"},{"lineNumber":466,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":467,"author":{"gitId":"jyztintan"},"content":"    * 1a1. Realodex shows an error message indicating that the filter criteria cannot be empty.","lastModifiedDate":"2024-03-29"},{"lineNumber":468,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":469,"author":{"gitId":"jyztintan"},"content":"        Use case ends.","lastModifiedDate":"2024-03-29"},{"lineNumber":470,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":471,"author":{"gitId":"jyztintan"},"content":"* 1b. No clients\u0027 names match the input substring.","lastModifiedDate":"2024-03-29"},{"lineNumber":472,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":473,"author":{"gitId":"jyztintan"},"content":"    * 1b1. Realodex displays an empty list and shows a message indicating that no matches were found.","lastModifiedDate":"2024-03-29"},{"lineNumber":474,"author":{"gitId":"jyztintan"},"content":"        ","lastModifiedDate":"2024-03-29"},{"lineNumber":475,"author":{"gitId":"jyztintan"},"content":"      Use case ends.","lastModifiedDate":"2024-03-29"},{"lineNumber":476,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":477,"author":{"gitId":"jyztintan"},"content":"**Use case: Filter by Remarks**","lastModifiedDate":"2024-03-29"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"jyztintan"},"content":"**MSS**","lastModifiedDate":"2024-03-29"},{"lineNumber":480,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":481,"author":{"gitId":"jyztintan"},"content":"1. User requests to filter clients by providing a remark substring. ","lastModifiedDate":"2024-03-29"},{"lineNumber":482,"author":{"gitId":"jyztintan"},"content":"2. Realodex filters and displays a list of all clients whose remarks include the input substring.","lastModifiedDate":"2024-03-29"},{"lineNumber":483,"author":{"gitId":"jyztintan"},"content":"   Use case ends.","lastModifiedDate":"2024-03-29"},{"lineNumber":484,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":485,"author":{"gitId":"jyztintan"},"content":"**Extensions**","lastModifiedDate":"2024-03-29"},{"lineNumber":486,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":487,"author":{"gitId":"jyztintan"},"content":"* 1a. The input substring is empty.","lastModifiedDate":"2024-03-29"},{"lineNumber":488,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":489,"author":{"gitId":"jyztintan"},"content":"    * 1a1. Realodex shows an error message indicating that the filter criteria cannot be empty.","lastModifiedDate":"2024-03-29"},{"lineNumber":490,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":491,"author":{"gitId":"jyztintan"},"content":"      Use case ends.","lastModifiedDate":"2024-03-29"},{"lineNumber":492,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":493,"author":{"gitId":"jyztintan"},"content":"* 1b. No clients\u0027 remarks match the input substring.","lastModifiedDate":"2024-03-29"},{"lineNumber":494,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":495,"author":{"gitId":"jyztintan"},"content":"    * 1b1. Realodex displays an empty list and shows a message indicating that no matches were found.","lastModifiedDate":"2024-03-29"},{"lineNumber":496,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":497,"author":{"gitId":"jyztintan"},"content":"      Use case ends.","lastModifiedDate":"2024-03-29"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"appleraincoat"},"content":"**Use case: Getting help**","lastModifiedDate":"2024-03-29"},{"lineNumber":500,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":501,"author":{"gitId":"appleraincoat"},"content":"**MSS**","lastModifiedDate":"2024-03-29"},{"lineNumber":502,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":503,"author":{"gitId":"appleraincoat"},"content":"1. User requests for help.","lastModifiedDate":"2024-03-29"},{"lineNumber":504,"author":{"gitId":"appleraincoat"},"content":"2. Realodex displays a new window showing a summary of how all features are used with examples. ","lastModifiedDate":"2024-03-29"},{"lineNumber":505,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":506,"author":{"gitId":"appleraincoat"},"content":"   Use case ends.","lastModifiedDate":"2024-03-29"},{"lineNumber":507,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":508,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":509,"author":{"gitId":"appleraincoat"},"content":"**MSS**","lastModifiedDate":"2024-03-29"},{"lineNumber":510,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":511,"author":{"gitId":"appleraincoat"},"content":"1. User requests for help for a specific command.","lastModifiedDate":"2024-03-29"},{"lineNumber":512,"author":{"gitId":"appleraincoat"},"content":"2. A string summarising how that individual command is used with examples is displayed on the main window.","lastModifiedDate":"2024-03-29"},{"lineNumber":513,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":514,"author":{"gitId":"appleraincoat"},"content":"**Extensions**","lastModifiedDate":"2024-03-29"},{"lineNumber":515,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":516,"author":{"gitId":"appleraincoat"},"content":"* 1a. The requested command does not exist.","lastModifiedDate":"2024-03-29"},{"lineNumber":517,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":518,"author":{"gitId":"appleraincoat"},"content":"    * 1a1. Realodex shows an error message command does not exist.","lastModifiedDate":"2024-03-29"},{"lineNumber":519,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":520,"author":{"gitId":"appleraincoat"},"content":"      Use case ends.","lastModifiedDate":"2024-03-29"},{"lineNumber":521,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":522,"author":{"gitId":"appleraincoat"},"content":"  ","lastModifiedDate":"2024-03-29"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"4llysa"},"content":"3.  A real estate agent with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-02-28"},{"lineNumber":528,"author":{"gitId":"4llysa"},"content":"4.  Should be able to have up to 500 client profiles.","lastModifiedDate":"2024-03-07"},{"lineNumber":529,"author":{"gitId":"4llysa"},"content":"5.  The response to any command should become visible within 5 seconds.","lastModifiedDate":"2024-02-28"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":534,"author":{"gitId":"4llysa"},"content":"* **Client Profile**: Details of customer of the Real Esate Agent looking to buy / sell / rent a property","lastModifiedDate":"2024-02-28"},{"lineNumber":535,"author":{"gitId":"4llysa"},"content":"* **Command Line Interface (CLI)**: A text-based interface used to interact with the software by entering commands into a terminal or console window, typically preferred by users who prefer efficiency and automation.","lastModifiedDate":"2024-03-07"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":545,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":546,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"4llysa":29,"jyztintan":87,"-":320,"UdhayaShan1":63,"appleraincoat":74,"wapisai":17}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"   1. Run the `seedu.realodex.Main` and try a few commands.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"appleraincoat"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Realodex’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":59,"UdhayaShan1":1,"appleraincoat":1}},{"path":"docs/TeamWorkflow.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"# Development Workflow and Conventions","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"## Introduction","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"This document outlines the development workflow and naming conventions adopted by our team to ensure a consistent and efficient approach to project management. By adhering to these guidelines, we aim to maintain high-quality code, streamline our review process, and facilitate easier navigation and understanding of our codebase.","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"## Pull Request (PR) Workflow","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"Our PR workflow is designed to ensure that changes are thoroughly reviewed and meet our team\u0027s quality standards before being merged into the main codebase.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"### Major Changes","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"Any significant modifications, such as new features, substantial refactoring, or critical bug fixes, require a review and approval from all four team members. This comprehensive review process ensures that major changes are well-understood and agreed upon by the entire team.","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"### Minor Changes","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"For minor updates, such as spelling corrections, grammar adjustments, or minor phrasing improvements, approval from just one team member is sufficient. This expedited process allows us to quickly incorporate minor but necessary tweaks without slowing down our overall development pace.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"## Branch Naming Conventions","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"To maintain an organized and intuitive codebase, we follow a standardized format for naming our branches. This standardization aids in identifying the purpose and scope of each branch at a glance.","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"- **Format**: `v\u003cversion\u003e-\u003cfeature if applicable\u003e-\u003cenhancement\u003e`","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"- **Example**: For version 1.2, a branch focused on the \"add\" feature with support for new fields might be named `v1.2-add-new_fields`.","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"- **Example**: For version 1.3, a branch focused on updating the Developer\u0027s Guide might be named `v1.3-update_dg`.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"By adopting a standardized branch naming format, we enhance the consistency of our branch names, simplifying the process for team members to discern the purpose of each branch and facilitating reviewers\u0027 evaluation of changes.","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"It\u0027s important to note the distinction in our branch creation approach based on the project version:","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"- For developments up to version 1.2, branches are created within individual team members\u0027 forked repositories.","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"- Starting with version 1.3 and onwards, branches are directly established in the main team repository.","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"## Consistency and Compliance","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"Ensuring consistency in our development practices, including PR management and branch naming, is crucial. It not only streamlines our workflow but also prevents potential confusion or issues during code reviews, particularly from external reviewers who may highlight inconsistencies such as varying branch naming separators.","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"## Conclusion","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"This document is intended to unify our team\u0027s development practices, ensuring alignment and shared understanding among all members. We will continually adapt our practices to ensure efficiency in our workflow.","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"jyztintan":33}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Testing guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Testing guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"   e.g. `seedu.realodex.commons.StringUtilTest`","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"   e.g. `seedu.realodex.storage.StorageManagerTest`","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"   e.g. `seedu.realodex.logic.LogicManagerTest`","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"-":38,"UdhayaShan1":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"appleraincoat"},"content":"# Realodex (RDX) User Guide","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"appleraincoat"},"content":"Realodex (or RDX for short) is a **desktop app for managing client contacts, optimized for use via a","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"appleraincoat"},"content":"Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"appleraincoat"},"content":"If you can type fast, RDX can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"appleraincoat"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"appleraincoat"},"content":"1. Download the latest `realodex.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"appleraincoat"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Realodex.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"appleraincoat"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar realodex.jar`","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"appleraincoat"},"content":"command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"appleraincoat"},"content":"1. Some example commands you can try:","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"appleraincoat"},"content":"   * `add n/John Doe p/98765432 i/20000 e/johnd@example.com a/311, Clementi Ave 2, #02-25 f/4 t/buyer r/Owes money.`","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"appleraincoat"},"content":"   Adds a contact named `John Doe` to Realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"appleraincoat"},"content":"   * `delete John Doe` : Deletes the client with name `John Doe` from Realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"appleraincoat"},"content":"* Parameters enclosed in `[]` are optional to input.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"appleraincoat"},"content":"### Adding a client: `add`","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"appleraincoat"},"content":"Adds a client to Realodex. ","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"appleraincoat"},"content":"Format: `add n/NAME p/PHONE i/INCOME e/EMAIL a/ADDRESS f/FAMILY t/TAG [r/REMARK]`","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"appleraincoat"},"content":"- Note that `REMARK` is optional, enclosed in `[]`.","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"appleraincoat"},"content":"- You may input the parameters in any order (e.g. if","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"appleraincoat"},"content":"the command specifies `n/NAME a/ADDRESS`, `a/ADDRESS n/NAME` is also acceptable). ","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"appleraincoat"},"content":"- Note that the tag is to indicate if a client is a","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"appleraincoat"},"content":"Buyer, Seller or both, so tags only accept \"buyer\" or \"seller\" as the input (case-insensitive).","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"appleraincoat"},"content":"* `add n/John Doe p/98765432 i/20000 e/johnd@example.com a/311, Clementi Ave 2, #02-25 f/4 t/Buyer r/Owes $1000.`","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"appleraincoat"},"content":"* `add n/Betsy Crowe a/Newgate Prison i/$0 f/1 p/94859694 e/betsyc@rocketmail.com t/Seller t/Buyer`","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"appleraincoat"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"appleraincoat"},"content":"Deletes the specified client from Realodex. There are 2 ways to do so: ","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"appleraincoat"},"content":"#### Deleting by name","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"appleraincoat"},"content":"Format: `delete n/NAME`","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"appleraincoat"},"content":"* Deletes the client of the specified `NAME` in Realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"appleraincoat"},"content":"* If name is **not found**, error message will be shown `\"NAME\" is not found`.","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"appleraincoat"},"content":"Example:","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"appleraincoat"},"content":"* `delete n/Udhaya Shanmugam` deletes the client in Realodex with the name \"Udhaya Shanmugam\".","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"appleraincoat"},"content":"#### Deleting by index","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"appleraincoat"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"appleraincoat"},"content":"* Deletes the client of the specified `INDEX` in Realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"appleraincoat"},"content":"* If the index number is **invalid**, error message will be shown `The client index provided is invalid`.","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"appleraincoat"},"content":"Example:","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"appleraincoat"},"content":"* `delete 4` deletes the 4th client listed in Realodex, provided he/she exists.","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"appleraincoat"},"content":"### Editing clients : `edit`","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"appleraincoat"},"content":"Edits specified details of the client.","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"appleraincoat"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [i/INCOME] [e/EMAIL] [a/ADDRESS] [f/FAMILY] [t/TAG] [r/REMARK]`","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"appleraincoat"},"content":"- If `INDEX` is `3`, the 3rd client\u0027s information will be edited.","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"appleraincoat"},"content":"- It is optional to edit any field (i.e, you can choose to edit any combination of fields so long there is at least 1).","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"appleraincoat"},"content":"- The current information will be overwritten with the input provided.","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"appleraincoat"},"content":"- `edit 1 p/999` will overwrite the 1st client\u0027s phone number to `999`.","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"appleraincoat"},"content":"- `edit 2 n/Kylie  i/3333 f/5` will overwrite the 2nd client\u0027s name to `Kylie`, income to `3333` and family size to `5`.","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"jyztintan"},"content":"### Filtering clients : `filter`","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"jyztintan"},"content":"Filters the list of client with an input keyphrase.","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"jyztintan"},"content":"Format: `filter KEYPHRASE`","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"jyztintan"},"content":"- The search is case-insensitive. e.g `james` will match `James`","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"jyztintan"},"content":"- Partial words will still be matched e.g. `Udh` will match `Udhaya`","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"jyztintan"},"content":"- All persons\u0027 names containing the keyword will be returned e.g. `Al` will return `Alicia`, `Allysa`","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"appleraincoat"},"content":"Example:","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"appleraincoat"},"content":"- `filter Al` will list out persons whose name has `\"Al\"` inside, such as `\"Alicia\"`, `\"Allysa\"` and `\"Jamal\"`","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"appleraincoat"},"content":"### Listing clients : `list`","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"appleraincoat"},"content":"Lists all clients in Realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"appleraincoat"},"content":"Format: `list`","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"appleraincoat"},"content":"### Clearing Realodex : `clearRealodex`","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"appleraincoat"},"content":"Clears all clients in Realodex.","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"appleraincoat"},"content":"Format: `clearRealodex`","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"appleraincoat"},"content":"### Help : `help`","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"appleraincoat"},"content":"Generates a pop-up window which is a summarised version of the User Guide.","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"appleraincoat"},"content":"Format: `help`","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"appleraincoat"},"content":"Realodex data is saved in the hard disk automatically after any command that modifies it. There is no need to save manually.","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":156,"author":{"gitId":"appleraincoat"},"content":"Realodex data is saved automatically as a JSON file `[JAR file location]/data/realodex.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"appleraincoat"},"content":"If your changes to the data file makes its format invalid, Realodex will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"appleraincoat"},"content":"Furthermore, certain edits can cause the Realodex to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"appleraincoat"},"content":"### Filtering clients by income and more `[coming in v1.3]`","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"appleraincoat"},"content":"**Add**    | `add n/NAME p/PHONE i/INCOME e/EMAIL a/ADDRESS f/FAMILY t/TAG [r/REMARK]` \u003cbr\u003e e.g. `add n/John Doe p/98765432 i/20000 e/johnd@example.com a/311, Clementi Ave 2, #02-25 f/4 r/Buyer t/Owes $1000.`","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"appleraincoat"},"content":"**Delete (by name)** | `delete n/NAME`\u003cbr\u003e e.g. `delete n/John`","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"appleraincoat"},"content":"**Delete (by index)** | `delete INDEX`\u003cbr\u003e e.g. `delete 3`","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"appleraincoat"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE] [i/INCOME] [e/EMAIL] [a/ADDRESS] [f/FAMILY] [t/TAG] [r/REMARK]` \u003cbr\u003e e.g. `edit 2 n/Denzel i/100000`","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"appleraincoat"},"content":"**Filter** | `filter STRING`\u003cbr\u003e e.g. `filter David`","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"appleraincoat"},"content":"**Clear**| `clearRealodex`","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"appleraincoat"},"content":"**Help** | `help`","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"appleraincoat"},"content":"**Exit**   | `exit`","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"jyztintan":6,"-":116,"appleraincoat":74,"wapisai":1}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"4llysa"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eRealodex\u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"4llysa":1,"-":66}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveRealodex(realodex)","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":38,"UdhayaShan1":1}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"appleraincoat"},"content":"Realodex *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"appleraincoat"},"content":"UniquePersonList -right-\u003e \"*\" Person","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"appleraincoat"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"appleraincoat"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"appleraincoat"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"appleraincoat"},"content":"Person *--\u003e \"1\" Income","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"appleraincoat"},"content":"Person *--\u003e \"1\" Family","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"Person *--\u003e \"1..2\" Tag","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"appleraincoat"},"content":"Person *--\u003e \"  0..1\" Remark","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":9,"appleraincoat":10}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"appleraincoat"},"content":"if () then ([command commits Realodex])","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"appleraincoat"},"content":"    :Save Realodex to","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"    realodexStateList;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":15,"appleraincoat":3}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"participant \":RealodexParser\" as RealodexParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"LogicManager -\u003e RealodexParser : parseCommand(\"delete 1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"activate RealodexParser","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"RealodexParser -\u003e DeleteCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"DeleteCommandParser --\u003e RealodexParser","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"RealodexParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"DeleteCommandParser --\u003e RealodexParser : d","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"DeleteCommandParser -[hidden]-\u003e RealodexParser","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"RealodexParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"deactivate RealodexParser","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":60,"UdhayaShan1":10}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyRealodex\" as ReadOnlyRealodex","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"Class Realodex","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"Class Income","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"Class Family","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"Class Remark","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"Realodex .up.|\u003e ReadOnlyRealodex","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"Model .left.\u003e ReadOnlyRealodex","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"ModelManager -left-\u003e \"1\" Realodex","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"Realodex *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"Person *--\u003e \"            1\" Income","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"Person *--\u003e \"1\" Family","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"Person *--\u003e \"   1..2\" Tag","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"Person *--\u003e \"   0..1\" Remark","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"UdhayaShan1":16,"appleraincoat":1}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"Class RealodexParser","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"HiddenOutside ..\u003e RealodexParser","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"RealodexParser .down.\u003e XYZCommandParser: \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"RealodexParser ..\u003e Command : \u003c\u003cuse\u003e\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"UdhayaShan1":4}},{"path":"docs/diagrams/filter/FilterClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"hide circle","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"Class \"{abstract}\\nCommand\" as Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"  +execute(Model): CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"Class FilterCommand {","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"  +COMMAND_WORD: String","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"  +MESSAGE_USAGE: String","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"  +MESSAGE_FILTER_HELP: String","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"  +execute(Model): CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"Class CommandException","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"FilterCommand -up-|\u003e Command","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"Command ..\u003e CommandException: throws \u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"FilterCommand .right.\u003e CommandException: throws \u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"jyztintan":19}},{"path":"docs/diagrams/filter/FilterParserClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"hide circle","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"Interface Parser {","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"  +parse(args: String)","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"Class FilterCommandParser {","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"  +parse(args: String): FilterCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"Class ParseException","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"FilterCommandParser -up-|\u003e Parser","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"FilterCommandParser .right.\u003e ParseException: throws \u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"note right of FilterCommandParser: Implements Parser\u003cFilterCommand\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"jyztintan":17}},{"path":"docs/team/4llysa.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"4llysa"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"4llysa"},"content":"  layout: default.md","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"4llysa"},"content":"  title: \"Allysa Tan\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"4llysa"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"### Project: Realodex","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"4llysa"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"4llysa"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"4llysa"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"4llysa"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"4llysa"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"4llysa"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"4llysa"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"4llysa"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"4llysa"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"4llysa"},"content":"* **Project management**:","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"4llysa"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"4llysa"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"4llysa"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"4llysa"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"4llysa"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"4llysa"},"content":"    * User Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"4llysa"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"4llysa"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"4llysa"},"content":"    * Developer Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"4llysa"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"4llysa"},"content":"* **Community**:","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"4llysa"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"4llysa"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"4llysa"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"4llysa"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"4llysa"},"content":"* **Tools**:","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"4llysa"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"4llysa"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"4llysa"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"4llysa":45,"UdhayaShan1":1}},{"path":"docs/team/appleraincoat.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"appleraincoat"},"content":"  title: \"appleraincoat\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"### Project: Realodex","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"appleraincoat"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"appleraincoat"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"appleraincoat"},"content":"  * by using the redo command.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"appleraincoat"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"  * app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"appleraincoat"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"appleraincoat"},"content":"  * analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"appleraincoat"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"appleraincoat"},"content":"  * the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":39,"UdhayaShan1":1,"appleraincoat":11}},{"path":"docs/team/jyztintan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"\u003ch1 align\u003d\"center\"\u003eHello there 👋, I\u0027m Justin \u003c/h1\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"\u003ch2 align\u003d\"center\"\u003eYear 2 Computer Science Undergraduate || Teaching Assistant \u003c/h2\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"\u003ch3 align\u003d\"center\"\u003eNational University of Singapore, School of Computing \u003c/h3\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"- 🧠 I’m currently learning 🤖 Machine Learning and AI, 📊 Algorithmic Design and Analysis and 💻 Software Engineering","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"- 📫 Reach out to me at **justintanwk2001@gmail.com**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"- 💡 Teaching Assistant for ♾ Discrete Mathematics and 🐍 Python Programming Methodology","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"\u003ch3 align\u003d\"left\"\u003eConnect with me:\u003c/h3\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"\u003cp align\u003d\"left\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.linkedin.com/in/tan-wee-kian-justin/\" target\u003d\"blank\"\u003e\u003cimg align\u003d\"center\"","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/linked-in-alt.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"adam pithewan\" height\u003d\"30\" width\u003d\"40\" /\u003e\u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"  \u003c!--","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://fb.com/adam pithen wala\" target\u003d\"blank\"\u003e\u003cimg align\u003d\"center\"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/facebook.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"adam pithen wala\" height\u003d\"30\" width\u003d\"40\" /\u003e\u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://instagram.com/_._.adam._\" target\u003d\"blank\"\u003e\u003cimg align\u003d\"center\"","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/instagram.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"_._.adam._\" height\u003d\"30\" width\u003d\"40\" /\u003e\u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.hackerrank.com/adampithewan\" target\u003d\"blank\"\u003e\u003cimg align\u003d\"center\"","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/hackerrank.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"adampithewan\" height\u003d\"30\" width\u003d\"40\" /\u003e\u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":" \u003ca href\u003d\"https://twitter.com/adam_pithenwala\" target\u003d\"blank\"\u003e\u003cimg align\u003d\"center\"","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/icons/Social/twitter.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"adampithewan\" height\u003d\"30\" width\u003d\"40\" /\u003e\u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"  --\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"\u003c/p\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"\u003ch3 align\u003d\"left\"\u003eLanguages and Tools:\u003c/h3\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"\u003cp align\u003d\"left\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.python.org\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg\" alt\u003d\"python\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://pandas.pydata.org/\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/2ae2a900d2f041da66e950e4d48052658d850630/icons/pandas/pandas-original.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"pandas\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.java.com\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/java/java-original.svg\" alt\u003d\"java\" width\u003d\"40\"","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"      height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.cprogramming.com/\" target\u003d\"_blank\"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"    rel\u003d\"noreferrer\"\u003e \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/c/c-original.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"c\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.w3schools.com/cpp/\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"    \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/cplusplus/cplusplus-original.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"cplusplus\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://flutter.dev\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"    \u003cimg src\u003d\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/flutter/flutter-original.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"flutter\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://dart.dev\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"    \u003cimg src\u003d\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/dart/dart-original.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"dart\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"   \u003ca href\u003d\"https://firebase.google.com/\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"    \u003cimg src\u003d\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/firebase/firebase-plain.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"firebase\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.photoshop.com/en\" target\u003d\"_blank\"","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"    rel\u003d\"noreferrer\"\u003e \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/photoshop/photoshop-line.svg\" alt\u003d\"photoshop\"","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"      width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"  \u003c!--","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://developer.android.com\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/android/android-original-wordmark.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"android\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://getbootstrap.com\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"    \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/bootstrap/bootstrap-plain-wordmark.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"bootstrap\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":" \u003ca href\u003d\"https://www.w3schools.com/css/\" target\u003d\"_blank\"","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    rel\u003d\"noreferrer\"\u003e \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/css3/css3-original-wordmark.svg\" alt\u003d\"css3\"","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"      width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.w3.org/html/\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/html5/html5-original-wordmark.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"html5\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.adobe.com/in/products/illustrator.html\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://www.vectorlogo.zone/logos/adobe_illustrator/adobe_illustrator-icon.svg\" alt\u003d\"illustrator\" width\u003d\"40\"","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"      height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\" target\u003d\"_blank\"","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"    rel\u003d\"noreferrer\"\u003e \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/javascript/javascript-original.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"javascript\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://kotlinlang.org\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg src\u003d\"https://www.vectorlogo.zone/logos/kotlinlang/kotlinlang-icon.svg\" alt\u003d\"kotlin\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://www.mysql.com/\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/mysql/mysql-original-wordmark.svg\" alt\u003d\"mysql\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://nodejs.org\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/nodejs/nodejs-original-wordmark.svg\" alt\u003d\"nodejs\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://reactjs.org/\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/react/react-original-wordmark.svg\"","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"      alt\u003d\"react\" width\u003d\"40\" height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"  \u003ca href\u003d\"https://sass-lang.com\" target\u003d\"_blank\" rel\u003d\"noreferrer\"\u003e \u003cimg","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"      src\u003d\"https://raw.githubusercontent.com/devicons/devicon/master/icons/sass/sass-original.svg\" alt\u003d\"sass\" width\u003d\"40\"","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"      height\u003d\"40\" /\u003e \u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"    --\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"\u003c/p\u003e","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"jyztintan":93}},{"path":"docs/team/udhayashan1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"  layout: default.md","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"  title: \"Udhaya\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"not accurate, copied straight from johndoe.md","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"### Project: Realodex","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"* **Project management**:","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    * User Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    * Developer Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"* **Community**:","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"* **Tools**:","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"UdhayaShan1":46}},{"path":"docs/team/wapisai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"wapisai"},"content":"  title: \"Alicia\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"### Project: Realodex","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"-":44,"UdhayaShan1":1,"wapisai":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"UdhayaShan1"},"content":"Create a `RemarkCommandParser` class in the `seedu.realodex.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"UdhayaShan1"},"content":"Create a new `Remark` in `seedu.realodex.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2024-03-19"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"UdhayaShan1"},"content":"Simply add the following to [`seedu.realodex.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"UdhayaShan1"},"content":"You must delete AddressBook’s storage file located at `/data/realodex.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2024-03-19"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":363,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":395,"UdhayaShan1":9}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"The `address` field in `Person` is actually an instance of the `seedu.realodex.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"**`invalidPersonRealodex.json`:**","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":113,"UdhayaShan1":2}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.realodex.logic.Logic`.","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"A quick look at the `seedu.realodex.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":309,"UdhayaShan1":2}},{"path":"src/main/java/seedu/realodex/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.FileUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"UdhayaShan1":4,"-":69}},{"path":"src/main/java/seedu/realodex/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"UdhayaShan1":2,"-":39}},{"path":"src/main/java/seedu/realodex/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.Config;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.Version;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ConfigUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.StringUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.LogicManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.JsonRealodexStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.RealodexStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.Storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.StorageManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.UserPrefsStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.ui.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.ui.UiManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Realodex ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"        RealodexStorage realodexStorage \u003d new JsonRealodexStorage(userPrefs.getRealodexFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"        storage \u003d new StorageManager(realodexStorage, userPrefsStorage);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s realodex and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"     * The data from the sample realodex will be used instead if {@code storage}\u0027s realodex is not found,","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"     * or an empty realodex will be used instead if errors occur when reading {@code storage}\u0027s realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        logger.info(\"Using data file : \" + storage.getRealodexFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"        Optional\u003cReadOnlyRealodex\u003e realodexOptional;","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"        ReadOnlyRealodex initialData;","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"            realodexOptional \u003d storage.readRealodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"            if (!realodexOptional.isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"                logger.info(\"Creating a new data file \" + storage.getRealodexFilePath()","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"appleraincoat"},"content":"                        + \" populated with a sample Realodex.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"            initialData \u003d realodexOptional.orElseGet(SampleDataUtil::getSampleRealodex);","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"            logger.warning(\"Data file at \" + storage.getRealodexFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"appleraincoat"},"content":"                    + \" Will be starting with an empty Realodex.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"            initialData \u003d new Realodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"appleraincoat"},"content":"        logger.info(\"Starting Realodex \" + MainApp.VERSION);","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"UdhayaShan1"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Realodex ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":40,"-":144,"appleraincoat":3}},{"path":"src/main/java/seedu/realodex/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.core;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":2,"-":64}},{"path":"src/main/java/seedu/realodex/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.core;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":2,"-":80}},{"path":"src/main/java/seedu/realodex/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.core;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String LOG_FILE \u003d \"realodex.log\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"     * Creates a logger named \u0027realodex\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"        baseLogger \u003d Logger.getLogger(\"realodex\");","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":4,"-":102}},{"path":"src/main/java/seedu/realodex/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.core;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":1,"-":120}},{"path":"src/main/java/seedu/realodex/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.core.index;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"UdhayaShan1":2,"-":67}},{"path":"src/main/java/seedu/realodex/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"UdhayaShan1":1,"-":10}},{"path":"src/main/java/seedu/realodex/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":1,"-":20}},{"path":"src/main/java/seedu/realodex/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.MainApp;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"UdhayaShan1":2,"-":40}},{"path":"src/main/java/seedu/realodex/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":1,"-":34}},{"path":"src/main/java/seedu/realodex/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.Config;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"UdhayaShan1":3,"-":20}},{"path":"src/main/java/seedu/realodex/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":1,"-":82}},{"path":"src/main/java/seedu/realodex/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":3,"-":141}},{"path":"src/main/java/seedu/realodex/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":2,"-":66}},{"path":"src/main/java/seedu/realodex/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"UdhayaShan1":1,"-":52}},{"path":"src/main/java/seedu/realodex/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.CommandResult;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns the Realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     * @see seedu.realodex.model.Model#getRealodex()","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    ReadOnlyRealodex getRealodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns the user prefs\u0027 realodex file path.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    Path getRealodexFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"UdhayaShan1":12,"-":38}},{"path":"src/main/java/seedu/realodex/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.CommandResult;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.RealodexParser;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.Storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"    private final RealodexParser realodexParser;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"        realodexParser \u003d new RealodexParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        Command command \u003d realodexParser.parseCommand(commandText);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"            storage.saveRealodex(model.getRealodex());","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"    public ReadOnlyRealodex getRealodex() {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        return model.getRealodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"    public Path getRealodexFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"        return model.getRealodexFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"UdhayaShan1":20,"-":68}},{"path":"src/main/java/seedu/realodex/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.Prefix;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"wapisai"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_NAME \u003d \"The client name provided is invalid\";","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String MESSAGE_MISSING_PREFIXES \u003d \"Missing compulsory prefixes in the command! \"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"            + \"Prefixes That Are Missed Are: \";","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"    public static String getErrorMessageForMissingPrefixes(String exceptionMessageForMissingPrefixes) {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        return MESSAGE_MISSING_PREFIXES + exceptionMessageForMissingPrefixes;","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"                .append(\"; Income: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"                .append(person.getIncome())","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"                .append(\"; Family: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"                .append(person.getFamily())","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"appleraincoat"},"content":"        builder.append(\"; Remark: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"appleraincoat"},"content":"                .append(person.getRemark());","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":13,"-":47,"appleraincoat":3,"wapisai":1}},{"path":"src/main/java/seedu/realodex/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_FAMILY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":" * Adds a person to the realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the Realodex. \"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"            + PREFIX_INCOME + \"INCOME \"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"            + PREFIX_FAMILY + \"FAMILY \"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"4llysa"},"content":"            + PREFIX_TAG + \"BUYER/SELLER \"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"appleraincoat"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"            + PREFIX_INCOME + \"20000 \"","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"            + PREFIX_FAMILY + \"4 \"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"4llysa"},"content":"            + PREFIX_TAG + \"buyer \"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"appleraincoat"},"content":"            + PREFIX_TAG + \"seller \"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"appleraincoat"},"content":"            + PREFIX_REMARK + \"Has 3 cats.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This client already exists in Realodex\";","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_ADD_HELP \u003d \"Add Command: Adds a client to Realodex. You may input client\"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"            + \" details in any order. Remarks are optional to input.\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"appleraincoat"},"content":"            + \"Format: add n/NAME p/PHONE i/INCOME e/EMAIL a/ADDRESS f/FAMILY t/TAG [r/REMARK]\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"appleraincoat"},"content":"            + \"Example: add n/John Doe p/98765432 i/10000 e/johndoe@gmail.com a/Jurong Central 1 f/5 t/Buyer \"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"appleraincoat"},"content":"            + \"r/Likes Italian food.\\n\";","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"4llysa":2,"UdhayaShan1":19,"-":66,"appleraincoat":11}},{"path":"src/main/java/seedu/realodex/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" * Clears the realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"appleraincoat"},"content":"    public static final String COMMAND_WORD \u003d \"clearRealodex\";","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Realodex has been cleared!\";","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_CLEAR_HELP \u003d \"Clear Command: Clears all entries in Realodex.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"appleraincoat"},"content":"            + \"Format: clearRealodex\\n\";","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        model.setRealodex(new Realodex());","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":5,"-":16,"appleraincoat":4}},{"path":"src/main/java/seedu/realodex/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":3,"-":17}},{"path":"src/main/java/seedu/realodex/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":2,"-":80}},{"path":"src/main/java/seedu/realodex/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.delete.DeleteCommandExecutor;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":" * Deletes a person identified using it\u0027s displayed index from realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"wapisai"},"content":"            + \": Deletes the client identified by the index number or full name used in the displayed client list.\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"wapisai"},"content":"            + \"Parameters: INDEX (must be a positive integer) or \" + PREFIX_NAME + \"NAME \\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"wapisai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 or \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_DELETE_HELP \u003d \"Delete Command: Deletes a client in Realodex by \"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"appleraincoat"},"content":"            + \"either the client\u0027s full name or index number shown in the list.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"appleraincoat"},"content":"            + \"Format: delete n/FULL NAME or delete INDEX\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"appleraincoat"},"content":"            + \"Example: delete n/James Lau OR delete 4\\n\";","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"wapisai"},"content":"    public static final String MESSAGE_INDEX_AND_NAME_PROVIDED \u003d \"Please provide either an index or a name, not both.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"wapisai"},"content":"    public static final String MESSAGE_NO_FIELDS_PROVIDED \u003d \"Please provide either an index or a name.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"wapisai"},"content":"    private final Name targetName;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"wapisai"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"wapisai"},"content":"     * Creates a DeleteCommand to delete the person at the specified {@code Index}","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"wapisai"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"wapisai"},"content":"        this.targetName \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"wapisai"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"wapisai"},"content":"     * Creates a DeleteCommand to delete the person with the specified {@code Name}","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"wapisai"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"wapisai"},"content":"    public DeleteCommand(Name targetName) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"wapisai"},"content":"        this.targetName \u003d targetName;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"wapisai"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"wapisai"},"content":"        Person personToDelete;","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"wapisai"},"content":"        if (targetIndex !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"wapisai"},"content":"            personToDelete \u003d DeleteCommandExecutor.deleteByIndex(lastShownList, targetIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wapisai"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"wapisai"},"content":"            personToDelete \u003d DeleteCommandExecutor.deleteByName(lastShownList, targetName);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"wapisai"},"content":"        if (targetIndex !\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"wapisai"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"wapisai"},"content":"            return targetName.equals(otherDeleteCommand.targetName);","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":11,"-":55,"appleraincoat":6,"wapisai":27}},{"path":"src/main/java/seedu/realodex/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_FAMILY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"4llysa"},"content":"import seedu.realodex.model.person.Birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":" * Edits the details of an existing person in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"appleraincoat"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"wapisai"},"content":"            + \"[\" + PREFIX_INCOME + \"INCOME] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"wapisai"},"content":"            + \"[\" + PREFIX_FAMILY + \"FAMILY] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"wapisai"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wapisai"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_EDIT_HELP \u003d \"Edit Command: Edits a client\u0027s particulars through their \"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"appleraincoat"},"content":"            + \"index number shown in the list.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"appleraincoat"},"content":"            + \"Format: edit INDEX NUMBER [n/NAME] [p/PHONE] [i/INCOME] [e/EMAIL] [a/ADDRESS] [f/FAMILY] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"appleraincoat"},"content":"            + \"[t/TAG] [r/REMARK]\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"appleraincoat"},"content":"            + \"Example: edit 3 n/John e/john@gmail.com f/5\\n\";","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This client already exists in Realodex.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"        Income updatedIncome \u003d editPersonDescriptor.getIncome().orElse(personToEdit.getIncome());","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"        Family updatedFamily \u003d editPersonDescriptor.getFamily().orElse(personToEdit.getFamily());","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"appleraincoat"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"4llysa"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"        return new Person(updatedName, updatedPhone, updatedIncome,","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"                          updatedEmail, updatedAddress, updatedFamily,","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"4llysa"},"content":"                          updatedTags, updatedRemark, updatedBirthday);","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"UdhayaShan1"},"content":"        private Income income;","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"UdhayaShan1"},"content":"        private Family family;","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"appleraincoat"},"content":"        private Remark remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"4llysa"},"content":"        private Birthday birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"UdhayaShan1"},"content":"            setIncome(toCopy.income);","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":180,"author":{"gitId":"UdhayaShan1"},"content":"            setFamily(toCopy.family);","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"appleraincoat"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"4llysa"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"wapisai"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, income, email, address, family, tags, remark);","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"UdhayaShan1"},"content":"        public void setIncome(Income income) {","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"UdhayaShan1"},"content":"            this.income \u003d income;","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"UdhayaShan1"},"content":"        public Optional\u003cIncome\u003e getIncome() {","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"UdhayaShan1"},"content":"            return Optional.ofNullable(income);","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"UdhayaShan1"},"content":"        public void setFamily(Family family) {","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"UdhayaShan1"},"content":"            this.family \u003d family;","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"UdhayaShan1"},"content":"        public Optional\u003cFamily\u003e getFamily() {","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"UdhayaShan1"},"content":"            return Optional.ofNullable(family);","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"appleraincoat"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2024-03-16"},{"lineNumber":259,"author":{"gitId":"4llysa"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2024-03-25"},{"lineNumber":260,"author":{"gitId":"appleraincoat"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":261,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":262,"author":{"gitId":"appleraincoat"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2024-03-16"},{"lineNumber":263,"author":{"gitId":"4llysa"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2024-03-25"},{"lineNumber":264,"author":{"gitId":"appleraincoat"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":265,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":280,"author":{"gitId":"wapisai"},"content":"                    \u0026\u0026 Objects.equals(income, otherEditPersonDescriptor.income)","lastModifiedDate":"2024-03-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":283,"author":{"gitId":"wapisai"},"content":"                    \u0026\u0026 Objects.equals(family, otherEditPersonDescriptor.family)","lastModifiedDate":"2024-03-15"},{"lineNumber":284,"author":{"gitId":"wapisai"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-18"},{"lineNumber":285,"author":{"gitId":"wapisai"},"content":"                    \u0026\u0026 Objects.equals(remark, otherEditPersonDescriptor.remark);","lastModifiedDate":"2024-03-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":293,"author":{"gitId":"wapisai"},"content":"                    .add(\"income\", income)","lastModifiedDate":"2024-03-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":296,"author":{"gitId":"wapisai"},"content":"                    .add(\"family\", family)","lastModifiedDate":"2024-03-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"wapisai"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2024-03-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":302,"author":{"gitId":"4llysa"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"4llysa"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":304,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":305,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":306,"author":{"gitId":"4llysa"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2024-03-25"},{"lineNumber":307,"author":{"gitId":"4llysa"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2024-03-25"},{"lineNumber":308,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"4llysa":15,"jyztintan":1,"UdhayaShan1":48,"-":214,"appleraincoat":20,"wapisai":12}},{"path":"src/main/java/seedu/realodex/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Realodex as requested ...\";","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_EXIT_HELP \u003d \"Exit Command: Exits Realodex.\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"            + \"Format: exit\\n\";","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"UdhayaShan1":2,"-":16,"appleraincoat":3}},{"path":"src/main/java/seedu/realodex/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":" * Filters and lists all persons in realodex whose name contains the argument keyphrase.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":" * Keyphrase matching is case-insensitive.","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all clients by specified field (name, remark) \"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"            + \"with the specified keyphrase (non-empty, case-insensitive) \"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"            + \"Note that although the fields are listed as optional, ONE field must strictly be present.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"            + \"[\" + PREFIX_NAME + \"KEYPHRASE] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"alice tan\";","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"    public static final String MESSAGE_FILTER_HELP \u003d \"Filter Command: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"            + \"Filters clients by ONE specified field (name, remark)\"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"            + \"with the specified keyphrase (non-empty, case-insensitive) \"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"            + \"Format: filter [n/KEYPHRASE] [r/KEYPHRASE]\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"            + \"Example: filter n/Jus\\n\";","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    public static final String MESSAGE_FILTER_CONFLICT \u003d \"Filter command can only filter by one field.\\n\";","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"    public FilterCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"        return predicate.equals(otherFilterCommand.predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jyztintan":31,"UdhayaShan1":5,"-":39,"appleraincoat":1}},{"path":"src/main/java/seedu/realodex/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.AddCommand.MESSAGE_ADD_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.ClearCommand.MESSAGE_CLEAR_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.DeleteCommand.MESSAGE_DELETE_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.EditCommand.MESSAGE_EDIT_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.FilterCommand.MESSAGE_FILTER_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.ListCommand.MESSAGE_LIST_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"appleraincoat"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":23,"author":{"gitId":"appleraincoat"},"content":"    private final String command;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"appleraincoat"},"content":"    public HelpCommand(String command) {","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"appleraincoat"},"content":"        this.command \u003d command.trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"appleraincoat"},"content":"        switch (command) {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"appleraincoat"},"content":"        case \"add\":","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"appleraincoat"},"content":"            return new CommandResult(MESSAGE_ADD_HELP, false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"appleraincoat"},"content":"        case \"clear\":","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"appleraincoat"},"content":"            return new CommandResult(MESSAGE_CLEAR_HELP, false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"appleraincoat"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"appleraincoat"},"content":"            return new CommandResult(MESSAGE_DELETE_HELP, false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"appleraincoat"},"content":"        case \"edit\":","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"appleraincoat"},"content":"            return new CommandResult(MESSAGE_EDIT_HELP, false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"appleraincoat"},"content":"        case \"filter\":","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"appleraincoat"},"content":"            return new CommandResult(MESSAGE_FILTER_HELP, false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"appleraincoat"},"content":"        case \"list\":","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"            return new CommandResult(MESSAGE_LIST_HELP, false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"appleraincoat"},"content":"        default:","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"appleraincoat"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"appleraincoat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"appleraincoat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"appleraincoat"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"appleraincoat"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"appleraincoat"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"appleraincoat"},"content":"        if (!(other instanceof HelpCommand)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"appleraincoat"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"appleraincoat"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand otherHelpCommand \u003d (HelpCommand) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"appleraincoat"},"content":"        return command.equals(otherHelpCommand.command);","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"appleraincoat"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"UdhayaShan1":1,"-":17,"appleraincoat":53}},{"path":"src/main/java/seedu/realodex/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" * Lists all persons in realodex to the user.","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_LIST_HELP \u003d \"List Command: Lists all clients in Realodex.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"            + \"Format: list\\n\";","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":4,"-":18,"appleraincoat":3}},{"path":"src/main/java/seedu/realodex/logic/commands/delete/DeleteCommandExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands.delete;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wapisai"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wapisai"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wapisai"},"content":" * Contains the logic for executing the delete command.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wapisai"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wapisai"},"content":"public class DeleteCommandExecutor {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wapisai"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     * Deletes a client from realodex using their index in the last shown list.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"wapisai"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wapisai"},"content":"    public static Person deleteByIndex(List\u003cPerson\u003e lastShownList, Index targetIndex) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wapisai"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size() || targetIndex.getZeroBased() \u003c 0) {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"wapisai"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wapisai"},"content":"        return lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wapisai"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"     * Deletes a client from realodex using their full name.","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"wapisai"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wapisai"},"content":"    public static Person deleteByName(List\u003cPerson\u003e lastShownList, Name targetName) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wapisai"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wapisai"},"content":"            if (person.getName().equals(targetName)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wapisai"},"content":"                return person;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wapisai"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wapisai"},"content":"        throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wapisai"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"UdhayaShan1":8,"wapisai":30}},{"path":"src/main/java/seedu/realodex/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"UdhayaShan1":1,"-":16}},{"path":"src/main/java/seedu/realodex/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"4llysa"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_FAMILY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.AddCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"4llysa"},"content":"import seedu.realodex.model.person.Birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_INCOME,","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"4llysa"},"content":"                                           PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_FAMILY,","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"4llysa"},"content":"                                           PREFIX_TAG, PREFIX_REMARK, PREFIX_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        Prefix[] listOfCompulsoryPrefixTags \u003d argMultimap.returnListOfCompulsoryTags(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"                                                                                     PREFIX_INCOME, PREFIX_PHONE,","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"                                                                                     PREFIX_FAMILY, PREFIX_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"                                                                                     PREFIX_TAG);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        if (!arePrefixesPresent(argMultimap,","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"                                listOfCompulsoryPrefixTags)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"            String exceptionMessageForMissingPrefixes \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"                    argMultimap.returnMessageOfMissingPrefixes(listOfCompulsoryPrefixTags) + \"\\n\";","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"            throw new ParseException(Messages.getErrorMessageForMissingPrefixes(exceptionMessageForMissingPrefixes)","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"                                             + AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_INCOME, PREFIX_EMAIL,","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"4llysa"},"content":"                                                 PREFIX_FAMILY, PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder errorMessageBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cName\u003e nameStored \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"                ParserUtil.parseNameReturnStored(argMultimap.getValue(PREFIX_NAME).orElseThrow());","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        nameStored.buildErrorMessage(errorMessageBuilder, \"name\");","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cPhone\u003e phoneStored \u003d ParserUtil.parsePhoneReturnStored(argMultimap.getValue(PREFIX_PHONE)","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"                                                                                    .orElseThrow());","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"        phoneStored.buildErrorMessage(errorMessageBuilder, \"phone\");","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cIncome\u003e incomeStored \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"                ParserUtil.parseIncomeReturnStored(argMultimap.getValue(PREFIX_INCOME).orElseThrow());","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"        incomeStored.buildErrorMessage(errorMessageBuilder, \"income\");","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cEmail\u003e emailStored \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"                ParserUtil.parseEmailReturnStored(argMultimap.getValue(PREFIX_EMAIL).orElseThrow());","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"        emailStored.buildErrorMessage(errorMessageBuilder, \"email\");","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cAddress\u003e addressStored \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"                ParserUtil.parseAddressReturnStored(argMultimap.getValue(PREFIX_ADDRESS).orElseThrow());","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"        addressStored.buildErrorMessage(errorMessageBuilder, \"address\");","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cFamily\u003e familyStored \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"                ParserUtil.parseFamilyReturnStored(argMultimap.getValue(PREFIX_FAMILY).orElseThrow());","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"        familyStored.buildErrorMessage(errorMessageBuilder, \"family\");","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"        Set\u003cTag\u003e tagList \u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"            errorMessageBuilder.append(\"Error parsing tags: \").append(e.getMessage()).append(\"\\n\");","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"        Remark remark;","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        remark \u003d ParserUtil.parseRemark(argMultimap.getValueOrDefault(PREFIX_REMARK).orElseThrow());","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cBirthday\u003e birthdayStored \u003d ParserUtil","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"                .parseBirthdayReturnStored(argMultimap","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"                                                   .getValueOrDefault(PREFIX_BIRTHDAY)","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"                                                   .orElseThrow());","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"        // If any parsing operation fails, throw a ParseException with the accumulated error messages","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"        if (errorMessageBuilder.length() \u003e 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"            throw new ParseException(errorMessageBuilder.toString().trim());","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"        // If all parsing operations succeed, create the person object","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"        Name name \u003d nameStored.returnStoredResult();","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"        Phone phone \u003d phoneStored.returnStoredResult();","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"        Income income \u003d incomeStored.returnStoredResult();","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"        Email email \u003d emailStored.returnStoredResult();","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"        Address address \u003d addressStored.returnStoredResult();","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"        Family family \u003d familyStored.returnStoredResult();","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"        Birthday birthday \u003d birthdayStored.returnStoredResult();","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"        Person person \u003d new Person(name, phone, income, email, address, family, tagList, remark, birthday);","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"     * Checks if all specified prefixes are present in the given ArgumentMultimap.","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"     * @param argumentMultimap the ArgumentMultimap to check","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"     * @param prefixes         the array of prefixes to check for","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"     * @return {@code true} if all specified prefixes are present in the ArgumentMultimap,","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"     *         {@code false} otherwise","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix[] prefixes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"4llysa":7,"jyztintan":1,"UdhayaShan1":97,"-":29}},{"path":"src/main/java/seedu/realodex/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"        if (prefix.equals(PREFIX_REMARK)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"appleraincoat"},"content":"            return values.isEmpty() ? Optional.of(\"\") : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"appleraincoat"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"4llysa"},"content":"    public Optional\u003cString\u003e getValueOrDefault(Prefix prefix) {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"appleraincoat"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"appleraincoat"},"content":"        return values.isEmpty() ? Optional.of(\"\") : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"     * Checks if the specified prefix is present in the argument multimap.","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"     * This method is useful for determining if an argument associated","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"     * with a particular prefix was provided by the user.","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"     * @param prefix The {@link Prefix} to check for presence in the argument multimap.","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"     * @return {@code true} if the prefix is present in the argument multimap, {@code false} otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"    public boolean containsPrefix(Prefix prefix) {","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"        return argMultimap.containsKey(prefix);","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns a message listing the missing prefixes from the given list of compulsory prefixes.","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"     * @param listOfCompulsoryPrefix An array of Prefix objects representing compulsory prefixes.","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A string message listing the missing prefixes.","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"    public String returnMessageOfMissingPrefixes(Prefix[] listOfCompulsoryPrefix) {","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"        return Prefix.returnMessageOfMissingPrefixes(argMultimap, listOfCompulsoryPrefix);","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns an array of unique Prefix objects from the provided list of prefixes.","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"     * @param prefixes Variable number of Prefix objects to be filtered for uniqueness.","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"     * @return An array of unique Prefix objects.","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"    public Prefix[] returnListOfCompulsoryTags(Prefix... prefixes) {","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"        return Stream.of(prefixes)","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"                .distinct()","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"4llysa":2,"jyztintan":14,"UdhayaShan1":25,"-":76,"appleraincoat":6}},{"path":"src/main/java/seedu/realodex/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"        int prefixPositionOfUpper \u003d findPrefixPosition(argsString, prefix.getPrefix().toUpperCase(), 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        if (prefixPosition \u003d\u003d -1 \u0026\u0026 prefixPositionOfUpper !\u003d -1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"            prefixPosition \u003d prefixPositionOfUpper;","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"            prefixPositionOfUpper \u003d findPrefixPosition(argsString,","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"                                                       prefix.getPrefix().toUpperCase(), prefixPositionOfUpper);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"            if (prefixPosition \u003d\u003d -1 \u0026\u0026 prefixPositionOfUpper !\u003d -1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"                prefixPosition \u003d prefixPositionOfUpper;","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"UdhayaShan1":10,"-":147}},{"path":"src/main/java/seedu/realodex/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_NAME_CAPS \u003d new Prefix(\"N/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_PHONE_CAPS \u003d new Prefix(\"P/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_INCOME \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_INCOME_CAPS \u003d new Prefix(\"I/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_ADDRESS_CAPS \u003d new Prefix(\"A/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_EMAIL_CAPS \u003d new Prefix(\"E/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_FAMILY \u003d new Prefix(\"f/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_FAMILY_CAPS \u003d new Prefix(\"F/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_TAG_CAPS \u003d new Prefix(\"T/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_REMARK_CAPS \u003d new Prefix(\"R/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Prefix PREFIX_BIRTHDAY_CAPS \u003d new Prefix(\"B/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"UdhayaShan1":21,"-":8}},{"path":"src/main/java/seedu/realodex/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"wapisai"},"content":"import static seedu.realodex.logic.commands.DeleteCommand.MESSAGE_INDEX_AND_NAME_PROVIDED;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"wapisai"},"content":"import static seedu.realodex.logic.commands.DeleteCommand.MESSAGE_NO_FIELDS_PROVIDED;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"wapisai"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"wapisai"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wapisai"},"content":"        Name name \u003d parseName(argMultimap);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wapisai"},"content":"        Index index \u003d parseIndex(argMultimap);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wapisai"},"content":"        return createDeleteCommand(name, index);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wapisai"},"content":"    private Name parseName(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wapisai"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wapisai"},"content":"            String fullName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"wapisai"},"content":"            return ParserUtil.parseName(fullName);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"wapisai"},"content":"        return null;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"wapisai"},"content":"    private Index parseIndex(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wapisai"},"content":"        String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"wapisai"},"content":"        if (!preamble.isBlank()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wapisai"},"content":"            return ParserUtil.parseIndex(preamble);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"wapisai"},"content":"        return null;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"wapisai"},"content":"    private DeleteCommand createDeleteCommand(Name name, Index index) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"wapisai"},"content":"        if (name !\u003d null \u0026\u0026 index !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"wapisai"},"content":"            throw new ParseException(MESSAGE_INDEX_AND_NAME_PROVIDED);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wapisai"},"content":"        } else if (name !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"wapisai"},"content":"            return new DeleteCommand(name);","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"wapisai"},"content":"        } else if (index !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"wapisai"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"wapisai"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"wapisai"},"content":"            throw new ParseException(MESSAGE_NO_FIELDS_PROVIDED);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"UdhayaShan1":6,"-":16,"wapisai":37}},{"path":"src/main/java/seedu/realodex/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_FAMILY;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"wapisai"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_INCOME, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"wapisai"},"content":"                        PREFIX_FAMILY, PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"wapisai"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_INCOME, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"wapisai"},"content":"                PREFIX_FAMILY, PREFIX_REMARK);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"wapisai"},"content":"        if (argMultimap.getValue(PREFIX_INCOME).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"wapisai"},"content":"            editPersonDescriptor.setIncome(ParserUtil.parseIncome(argMultimap.getValue(PREFIX_INCOME).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"wapisai"},"content":"        if (argMultimap.getValue(PREFIX_FAMILY).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"wapisai"},"content":"            editPersonDescriptor.setFamily(ParserUtil.parseFamily(argMultimap.getValue(PREFIX_FAMILY).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"wapisai"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wapisai"},"content":"            editPersonDescriptor.setTags(ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG)));","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"        if (argMultimap.containsPrefix(PREFIX_REMARK)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"wapisai"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wapisai"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jyztintan":1,"UdhayaShan1":13,"-":48,"appleraincoat":1,"wapisai":15}},{"path":"src/main/java/seedu/realodex/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.PredicateProducer;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    private static final Prefix[] POSSIBLE_PREFIXES \u003d { PREFIX_NAME, PREFIX_REMARK };","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, POSSIBLE_PREFIXES);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        checkEmptyPreamble(prefixChecker);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        checkOnlyOnePrefixPresent(prefixChecker);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"        checkNoDuplicatePrefix(prefixChecker);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        Prefix presentPrefix \u003d prefixChecker.findPresentPrefix(POSSIBLE_PREFIXES);","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        String keyphrase \u003d argMultimap.getValue(presentPrefix).get().trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        PredicateProducer predicateProducer \u003d new PredicateProducer();","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        Predicate\u003cPerson\u003e predicate \u003d predicateProducer.createPredicate(presentPrefix, keyphrase);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        return new FilterCommand(predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"     * Checks if exactly one prefix is present in the input arguments. This method ensures that","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"     * the command includes at least one recognized prefix and that no more than one is specified,","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"     * to maintain the command\u0027s specificity.","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"     * @param prefixChecker the {@link PrefixChecker} used to validate the presence of prefixes.","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"     * @throws ParseException if no prefixes are present or more than one prefix is found.","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"    private void checkOnlyOnePrefixPresent(PrefixChecker prefixChecker) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"        // Check for at least one prefix present and no empty preamble","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"        if (!prefixChecker.anyPrefixesPresent(POSSIBLE_PREFIXES)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"        if (prefixChecker.moreThanOnePrefixPresent(POSSIBLE_PREFIXES)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_FILTER_CONFLICT","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"            ));","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"     * Checks if the preamble (text before the first valid prefix) is empty. This method ensures","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"     * that there are no extraneous text before the command\u0027s key information, adhering to the","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"     * command\u0027s syntax requirements.","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"     * @param prefixChecker the {@link PrefixChecker} used to examine the preamble.","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"     * @throws ParseException if the preamble is not empty.","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"    private void checkEmptyPreamble(PrefixChecker prefixChecker) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"        // Check for at least one prefix present and no empty preamble","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"        if (!prefixChecker.checkEmptyPreamble()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"     * Checks for duplicate prefixes in the input arguments. Duplicate prefixes can lead to ambiguity","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"     * in the command\u0027s intention, so this method ensures that a recognized prefix is used at most","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"     * once in the command.","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"     * @param prefixChecker the {@link PrefixChecker} used to detect duplicate prefixes.","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"     * @throws ParseException if duplicate prefixes are found.","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"    private void checkNoDuplicatePrefix(PrefixChecker prefixChecker) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        prefixChecker.checkNoDuplicatePrefix(POSSIBLE_PREFIXES);","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jyztintan":75,"UdhayaShan1":4,"-":10}},{"path":"src/main/java/seedu/realodex/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"appleraincoat"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"appleraincoat"},"content":"import seedu.realodex.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"appleraincoat"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"appleraincoat"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"appleraincoat"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"appleraincoat"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"appleraincoat"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"appleraincoat"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"appleraincoat"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"appleraincoat"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"appleraincoat"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"appleraincoat"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"    public HelpCommand parse(String command) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"appleraincoat"},"content":"        command \u003d command.trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"appleraincoat"},"content":"        return new HelpCommand(command);","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"appleraincoat"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"appleraincoat":21}},{"path":"src/main/java/seedu/realodex/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"UdhayaShan1":3,"-":13}},{"path":"src/main/java/seedu/realodex/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.StringUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"4llysa"},"content":"import seedu.realodex.model.person.Birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        return new Name(capitalizeWords(trimmedName));","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@code String name} into a {@code Name} and returns it along with any parsing exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"     * @param name The name string to parse.","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A ParserUtilResult containing the parsed Name or an exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"    public static ParserUtilResult\u003cName\u003e parseNameReturnStored(String name) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"            return new ParserUtilResult\u003c\u003e(Name.MESSAGE_CONSTRAINTS, new Name());","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        return new ParserUtilResult\u003c\u003e(\"\", new Name(capitalizeWords(trimmedName)));","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"     * Capitalizes the first letter of each word in the given sentence.","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"     * All other parts of the same word will be lower-cased.","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"     * @param sentence the input sentence","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"     * @return the sentence with the first letter of each word capitalized","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"    public static String capitalizeWords(String sentence) {","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"        if (sentence.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"            return sentence;","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"        // Split the sentence into words","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"        String[] words \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"        for (String word : words) {","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"            // Capitalize the first letter and append the rest of the word in lowercase","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"            sb.append(Character.toUpperCase(word.charAt(0)))","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"                    .append(word.substring(1).toLowerCase())","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"                    .append(\" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"        return sb.toString().trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@code String phone} into a {@code Phone} and returns it along with any parsing exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"     * @param phone The phone string to parse.","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A ParserUtilResult containing the parsed Phone or an exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"    public static ParserUtilResult\u003cPhone\u003e parsePhoneReturnStored(String phone) {","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(phone);","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"            return new ParserUtilResult\u003c\u003e(Phone.MESSAGE_CONSTRAINTS, new Phone());","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"        return new ParserUtilResult\u003c\u003e(\"\", new Phone(trimmedPhone));","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@code String income} into a {@code Income}.","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"UdhayaShan1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws ParseException if the given {@code income} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"UdhayaShan1"},"content":"    public static Income parseIncome(String income) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(income);","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"UdhayaShan1"},"content":"        String trimmedIncome \u003d income.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Income.isValidIncome(trimmedIncome)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"UdhayaShan1"},"content":"            throw new ParseException(Income.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"        return new Income(trimmedIncome);","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@code String income} into a {@code Income} and returns it along with any parsing exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"UdhayaShan1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"UdhayaShan1"},"content":"     * @param income The income string to parse.","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A ParserUtilResult containing the parsed Income or an exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"UdhayaShan1"},"content":"    public static ParserUtilResult\u003cIncome\u003e parseIncomeReturnStored(String income) {","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(income);","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"UdhayaShan1"},"content":"        String trimmedIncome \u003d income.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Income.isValidIncome(trimmedIncome)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"UdhayaShan1"},"content":"            return new ParserUtilResult\u003c\u003e(Income.MESSAGE_CONSTRAINTS, new Income());","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"UdhayaShan1"},"content":"        return new ParserUtilResult\u003c\u003e(\"\", new Income(trimmedIncome));","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"UdhayaShan1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"UdhayaShan1"},"content":"     * @param address The address string to parse.","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A ParserUtilResult containing the parsed Address or an exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"UdhayaShan1"},"content":"    public static ParserUtilResult\u003cAddress\u003e parseAddressReturnStored(String address) {","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(address);","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"UdhayaShan1"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"UdhayaShan1"},"content":"            return new ParserUtilResult\u003c\u003e(Address.MESSAGE_CONSTRAINTS, new Address());","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"UdhayaShan1"},"content":"        return new ParserUtilResult\u003c\u003e(\"\", new Address(trimmedAddress));","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"UdhayaShan1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"UdhayaShan1"},"content":"     * @param email The email string to parse.","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A ParserUtilResult containing the parsed Email or an exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"UdhayaShan1"},"content":"    public static ParserUtilResult\u003cEmail\u003e parseEmailReturnStored(String email) {","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(email);","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"UdhayaShan1"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"UdhayaShan1"},"content":"            return new ParserUtilResult\u003c\u003e(Email.MESSAGE_CONSTRAINTS, new Email());","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"UdhayaShan1"},"content":"        return new ParserUtilResult\u003c\u003e(\"\", new Email(trimmedEmail));","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@code String family} into a {@code Family}.","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"UdhayaShan1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws ParseException if the given {@code family} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"UdhayaShan1"},"content":"    public static Family parseFamily(String family) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(family);","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"UdhayaShan1"},"content":"        String trimmedFamily \u003d family.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Family.isValidFamily(trimmedFamily)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"UdhayaShan1"},"content":"            throw new ParseException(Family.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"UdhayaShan1"},"content":"        assert Integer.parseInt(trimmedFamily) \u003e\u003d 1;","lastModifiedDate":"2024-03-13"},{"lineNumber":240,"author":{"gitId":"UdhayaShan1"},"content":"        return new Family(trimmedFamily);","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@code String family} into a {@code Family}.","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"UdhayaShan1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"UdhayaShan1"},"content":"     * @param family The family string to parse.","lastModifiedDate":"2024-03-29"},{"lineNumber":248,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A ParserUtilResult containing the parsed Family or an exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws ParseException if the given {@code family} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"UdhayaShan1"},"content":"    public static ParserUtilResult\u003cFamily\u003e parseFamilyReturnStored(String family) {","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(family);","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"UdhayaShan1"},"content":"        String trimmedFamily \u003d family.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Family.isValidFamily(trimmedFamily)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"UdhayaShan1"},"content":"            return new ParserUtilResult\u003c\u003e(Family.MESSAGE_CONSTRAINTS, new Family());","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"UdhayaShan1"},"content":"        assert Integer.parseInt(trimmedFamily) \u003e\u003d 1;","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"UdhayaShan1"},"content":"        return new ParserUtilResult\u003c\u003e(\"\", new Family(trimmedFamily));","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":287,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":288,"author":{"gitId":"appleraincoat"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":289,"author":{"gitId":"appleraincoat"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2024-03-16"},{"lineNumber":290,"author":{"gitId":"appleraincoat"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":291,"author":{"gitId":"appleraincoat"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":292,"author":{"gitId":"appleraincoat"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":293,"author":{"gitId":"appleraincoat"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2024-03-17"},{"lineNumber":294,"author":{"gitId":"appleraincoat"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":295,"author":{"gitId":"appleraincoat"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2024-03-16"},{"lineNumber":296,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":297,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":298,"author":{"gitId":"4llysa"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":299,"author":{"gitId":"4llysa"},"content":"     * Parses a {@code String birthday} into a {@code Birthday}.","lastModifiedDate":"2024-03-25"},{"lineNumber":300,"author":{"gitId":"4llysa"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-25"},{"lineNumber":301,"author":{"gitId":"4llysa"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":302,"author":{"gitId":"4llysa"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"4llysa"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":304,"author":{"gitId":"4llysa"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":305,"author":{"gitId":"4llysa"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":306,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":307,"author":{"gitId":"4llysa"},"content":"        return new Birthday(birthday);","lastModifiedDate":"2024-03-25"},{"lineNumber":308,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":309,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@code String birthday} into a {@code Birthday}.","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"UdhayaShan1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":315,"author":{"gitId":"UdhayaShan1"},"content":"     * @param birthday The birthday string to parse.","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A ParserUtilResult containing the parsed Birthday or an exception message.","lastModifiedDate":"2024-03-29"},{"lineNumber":317,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws ParseException if the given {@code birthday} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":318,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":319,"author":{"gitId":"UdhayaShan1"},"content":"    public static ParserUtilResult\u003cBirthday\u003e parseBirthdayReturnStored(String birthday) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":320,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"UdhayaShan1"},"content":"            return new ParserUtilResult\u003c\u003e(Birthday.MESSAGE_CONSTRAINTS, new Birthday());","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":323,"author":{"gitId":"UdhayaShan1"},"content":"        return new ParserUtilResult\u003c\u003e(\"\", new Birthday(birthday));","lastModifiedDate":"2024-03-29"},{"lineNumber":324,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"4llysa":13,"jyztintan":1,"UdhayaShan1":187,"-":114,"appleraincoat":10}},{"path":"src/main/java/seedu/realodex/logic/parser/ParserUtilResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":" * Represents the result of a parsing operation, which includes the parsed result and any associated exception message.","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":" *","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":" * @param \u003cT\u003e The type of the parsed result.","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"public class ParserUtilResult\u003cT\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"    private final String exceptionMessage;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    private final T result;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs a ParserUtilResult with the given exception message and result.","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"     * @param exceptionMessage The exception message generated during parsing.","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"     * @param result           The parsed result.","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    public ParserUtilResult(String exceptionMessage, T result) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"        this.exceptionMessage \u003d exceptionMessage;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"        this.result \u003d result;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns the stored parsed result.","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The parsed result.","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    public T returnStoredResult() {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"        return result;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns the exception message associated with the parsing operation.","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The exception message.","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"    public String returnExceptionMessage() {","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        return this.exceptionMessage;","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"     * Builds an error message using the exception message and appends it to the provided StringBuilder.","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"     * @param errorMessageBuilder The StringBuilder to which the error message is appended.","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"     * @param nameOfClass         The name of the class being parsed.","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    public void buildErrorMessage(StringBuilder errorMessageBuilder, String nameOfClass) {","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        if (exceptionMessage.isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"            return;","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"        errorMessageBuilder.append(\"Error parsing \").append(nameOfClass).append(","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"                \": \").append(exceptionMessage).append(\"\\n\");","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"UdhayaShan1":54}},{"path":"src/main/java/seedu/realodex/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    private static final HashMap\u003cString, String\u003e prefixDescriptionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    private final String prefixDescription;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    static {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"        // Populate the HashMap with key-value pairs","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"        prefixDescriptionMap.put(\"n/\", \"NAME\");","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"        prefixDescriptionMap.put(\"p/\", \"PHONE\");","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        prefixDescriptionMap.put(\"i/\", \"INCOME\");","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        prefixDescriptionMap.put(\"a/\", \"ADDRESS\");","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"        prefixDescriptionMap.put(\"e/\", \"EMAIL\");","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"        prefixDescriptionMap.put(\"f/\", \"FAMILY\");","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"        prefixDescriptionMap.put(\"t/\", \"TAG\");","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        prefixDescriptionMap.put(\"r/\", \"REMARK\");","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        prefixDescriptionMap.put(\"b/\", \"BIRTHDAY\");","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs a Prefix object with the given prefix and its representation.","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"     * @param prefix The prefix string.","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"        this.prefixDescription \u003d prefixDescriptionMap.getOrDefault(prefix.toLowerCase(), \"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"     * Retrieves the prefix string.","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The prefix string.","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"     * Generates a message listing the missing prefixes from the provided argument multimap,","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"     * based on the list of compulsory prefixes.","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"     * @param argMultimap The argument multimap containing prefixes mapped to their respective values.","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"     * @param listOfCompulsoryPrefix An array of Prefix objects representing compulsory prefixes.","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A string message listing the missing prefixes separated by commas.","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"    public static String returnMessageOfMissingPrefixes(Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap,","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"                                                        Prefix[] listOfCompulsoryPrefix) {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"        List\u003cString\u003e missingPrefixes \u003d Stream.of(listOfCompulsoryPrefix)","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"                .filter(prefix -\u003e !argMultimap.containsKey(prefix))","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"                .map(Prefix::toStringWithRepresentation)","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        return String.join(\", \", missingPrefixes);","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns the string representation of the Prefix object.","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The prefix string.","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns the string representation of the Prefix object with its representation.","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The prefix string with its representation.","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"    public String toStringWithRepresentation() {","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"        return getPrefix() + prefixDescription;","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"     * Computes the hash code for the Prefix object.","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The hash code value for the Prefix object.","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"     * Compares the Prefix object with another object for equality.","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"     * @return {@code true} if the objects are equal; {@code false} otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"UdhayaShan1":76,"-":40}},{"path":"src/main/java/seedu/realodex/logic/parser/PrefixChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":" * A utility class to check the presence and uniqueness of prefixes in an {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":" * This class provides methods to verify if specific prefixes are provided by the user,","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":" * ensure no duplicate prefixes are used, and more.","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"public class PrefixChecker {","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    private final ArgumentMultimap argumentMultimap;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"     * Constructs a {@code PrefixChecker} with the provided {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"     * @param argumentMultimap The {@code ArgumentMultimap} to be used for prefix checks.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    public PrefixChecker(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"        this.argumentMultimap \u003d argumentMultimap;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     * Checks if any of the provided prefixes are present in the {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     * @param prefixes The prefixes to check for presence.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"     * @return {@code true} if any of the prefixes are present, {@code false} otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"    public boolean anyPrefixesPresent(Prefix... prefixes) {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"        return Stream.of(prefixes).anyMatch(this::isPrefixPresent);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     * Determines if more than one of the provided prefixes are present in the {@link ArgumentMultimap}.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"     * @param prefixes The prefixes to check.","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"     * @return {@code true} if more than one prefix is present, {@code false} otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"    public boolean moreThanOnePrefixPresent(Prefix... prefixes) {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"        return Stream.of(prefixes).filter(this::isPrefixPresent).count() \u003e 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"     * Checks if the preamble (text before the first valid prefix) of the {@code ArgumentMultimap} is empty.","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"     * @return {@code true} if the preamble is empty, {@code false} otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"    public boolean checkEmptyPreamble() {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"        return argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"     * Verifies that no duplicate prefixes are present for the provided prefixes.","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"     * A duplicate prefix is defined as the same prefix being used multiple times with different values.","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"     * @param prefixes The prefixes to check for duplicates.","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"     * @throws ParseException if duplicate prefixes are found.","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"    public void checkNoDuplicatePrefix(Prefix...prefixes) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"                .filter(prefix -\u003e argumentMultimap.containsPrefix(prefix)","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"                        \u0026\u0026 argumentMultimap.getAllValues(prefix).size() \u003e 1)","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"     * Checks if a specific prefix is present in the {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"     * @param prefix The prefix to check for presence.","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"     * @return {@code true} if the prefix is present, {@code false} otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"    public boolean isPrefixPresent(Prefix prefix) {","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"        return argumentMultimap.containsPrefix(prefix);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"     * Finds and returns the first prefix that is present in the {@code ArgumentMultimap}","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"     * from the given list of prefixes.","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"     * @param prefixes The prefixes to search through.","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"     * @return The first present prefix, or {@code null} if none are present.","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"    public Prefix findPresentPrefix(Prefix...prefixes) {","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"            if (isPrefixPresent(prefix)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"                return prefix;","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"        return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"jyztintan":99}},{"path":"src/main/java/seedu/realodex/logic/parser/RealodexParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.AddCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.ListCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"public class RealodexParser {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(RealodexParser.class);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":49,"author":{"gitId":"appleraincoat"},"content":"        //just for checking if help is called so that trimming is possible","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"        String nonFinalArguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"appleraincoat"},"content":"        boolean isHelp \u003d false;","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"appleraincoat"},"content":"        if (nonFinalArguments.trim().equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"appleraincoat"},"content":"            isHelp \u003d true;","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"appleraincoat"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"appleraincoat"},"content":"            if (isHelp) {","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"appleraincoat"},"content":"                return new HelpCommandParser().parse(commandWord);","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"appleraincoat"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"appleraincoat"},"content":"            if (isHelp) {","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"appleraincoat"},"content":"                return new HelpCommandParser().parse(commandWord);","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"appleraincoat"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"appleraincoat"},"content":"            if (isHelp) {","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"appleraincoat"},"content":"                return new HelpCommandParser().parse(commandWord);","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"appleraincoat"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"appleraincoat"},"content":"            if (isHelp) {","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"appleraincoat"},"content":"                return new HelpCommandParser().parse(commandWord);","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"appleraincoat"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"appleraincoat"},"content":"            if (isHelp) {","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"appleraincoat"},"content":"                return new HelpCommandParser().parse(commandWord);","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"appleraincoat"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"appleraincoat"},"content":"            if (isHelp) {","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"appleraincoat"},"content":"                return new HelpCommandParser().parse(commandWord);","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"appleraincoat"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"appleraincoat"},"content":"            return new HelpCommand(\"\");","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jyztintan":2,"UdhayaShan1":16,"-":67,"appleraincoat":27}},{"path":"src/main/java/seedu/realodex/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"UdhayaShan1":2,"-":15}},{"path":"src/main/java/seedu/realodex/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns the user prefs\u0027 realodex file path.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    Path getRealodexFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"     * Sets the user prefs\u0027 realodex file path.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    void setRealodexFilePath(Path realodexFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"     * Replaces realodex data with the data in {@code realodex}.","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"    void setRealodex(ReadOnlyRealodex realodex);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    /** Returns the Realodex */","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"    ReadOnlyRealodex getRealodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns true if a person with the same identity as {@code person} exists in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"     * The person must exist in the realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"     * {@code person} must not already exist in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"UdhayaShan1":14,"-":73}},{"path":"src/main/java/seedu/realodex/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":" * Represents the in-memory model of the realodex data.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    private final Realodex realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     * Initializes a ModelManager with the given realodex and userPrefs.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    public ModelManager(ReadOnlyRealodex realodex, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"        requireAllNonNull(realodex, userPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        logger.fine(\"Initializing with realodex: \" + realodex + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        this.realodex \u003d new Realodex(realodex);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.realodex.getPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"        this(new Realodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"    public Path getRealodexFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"        return userPrefs.getRealodexFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"    public void setRealodexFilePath(Path realodexFilePath) {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(realodexFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        userPrefs.setRealodexFilePath(realodexFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Realodex \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"    public void setRealodex(ReadOnlyRealodex realodex) {","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"        this.realodex.resetData(realodex);","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"    public ReadOnlyRealodex getRealodex() {","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"        return realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"        return realodex.hasPerson(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        realodex.removePerson(target);","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"        realodex.addPerson(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"        realodex.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"        return realodex.equals(otherModelManager.realodex)","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":29,"-":119}},{"path":"src/main/java/seedu/realodex/model/ReadOnlyRealodex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" * Unmodifiable view of an realodex","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"public interface ReadOnlyRealodex {","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":4,"-":13}},{"path":"src/main/java/seedu/realodex/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    Path getRealodexFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"UdhayaShan1":3,"-":13}},{"path":"src/main/java/seedu/realodex/model/Realodex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.UniquePersonList;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":" * Wraps all data at the realodex level","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"public class Realodex implements ReadOnlyRealodex {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    public Realodex() {}","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     * Creates an Realodex using the Persons in the {@code toBeCopied}","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    public Realodex(ReadOnlyRealodex toBeCopied) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"     * Resets the existing data of this {@code Realodex} with {@code newData}.","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"    public void resetData(ReadOnlyRealodex newData) {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns true if a person with the same identity as {@code person} exists in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"     * Adds a person to realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"     * The person must not already exist in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"     * {@code target} must exist in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"     * Removes {@code key} from this {@code Realodex}.","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"     * {@code key} must exist in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"        if (!(other instanceof Realodex)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex otherRealodex \u003d (Realodex) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"        return persons.equals(otherRealodex.persons);","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":21,"-":109}},{"path":"src/main/java/seedu/realodex/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    private Path realodexFilePath \u003d Paths.get(\"data\" , \"realodex.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        setRealodexFilePath(newUserPrefs.getRealodexFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"    public Path getRealodexFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"        return realodexFilePath;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"    public void setRealodexFilePath(Path realodexFilePath) {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(realodexFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        this.realodexFilePath \u003d realodexFilePath;","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"                \u0026\u0026 realodexFilePath.equals(otherUserPrefs.realodexFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        return Objects.hash(guiSettings, realodexFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"        sb.append(\"\\nLocal data file location : \" + realodexFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":12,"-":76}},{"path":"src/main/java/seedu/realodex/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" * Represents a Person\u0027s address in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    public Address() {","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        value \u003d \"Woodlands\";","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":7,"-":62}},{"path":"src/main/java/seedu/realodex/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"4llysa"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"4llysa"},"content":"import java.text.DateFormat;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"4llysa"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"4llysa"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"4llysa"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"4llysa"},"content":"import java.util.Locale;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"4llysa"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"4llysa"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"4llysa"},"content":" * Represents a Birthday in the Realodex","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"4llysa"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"4llysa"},"content":"public class Birthday {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"4llysa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Birthday should be in dd-MMM-yyyy format\";","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"4llysa"},"content":"    public static final DateFormat DATE_FORMAT \u003d DateFormat.getDateInstance(DateFormat.MEDIUM);","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"4llysa"},"content":"    public static final String INPUT_DATE_PATTERN \u003d \"ddMMMyyyy\";","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"4llysa"},"content":"    public final Optional\u003cDate\u003e birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"4llysa"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"4llysa"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"4llysa"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"4llysa"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"4llysa"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"4llysa"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"4llysa"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(INPUT_DATE_PATTERN, Locale.ENGLISH);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"4llysa"},"content":"        formatter.setLenient(false);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"4llysa"},"content":"        Optional\u003cDate\u003e birthdayDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"4llysa"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"4llysa"},"content":"            birthdayDate \u003d Optional.of(formatter.parse(birthday));","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"4llysa"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"4llysa"},"content":"            // will only reach here with empty string, other cases have been caught in isValidBirthday","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"4llysa"},"content":"            birthdayDate \u003d Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"4llysa"},"content":"        this.birthday \u003d birthdayDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"    public Birthday() {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        this.birthday \u003d Optional.empty();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"4llysa"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"4llysa"},"content":"     * Returns if a given string is a valid birthday.","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"4llysa"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"4llysa"},"content":"    public static boolean isValidBirthday(String birthday) {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"4llysa"},"content":"        if (birthday.isBlank() || birthday.equals(\"\")) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"4llysa"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"4llysa"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"4llysa"},"content":"            SimpleDateFormat formatter \u003d new SimpleDateFormat(INPUT_DATE_PATTERN, Locale.ENGLISH);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"4llysa"},"content":"            formatter.setLenient(false);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"4llysa"},"content":"            formatter.parse(birthday.trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"4llysa"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"4llysa"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"4llysa"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"4llysa"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"4llysa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"4llysa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"4llysa"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"4llysa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"4llysa"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"4llysa"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"4llysa"},"content":"        Birthday otherBirthday \u003d (Birthday) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"4llysa"},"content":"        return birthday.equals(otherBirthday.birthday);","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"4llysa"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"4llysa"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"4llysa"},"content":"        return birthday.hashCode();","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"4llysa"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"4llysa"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"4llysa"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"4llysa"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"4llysa"},"content":"        return birthday.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"4llysa"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"4llysa"},"content":"     * Format state as text for representation.","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"4llysa"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"4llysa"},"content":"    public String toStringWithRepresentation() {","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"4llysa"},"content":"        if (birthday.isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"4llysa"},"content":"            return \"Birthday: \" + DATE_FORMAT.format(birthday.get());","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"4llysa"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"4llysa"},"content":"            return \"No specified Birthday.\";","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"4llysa"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"4llysa":92,"UdhayaShan1":4}},{"path":"src/main/java/seedu/realodex/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" * Represents a Person\u0027s email in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    public Email() {","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        value \u003d \"denzel@gmail.com\";","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":7,"-":76}},{"path":"src/main/java/seedu/realodex/model/person/Family.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" * Represents the family size of a person in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":" * Guarantees: family size is present and not null, and adheres to specific constraints.","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"public class Family {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    /** Message for constraints on family size. */","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Family size should be at least 1\";","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-9]\\\\d*$\";","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    /** The family size. */","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    private String familySize;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs a {@code Family} instance with the given family size including him or herself.","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"     * @param familySize The size of the family.","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    public Family(String familySize) {","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(familySize);","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        checkArgument(isValidFamily(familySize), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        this.familySize \u003d familySize;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    public Family() {","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        this.familySize \u003d \"1\";","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     * Checks if the given family size is a valid value.","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"     * @param familySize The family size to check.","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"     * @return True if the family size is greater than or equal to zero, false otherwise.","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"    public static boolean isValidFamily(String familySize) {","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"        return familySize.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns the string representation of the family size.","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The string representation of the family size.","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        return familySize.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns a string representation of the family size with additional descriptive text.","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A string representation with descriptive text.","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"    public String toStringWithRepresentation() {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"        return \"Family size is \" + familySize;","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"     * Checks if this {@code Family} instance is equal to another object.","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"            return true; // short circuit if same object","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        if (!(other instanceof Family)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"            return false; // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"        Family otherFamily \u003d (Family) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"        return familySize.equals(otherFamily.familySize); // state check","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"UdhayaShan1":80,"appleraincoat":1}},{"path":"src/main/java/seedu/realodex/model/person/Income.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" * Represents the income of a person in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":" * Guarantees: income is present, not null, and adheres to specific constraints.","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"public class Income {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    /** Message for constraints on income. */","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Income should be an integer and should be at least 0\";","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]+$\";","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    /** The income value. */","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    private final String incomeValue;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs an {@code Income} instance with the given income value.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"     * @param incomeValue The income value.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    public Income(String incomeValue) {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(incomeValue);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"wapisai"},"content":"        checkArgument(isValidIncome(incomeValue), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        this.incomeValue \u003d incomeValue;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    public Income() {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"        this.incomeValue \u003d \"1\";","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     * Checks if the given income value is a valid value.","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     * @param incomeValue The income value to check.","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"     * @return True if the income value is greater than or equal to zero, false otherwise.","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    public static boolean isValidIncome(String incomeValue) {","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        return incomeValue.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns the string representation of the income value.","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The string representation of the income value.","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"        return incomeValue.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns a string representation of the income value with additional descriptive text.","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A string representation with descriptive text.","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"    public String toStringWithRepresentation() {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"        return \"Income is $\" + incomeValue;","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"     * Checks if this {@code Income} instance is equal to another object.","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"            return true; // short circuit if same object","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"        if (!(other instanceof Income)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"            return false; // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        Income otherIncome \u003d (Income) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"        return incomeValue.equals(otherIncome.incomeValue); // state check","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"UdhayaShan1":79,"wapisai":1}},{"path":"src/main/java/seedu/realodex/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" * Represents a Person\u0027s name in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    private final String defaultValidName \u003d \"Denzel\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    public Name() {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"        fullName \u003d defaultValidName;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":9,"-":64}},{"path":"src/main/java/seedu/realodex/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":" * Represents a Person in the Realodex.","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    private final Income income;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    private final Family family;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"appleraincoat"},"content":"    private final Remark remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"4llysa"},"content":"    private final Birthday birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"appleraincoat"},"content":"    public Person(Name name, Phone phone, Income income, Email email, Address address,","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"4llysa"},"content":"                  Family family, Set\u003cTag\u003e tags, Remark remark, Birthday birthday) {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"appleraincoat"},"content":"        requireAllNonNull(name, phone, income, email, address, family, tags, remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        this.income \u003d income;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        this.family \u003d family;","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"appleraincoat"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"4llysa"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"    public Income getIncome() {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        return income;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"    public Family getFamily() {","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"        return family;","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"appleraincoat"},"content":"    public Remark getRemark() {","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"appleraincoat"},"content":"        return remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"                \u0026\u0026 income.equals(otherPerson.income)","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"                \u0026\u0026 family.equals(otherPerson.family)","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"appleraincoat"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"4llysa"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark);","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"4llysa"},"content":"        return Objects.hash(name, phone, income, email, address, family, tags, remark);","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"                .add(\"income\", income)","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"UdhayaShan1"},"content":"                .add(\"family\", family)","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"appleraincoat"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"4llysa"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"4llysa"},"content":"        return birthday;","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"4llysa":8,"UdhayaShan1":21,"-":106,"appleraincoat":10}},{"path":"src/main/java/seedu/realodex/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" * Represents a Person\u0027s phone number in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    public Phone() {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"        value \u003d \"1\";","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":7,"-":58}},{"path":"src/main/java/seedu/realodex/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"appleraincoat"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":" * Represents a remark in realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"appleraincoat"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"appleraincoat"},"content":"public class Remark {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"appleraincoat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks should be non-empty\";","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"appleraincoat"},"content":"    public final String remarkName;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"appleraincoat"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"appleraincoat"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"     * @param remarkName A valid remark.","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"appleraincoat"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"appleraincoat"},"content":"    public Remark(String remarkName) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(remarkName);","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"appleraincoat"},"content":"        this.remarkName \u003d remarkName;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"     * Validates if the given string is a valid remark. In the current implementation (as of v1.2),","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     * this method does not perform any actual validation checks and will always return true.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     * This is a placeholder implementation and may change in future versions.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     * @param test the string to be validated as a remark. Cannot be null.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     * @return always true in the current version.","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws NullPointerException if the test parameter is null.","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    */","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(test);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"        return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"appleraincoat"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"appleraincoat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"appleraincoat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"appleraincoat"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"appleraincoat"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"appleraincoat"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"appleraincoat"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"appleraincoat"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"appleraincoat"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"appleraincoat"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"        return remarkName.trim().equals(otherRemark.remarkName.trim());","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"appleraincoat"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"appleraincoat"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"appleraincoat"},"content":"        return remarkName.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"appleraincoat"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"appleraincoat"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"appleraincoat"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"appleraincoat"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"appleraincoat"},"content":"        return remarkName;","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"appleraincoat"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"appleraincoat"},"content":"     * Format state as text for representation.","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"appleraincoat"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"appleraincoat"},"content":"    public String toStringWithRepresentation() {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"appleraincoat"},"content":"        if (remarkName.isBlank()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"appleraincoat"},"content":"            return \"No remark.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"appleraincoat"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"appleraincoat"},"content":"            return \"Remark: \" + remarkName;","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"appleraincoat"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"appleraincoat"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"jyztintan":1,"UdhayaShan1":18,"appleraincoat":57}},{"path":"src/main/java/seedu/realodex/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"UdhayaShan1":4,"-":146}},{"path":"src/main/java/seedu/realodex/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"UdhayaShan1":1,"-":10}},{"path":"src/main/java/seedu/realodex/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"UdhayaShan1":1,"-":5}},{"path":"src/main/java/seedu/realodex/model/person/predicates/NameContainsKeyphrasePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.model.person.predicates;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":" * Tests that a {@code Person}\u0027s {@code Name} contains the keyphrase given.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"public class NameContainsKeyphrasePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    private final String keyphrase;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    public NameContainsKeyphrasePredicate(String keyphrase) {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"        this.keyphrase \u003d keyphrase;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"        String nameInLowerCase \u003d person.getName().fullName.toLowerCase();","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        String keyphraseInLowerCase \u003d keyphrase.toLowerCase();","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        return nameInLowerCase.contains(keyphraseInLowerCase);","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"        if (!(other instanceof NameContainsKeyphrasePredicate)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate otherNameContainsKeyphrasePredicate \u003d (NameContainsKeyphrasePredicate) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        return keyphrase.equals(otherNameContainsKeyphrasePredicate.keyphrase);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        return new ToStringBuilder(this).add(\"keyphrase\", keyphrase).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"jyztintan":44,"UdhayaShan1":1}},{"path":"src/main/java/seedu/realodex/model/person/predicates/PredicateProducer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.model.person.predicates;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.parser.Prefix;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":" * A factory class to produce different types of {@code Predicate\u003cPerson\u003e} based on a given prefix and keyphrase.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":" * This class encapsulates the mapping between specific prefixes and the predicates they correspond to.","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"public class PredicateProducer {","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    private Map\u003cPrefix, Function\u003cString, Predicate\u003cPerson\u003e\u003e\u003e predicateMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"     * Constructs a new {@code PredicateProducer} and","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     * initializes the mapping between prefixes and their corresponding predicate constructors.","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"    public PredicateProducer() {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"        predicateMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        initialize();","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"     * Initializes the predicate map with supported prefixes and their associated predicate constructor functions.","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"     * This method is called during the construction of the {@code PredicateProducer} instance.","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"    private void initialize() {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"        predicateMap.put(PREFIX_NAME, NameContainsKeyphrasePredicate::new);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        predicateMap.put(PREFIX_REMARK, RemarkContainsKeyphrasePredicate::new);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"     * Creates and returns a {@code Predicate\u003cPerson\u003e} based on the provided prefix and keyphrase.","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"     * The predicate tests whether a given {@code Person} object meets the criteria","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"     * defined by the keyphrase associated with the prefix.","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"     * @param prefix The {@code Prefix} that specifies the type of predicate to create.","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"     * @param keyphrase The keyphrase to be used in the predicate for testing {@code Person} objects.","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"     * @return A {@code Predicate\u003cPerson\u003e} that tests if a {@code Person} object meets the criteria.","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"     * @throws ParseException if the keyphrase is null or empty, or if the prefix is unhandled.","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"    public Predicate\u003cPerson\u003e createPredicate(Prefix prefix, String keyphrase) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"        if (keyphrase \u003d\u003d null || keyphrase.trim().isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"        Function\u003cString, Predicate\u003cPerson\u003e\u003e predicateCreator \u003d predicateMap.get(prefix);","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"        assert(predicateCreator !\u003d null);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"        return predicateCreator.apply(keyphrase.trim());","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"jyztintan":63}},{"path":"src/main/java/seedu/realodex/model/person/predicates/RemarkContainsKeyphrasePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.model.person.predicates;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":" * Tests that a {@code Person}\u0027s {@code Remark} contains the keyphrase given.","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"public class RemarkContainsKeyphrasePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    private final String keyphrase;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    public RemarkContainsKeyphrasePredicate(String keyphrase) {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"        this.keyphrase \u003d keyphrase;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"        String remarkInLowerCase \u003d person.getRemark().remarkName.toLowerCase();","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        String keyphraseInLowerCase \u003d keyphrase.toLowerCase();","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        return remarkInLowerCase.contains(keyphraseInLowerCase);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"        if (!(other instanceof RemarkContainsKeyphrasePredicate)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate otherNameContainsKeyphrasePredicate \u003d (RemarkContainsKeyphrasePredicate) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        return keyphrase.equals(otherNameContainsKeyphrasePredicate.keyphrase);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        return new ToStringBuilder(this).add(\"keyphrase\", keyphrase).toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"jyztintan":44}},{"path":"src/main/java/seedu/realodex/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" * Represents a Tag in the realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"4llysa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be either \u0027buyer\u0027 or \u0027seller\u0027\";","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"4llysa"},"content":"    public final Role tagName;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"4llysa"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"4llysa"},"content":"     * Enumeration of Roles that a Person can take on","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"4llysa"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"4llysa"},"content":"    public enum Role {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"4llysa"},"content":"        BUYER(\"Buyer\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"4llysa"},"content":"        SELLER(\"Seller\");","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"4llysa"},"content":"        private String roleName;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"4llysa"},"content":"        // Constructor for the enum to set the custom role name","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"4llysa"},"content":"        Role(String roleName) {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"4llysa"},"content":"            this.roleName \u003d roleName;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"4llysa"},"content":"        // Overriding the toString method to return the custom role name","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"4llysa"},"content":"        @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"4llysa"},"content":"        public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"4llysa"},"content":"            return this.roleName;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"4llysa"},"content":"        this.tagName \u003d Role.valueOf(tagName.toUpperCase());","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"4llysa"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"4llysa"},"content":"            Role.valueOf(test.toUpperCase());","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"4llysa"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"4llysa"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"4llysa"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"4llysa"},"content":"        return tagName.roleName.equals(otherTag.tagName.roleName);","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"4llysa"},"content":"        return \u0027[\u0027 + tagName.toString() + \u0027]\u0027;","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"4llysa":31,"UdhayaShan1":3,"-":54}},{"path":"src/main/java/seedu/realodex/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"4llysa"},"content":"import seedu.realodex.model.person.Birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":" * Contains utility methods for populating {@code Realodex} with sample data.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"            new Person(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"                       new Phone(\"87438807\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"                       new Income(\"1000\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"                       new Email(\"alexyeoh@example\" + \".com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"                       new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"                       new Family(\"20\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"appleraincoat"},"content":"                       getTagSet(\"Buyer\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"4llysa"},"content":"                       new Remark(\"Has 3 cats.\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"4llysa"},"content":"                       new Birthday(\"\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"            new Person(new Name(\"Bernice Yu\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"                       new Phone(\"99272758\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"                       new Income(\"1000\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"                       new Email(\"berniceyu\" + \"@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"                       new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"                       new Family(\"20\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"appleraincoat"},"content":"                       getTagSet(\"buyer\", \"seller\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"4llysa"},"content":"                       new Remark(\"Eats alot\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"4llysa"},"content":"                       new Birthday(\"01-Apr-2021\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"                       new Phone(\"93210283\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"                       new Income(\"1000\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"                       new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"                       new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"                       new Family(\"20\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"                       getTagSet(\"buyer\", \"seller\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"4llysa"},"content":"                       new Remark(\"Weighs 500kg\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"4llysa"},"content":"                       new Birthday(\"01-Apr-2021\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"            new Person(new Name(\"David Li\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"                       new Phone(\"91031282\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"                       new Income(\"1000\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"                       new Email(\"lidavid@example\" + \".com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"                       new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"                       new Family(\"20\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"appleraincoat"},"content":"                       getTagSet(\"seller\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"4llysa"},"content":"                       new Remark(\"Broke his back deadlifting\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"4llysa"},"content":"                       new Birthday(\"12-Jan-1972\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"            new Person(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"                       new Phone(\"92492021\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"                       new Income(\"1000\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"                       new Email(\"irfan@example\" + \".com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"                       new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"                       new Family(\"20\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"appleraincoat"},"content":"                       getTagSet(\"BUYER\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"4llysa"},"content":"                       new Remark(\"Likes to eat nasi lemak after finishing v1.2\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"4llysa"},"content":"                       new Birthday(\"23-May-2001\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"            new Person(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"                       new Phone(\"92624417\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"                       new Income(\"1000\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"                       new Email(\"royb\" + \"@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"                       new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"                       new Family(\"20\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"appleraincoat"},"content":"                       getTagSet(\"buyer\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"4llysa"},"content":"                       new Remark(\"Is a mommy\u0027s boy.\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"4llysa"},"content":"                       new Birthday(\"\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"    public static ReadOnlyRealodex getSampleRealodex() {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex sampleAb \u003d new Realodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"4llysa"},"content":"        Set\u003cTag\u003e s \u003d Arrays.stream(strings)","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"4llysa"},"content":"                .filter(Tag::isValidTagName)","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"4llysa"},"content":"        return s;","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"4llysa":16,"jyztintan":1,"UdhayaShan1":50,"-":28,"appleraincoat":6}},{"path":"src/main/java/seedu/realodex/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"4llysa"},"content":"import seedu.realodex.model.person.Birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"    private final String income;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"    private final String family;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"appleraincoat"},"content":"    private final String remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"4llysa"},"content":"    private final String birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"                             @JsonProperty(\"income\") String income,","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"                             @JsonProperty(\"family\") String family,","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"appleraincoat"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"4llysa"},"content":"                             @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"4llysa"},"content":"                             @JsonProperty(\"birthday\") String birthday) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"        this.income \u003d income;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"        this.family \u003d family;","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        this.remark \u003d Objects.requireNonNullElse(remark, \"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"4llysa"},"content":"        this.birthday \u003d Objects.requireNonNullElse(birthday, \"\");","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"        income \u003d source.getIncome().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        family \u003d source.getFamily().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"appleraincoat"},"content":"        remark \u003d source.getRemark().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"4llysa"},"content":"        birthday \u003d source.getBirthday().toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"        if (income \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Income.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Income.isValidIncome(income)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"            throw new IllegalValueException(Income.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"        final Income modelIncome \u003d new Income(income);","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"        if (family \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"UdhayaShan1"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Family.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"UdhayaShan1"},"content":"        if (!Family.isValidFamily(family)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"UdhayaShan1"},"content":"            throw new IllegalValueException(Family.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"UdhayaShan1"},"content":"        final Family modelFamily \u003d new Family(family);","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"appleraincoat"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"4llysa"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"appleraincoat"},"content":"        return new Person(modelName, modelPhone, modelIncome, modelEmail, modelAddress, modelFamily,","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"4llysa"},"content":"                modelTags, modelRemark, modelBirthday);","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"4llysa":8,"jyztintan":1,"UdhayaShan1":40,"-":97,"appleraincoat":6}},{"path":"src/main/java/seedu/realodex/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"4llysa"},"content":"        tagName \u003d source.tagName.toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"4llysa":1,"UdhayaShan1":3,"-":44}},{"path":"src/main/java/seedu/realodex/storage/JsonRealodexStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.FileUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.JsonUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":" * A class to access Realodex data stored as a json file on the hard disk.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"public class JsonRealodexStorage implements RealodexStorage {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonRealodexStorage.class);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    public JsonRealodexStorage(Path filePath) {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    public Path getRealodexFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"    public Optional\u003cReadOnlyRealodex\u003e readRealodex() throws DataLoadingException {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        return readRealodex(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"     * Similar to {@link #readRealodex()}.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    public Optional\u003cReadOnlyRealodex\u003e readRealodex(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        Optional\u003cJsonSerializableRealodex\u003e jsonRealodex \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"                filePath, JsonSerializableRealodex.class);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        if (!jsonRealodex.isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"            return Optional.of(jsonRealodex.get().toModelType());","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"    public void saveRealodex(ReadOnlyRealodex realodex) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        saveRealodex(realodex, filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"     * Similar to {@link #saveRealodex(ReadOnlyRealodex)}.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"    public void saveRealodex(ReadOnlyRealodex realodex, Path filePath) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"        requireNonNull(realodex);","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableRealodex(realodex), filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"UdhayaShan1":26,"-":53}},{"path":"src/main/java/seedu/realodex/storage/JsonSerializableRealodex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":" * An Immutable Realodex that is serializable to JSON format.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"@JsonRootName(value \u003d \"realodex\")","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"class JsonSerializableRealodex {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs a {@code JsonSerializableRealodex} with the given persons.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    public JsonSerializableRealodex(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     * Converts a given {@code ReadOnlyRealodex} into this class for Jackson use.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableRealodex}.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    public JsonSerializableRealodex(ReadOnlyRealodex source) {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"     * Converts this realodex into the model\u0027s {@code Realodex} object.","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"    public Realodex toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex realodex \u003d new Realodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"            if (realodex.hasPerson(person)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"            realodex.addPerson(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"        return realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"UdhayaShan1":19,"-":41}},{"path":"src/main/java/seedu/realodex/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.JsonUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"UdhayaShan1":5,"-":42}},{"path":"src/main/java/seedu/realodex/storage/RealodexStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":" * Represents a storage for {@link Realodex}.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"public interface RealodexStorage {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    Path getRealodexFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns Realodex data as a {@link ReadOnlyRealodex}.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    Optional\u003cReadOnlyRealodex\u003e readRealodex() throws DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     * @see #getRealodexFilePath()","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    Optional\u003cReadOnlyRealodex\u003e readRealodex(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     * Saves the given {@link ReadOnlyRealodex} to the storage.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     * @param realodex cannot be null.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    void saveRealodex(ReadOnlyRealodex realodex) throws IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"     * @see #saveRealodex(ReadOnlyRealodex)","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"    void saveRealodex(ReadOnlyRealodex realodex, Path filePath) throws IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"UdhayaShan1":16,"-":30}},{"path":"src/main/java/seedu/realodex/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"public interface Storage extends RealodexStorage, UserPrefsStorage {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    Path getRealodexFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    Optional\u003cReadOnlyRealodex\u003e readRealodex() throws DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    void saveRealodex(ReadOnlyRealodex realodex) throws IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"UdhayaShan1":9,"-":23}},{"path":"src/main/java/seedu/realodex/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":" * Manages storage of Realodex data in local storage.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    private RealodexStorage realodexStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     * Creates a {@code StorageManager} with the given {@code RealodexStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    public StorageManager(RealodexStorage realodexStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        this.realodexStorage \u003d realodexStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Realodex methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    public Path getRealodexFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"        return realodexStorage.getRealodexFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"    public Optional\u003cReadOnlyRealodex\u003e readRealodex() throws DataLoadingException {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        return readRealodex(realodexStorage.getRealodexFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"    public Optional\u003cReadOnlyRealodex\u003e readRealodex(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        return realodexStorage.readRealodex(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"    public void saveRealodex(ReadOnlyRealodex realodex) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"        saveRealodex(realodex, realodexStorage.getRealodexFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"    public void saveRealodex(ReadOnlyRealodex realodex, Path filePath) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        realodexStorage.saveRealodex(realodex, filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":22,"-":56}},{"path":"src/main/java/seedu/realodex/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":" * Represents a storage for {@link seedu.realodex.model.UserPrefs}.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     * Saves the given {@link seedu.realodex.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"UdhayaShan1":6,"-":30}},{"path":"src/main/java/seedu/realodex/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.CommandResult;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"         * @see seedu.realodex.logic.Logic#execute(String)","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"UdhayaShan1":5,"-":80}},{"path":"src/main/java/seedu/realodex/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.AddCommand.MESSAGE_ADD_HELP;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.ClearCommand.MESSAGE_CLEAR_HELP;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.DeleteCommand.MESSAGE_DELETE_HELP;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.EditCommand.MESSAGE_EDIT_HELP;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.ExitCommand.MESSAGE_EXIT_HELP;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.FilterCommand.MESSAGE_FILTER_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.ListCommand.MESSAGE_LIST_HELP;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"appleraincoat"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-w10-1.github.io/tp/\";","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"appleraincoat"},"content":"    public static final String HELP_MESSAGE \u003d \"For more information, you may refer to the user guide: \"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"appleraincoat"},"content":"            + \"\\n\" + USERGUIDE_URL;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"appleraincoat"},"content":"        helpMessage.setText(MESSAGE_ADD_HELP + \"\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"appleraincoat"},"content":"                + MESSAGE_DELETE_HELP + \"\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"appleraincoat"},"content":"                + MESSAGE_CLEAR_HELP + \"\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"appleraincoat"},"content":"                + MESSAGE_EDIT_HELP + \"\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"                + MESSAGE_LIST_HELP + \"\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"appleraincoat"},"content":"                + MESSAGE_FILTER_HELP + \"\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"appleraincoat"},"content":"                + MESSAGE_EXIT_HELP + \"\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"appleraincoat"},"content":"                + HELP_MESSAGE);","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"UdhayaShan1":8,"-":98,"appleraincoat":12}},{"path":"src/main/java/seedu/realodex/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.CommandResult;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getRealodexFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"UdhayaShan1"},"content":"     * @see seedu.realodex.logic.Logic#execute(String)","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"UdhayaShan1":9,"-":187}},{"path":"src/main/java/seedu/realodex/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on Realodex level 4\u003c/a\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"    private Label income;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"    private Label family;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"appleraincoat"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"appleraincoat"},"content":"    private Label remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"4llysa"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"4llysa"},"content":"    private Label birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"        income.setText(person.getIncome().toStringWithRepresentation());","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"        family.setText(person.getFamily().toStringWithRepresentation());","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"4llysa"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName.toString())));","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"appleraincoat"},"content":"        remark.setText(person.getRemark().toStringWithRepresentation());","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"4llysa"},"content":"        birthday.setText(person.getBirthday().toStringWithRepresentation());","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"4llysa":4,"UdhayaShan1":9,"-":55,"appleraincoat":3}},{"path":"src/main/java/seedu/realodex/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"UdhayaShan1":3,"-":46}},{"path":"src/main/java/seedu/realodex/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"UdhayaShan1":1,"-":26}},{"path":"src/main/java/seedu/realodex/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":1,"-":27}},{"path":"src/main/java/seedu/realodex/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"UdhayaShan1":1,"-":12}},{"path":"src/main/java/seedu/realodex/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.MainApp;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.StringUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"appleraincoat"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/realodex_icon.png\";","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"UdhayaShan1":5,"-":82,"appleraincoat":1}},{"path":"src/main/java/seedu/realodex/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.MainApp;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"UdhayaShan1":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"4llysa"},"content":"    -fx-background-image: url(\"/images/realodex_icon.png\");","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"4llysa"},"content":"    -fx-background-color:transparent;","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"4llysa"},"content":"    -fx-background-size: auto 90%; /* Adjusts the image\u0027s width to fit the container width */","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"4llysa"},"content":"    -fx-background-repeat: no-repeat; /* Prevents the image from repeating */","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"4llysa"},"content":"    -fx-background-position: center; /* Centers the image in the container */","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"4llysa"},"content":"    /*-fx-background-color: derive(#656565, 100%);*/","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"4llysa"},"content":"    /*-fx-opacity: 0.5;*/","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"4llysa"},"content":"    -fx-background-color: rgba(101, 101, 101, 0.92);","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"4llysa"},"content":"    -fx-background-color: rgba(68, 68, 68, 0.9);","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"4llysa"},"content":"    -fx-background-color: rgba(0, 63, 191, 0.9);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"4llysa"},"content":"    -fx-border-color: #dbdbdb;","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":144,"author":{"gitId":"4llysa"},"content":"     -fx-background-color: derive(rgb(101, 101, 101), 20%);","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":148,"author":{"gitId":"4llysa"},"content":"     -fx-background-color: derive(#dbdbdb, 20%);","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"4llysa"},"content":"     -fx-border-color: derive(#dbdbdb, 10%);","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"4llysa"},"content":"    -fx-text-fill: #919191 !important;","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"4llysa"},"content":"    -fx-background-color: derive(#919191, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"4llysa"},"content":"    -fx-border-color: derive(#919191, 25%);","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"4llysa"},"content":"    -fx-background-color: derive(#919191, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"4llysa"},"content":"    -fx-border-color: derive(#919191, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":192,"author":{"gitId":"4llysa"},"content":"    -fx-background-color: derive(#919191, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"4llysa"},"content":"    -fx-background-color: derive(#919191, 50%);","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"4llysa"},"content":"    -fx-background-color: derive(#003fbf, 10%);","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"4llysa"},"content":"    -fx-background-color: transparent, #656565, transparent, #656565;","lastModifiedDate":"2024-03-27"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"4llysa":25,"-":335}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"4llysa"},"content":"    -fx-background: rgba(56, 56, 56, 0);","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"4llysa":1,"-":18}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"appleraincoat"},"content":"      \u003cHBox alignment\u003d\"BOTTOM_RIGHT\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":43,"appleraincoat":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"appleraincoat"},"content":"         title\u003d\"Realodex\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"    \u003cImage url\u003d\"@/images/realodex_icon.png\" /\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":58,"appleraincoat":2}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"      \u003cLabel fx:id\u003d\"income\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$income\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"      \u003cLabel fx:id\u003d\"family\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$family\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"appleraincoat"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"4llysa"},"content":"      \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthday\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"4llysa":2,"-":36,"UdhayaShan1":2,"appleraincoat":1}},{"path":"src/test/java/seedu/realodex/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"UdhayaShan1":1,"-":88}},{"path":"src/test/java/seedu/realodex/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.core;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"UdhayaShan1":1,"-":26}},{"path":"src/test/java/seedu/realodex/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.core;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"UdhayaShan1":1,"-":15}},{"path":"src/test/java/seedu/realodex/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.core;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":2,"-":133}},{"path":"src/test/java/seedu/realodex/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.core.index;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"UdhayaShan1":2,"-":65}},{"path":"src/test/java/seedu/realodex/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"appleraincoat"},"content":"        assertNotNull(AppUtil.getImage(\"/images/realodex_icon.png\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"UdhayaShan1":2,"-":33,"appleraincoat":1}},{"path":"src/test/java/seedu/realodex/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"UdhayaShan1":3,"-":105}},{"path":"src/test/java/seedu/realodex/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.Config;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"UdhayaShan1":4,"-":112}},{"path":"src/test/java/seedu/realodex/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":2,"-":21}},{"path":"src/test/java/seedu/realodex/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.SerializableTestClass;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.TestUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":3,"-":42}},{"path":"src/test/java/seedu/realodex/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"UdhayaShan1":2,"-":141}},{"path":"src/test/java/seedu/realodex/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.FAMILY_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INCOME_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.NAME_DESC_AMY_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.TAG_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.AMY_NAME_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.AddCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.CommandResult;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.ListCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.JsonRealodexStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.storage.StorageManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"        JsonRealodexStorage realodexStorage \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"                new JsonRealodexStorage(temporaryFolder.resolve(\"realodex.json\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        StorageManager storage \u003d new StorageManager(realodexStorage, userPrefsStorage);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"UdhayaShan1"},"content":"        // Inject LogicManager with an RealodexStorage that throws the IOException e when saving","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"UdhayaShan1"},"content":"        JsonRealodexStorage realodexStorage \u003d new JsonRealodexStorage(prefPath) {","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"UdhayaShan1"},"content":"            public void saveRealodex(ReadOnlyRealodex realodex, Path filePath)","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"UdhayaShan1"},"content":"        StorageManager storage \u003d new StorageManager(realodexStorage, userPrefsStorage);","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"UdhayaShan1"},"content":"        // Triggers the saveRealodex method by executing an add command","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"UdhayaShan1"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY_CAPS + PHONE_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"UdhayaShan1"},"content":"                + INCOME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"UdhayaShan1"},"content":"                + ADDRESS_DESC_AMY + FAMILY_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"UdhayaShan1"},"content":"                + TAG_DESC_AMY + BIRTHDAY_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"UdhayaShan1"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY_NAME_CAPS).withTags(VALID_TAG_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"UdhayaShan1":43,"-":140}},{"path":"src/test/java/seedu/realodex/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        model \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"        Person personInList \u003d model.getRealodex().getPersonList().get(0);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"UdhayaShan1":13,"-":35}},{"path":"src/test/java/seedu/realodex/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"        public Path getRealodexFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"        public void setRealodexFilePath(Path realodexFilePath) {","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"        public void setRealodex(ReadOnlyRealodex newData) {","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"        public ReadOnlyRealodex getRealodex() {","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"UdhayaShan1"},"content":"        public ReadOnlyRealodex getRealodex() {","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"UdhayaShan1"},"content":"            return new Realodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"UdhayaShan1":18,"-":186}},{"path":"src/test/java/seedu/realodex/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    public void execute_emptyRealodex_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    public void execute_nonEmptyRealodex_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"        Model model \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        expectedModel.setRealodex(new Realodex());","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"UdhayaShan1":12,"-":20}},{"path":"src/test/java/seedu/realodex/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"UdhayaShan1":1,"-":62}},{"path":"src/test/java/seedu/realodex/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_FAMILY;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_FAMILY_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_INCOME_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_TAG_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.NameContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALID_NAME_AMY_FIRST_LETTER_CAPS \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALID_NAME_AMY_NON_CAPS \u003d \"amy bee\";","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALID_NAME_AMY_VARYING_CAPS \u003d \"aMY bEe\";","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALID_NAME_BOB_FIRST_LETTER_CAPS \u003d \"Bob Choo\";","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALID_INCOME_AMY \u003d \"20000\";","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALID_INCOME_BOB \u003d \"30000\";","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALID_FAMILY_AMY \u003d \"4\";","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALID_FAMILY_BOB \u003d \"4\";","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"4llysa"},"content":"    public static final String VALID_TAG_AMY \u003d \"buyer\";","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"4llysa"},"content":"    public static final String VALID_TAG_BOB \u003d \"seller\";","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"appleraincoat"},"content":"    public static final String VALID_REMARK_AMY \u003d \"This is a remark\";","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"appleraincoat"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Testing remark\";","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"01May2023\";","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String NAME_DESC_AMY_CAPS \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String NAME_DESC_AMY_NON_CAPS \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY_NON_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String NAME_DESC_AMY_VARYING_CAPS \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY_VARYING_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String NAME_DESC_BOB_PREFIX_CAPS \u003d \" \" + PREFIX_NAME_CAPS + VALID_NAME_BOB_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String PHONE_DESC_BOB_PREFIX_CAPS \u003d \" \" + PREFIX_PHONE_CAPS + VALID_PHONE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String INCOME_DESC_AMY \u003d \" \" + PREFIX_INCOME + VALID_INCOME_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String INCOME_DESC_BOB \u003d \" \" + PREFIX_INCOME + VALID_INCOME_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String INCOME_DESC_BOB_PREFIX_CAPS \u003d \" \" + PREFIX_INCOME_CAPS + VALID_INCOME_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String EMAIL_DESC_BOB_PREFIX_CAPS \u003d \" \" + PREFIX_EMAIL_CAPS + VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String ADDRESS_DESC_BOB_PREFIX_CAPS \u003d \" \" + PREFIX_ADDRESS_CAPS + VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String FAMILY_DESC_AMY \u003d \" \" + PREFIX_FAMILY + VALID_FAMILY_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String FAMILY_DESC_BOB \u003d \" \" + PREFIX_FAMILY + VALID_FAMILY_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String FAMILY_DESC_BOB_PREFIX_CAPS \u003d \" \" + PREFIX_FAMILY_CAPS + VALID_FAMILY_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"4llysa"},"content":"    public static final String TAG_DESC_BOB \u003d \" \" + PREFIX_TAG + VALID_TAG_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String TAG_DESC_BOB_PREFIX_CAPS \u003d \" \" + PREFIX_TAG_CAPS + VALID_TAG_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"4llysa"},"content":"    public static final String TAG_DESC_AMY \u003d \" \" + PREFIX_TAG + VALID_TAG_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"appleraincoat"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"appleraincoat"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String REMARK_DESC_BOB_PREFIX_CAPS \u003d \" \" + PREFIX_REMARK_CAPS + VALID_REMARK_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String INVALID_INCOME_DESC \u003d \" \" + PREFIX_INCOME + \"-1\"; // Income must be positive, \u003e\u003d 0","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String INVALID_FAMILY_DESC \u003d \" \" + PREFIX_FAMILY + \"0\"; // Family size must be at least 1","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"4llysa"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"friend\"; // \u0027friend\u0027 not allowed in tags","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY_FIRST_LETTER_CAPS)","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"                .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"                .withIncome(VALID_INCOME_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"                .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"                .withFamily(VALID_FAMILY_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"                .withTags(VALID_TAG_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"                .withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"                .build();","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"                .withName(VALID_NAME_BOB_FIRST_LETTER_CAPS)","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"                .withIncome(VALID_INCOME_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"                .withFamily(VALID_FAMILY_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"                .withTags(VALID_TAG_AMY, VALID_TAG_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"                .withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"                .build();","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"UdhayaShan1"},"content":"     * - the realodex, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex expectedRealodex \u003d new Realodex(actualModel.getRealodex());","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":162,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedRealodex, actualModel.getRealodex());","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"UdhayaShan1"},"content":"     * {@code model}\u0027s realodex.","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":173,"author":{"gitId":"jyztintan"},"content":"        final String fullName \u003d person.getName().fullName;","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"jyztintan"},"content":"        model.updateFilteredPersonList(new NameContainsKeyphrasePredicate(fullName));","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"4llysa":5,"jyztintan":3,"UdhayaShan1":78,"-":89,"appleraincoat":4}},{"path":"src/test/java/seedu/realodex/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    private Model model \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"wapisai"},"content":"    public void execute_validNameUnfilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"wapisai"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"wapisai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getName());","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"wapisai"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"wapisai"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"wapisai"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"wapisai"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"wapisai"},"content":"    public void execute_invalidNameUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"wapisai"},"content":"        Person personToDelete \u003d new PersonBuilder().withName(\"b\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"wapisai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getName());","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"wapisai"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        Model expectedModel \u003d new ModelManager(model.getRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"        // ensures that outOfBoundIndex is still in bounds of realodex list","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRealodex().getPersonList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":106,"author":{"gitId":"wapisai"},"content":"    public void equalsIndex() {","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"wapisai"},"content":"    public void equalsName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"wapisai"},"content":"        DeleteCommand deleteUdhayaCommand \u003d new DeleteCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"wapisai"},"content":"                new PersonBuilder().withName(\"Udhaya\").build().getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"wapisai"},"content":"        DeleteCommand deleteNotUdhayaCommand \u003d new DeleteCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"wapisai"},"content":"                new PersonBuilder().withName(\"not Udhaya\").build().getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"wapisai"},"content":"        DeleteCommand deleteUdhayaShanmugamCommand \u003d new DeleteCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"wapisai"},"content":"                new PersonBuilder().withName(\"Udhaya Shanmugam\").build().getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"wapisai"},"content":"        DeleteCommand deleteAddressCommand \u003d new DeleteCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"wapisai"},"content":"                new PersonBuilder().withAddress(\"Udhaya\").build().getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"wapisai"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"wapisai"},"content":"        assertTrue(deleteUdhayaCommand.equals(deleteUdhayaCommand));","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"wapisai"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"wapisai"},"content":"        DeleteCommand deleteUdhayaCommandCopy \u003d new DeleteCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"wapisai"},"content":"                new PersonBuilder().withName(\"Udhaya\").build().getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"wapisai"},"content":"        assertTrue(deleteUdhayaCommand.equals(deleteUdhayaCommandCopy));","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"wapisai"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"wapisai"},"content":"        assertFalse(deleteUdhayaCommand.equals(1));","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"wapisai"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"wapisai"},"content":"        assertFalse(deleteUdhayaCommand.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"wapisai"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"wapisai"},"content":"        assertFalse(deleteUdhayaCommand.equals(deleteNotUdhayaCommand));","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"wapisai"},"content":"        // delete udhaya should not delete someone with address udhaya","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"wapisai"},"content":"        assertFalse(deleteUdhayaCommand.equals(deleteAddressCommand));","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"wapisai"},"content":"        //delete Udhaya should not delete someone with name Udhaya Shanugam","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"wapisai"},"content":"        assertFalse(deleteUdhayaCommand.equals(deleteUdhayaShanmugamCommand));","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"UdhayaShan1":20,"-":101,"wapisai":58}},{"path":"src/test/java/seedu/realodex/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_NAME_BOB_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    private Model model \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        Model expectedModel \u003d new ModelManager(new Realodex(model.getRealodex()), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB_FIRST_LETTER_CAPS).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"4llysa"},"content":"                .withTags(VALID_TAG_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB_FIRST_LETTER_CAPS)","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"4llysa"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"        Model expectedModel \u003d new ModelManager(new Realodex(model.getRealodex()), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"        Model expectedModel \u003d new ModelManager(new Realodex(model.getRealodex()), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"                .withName(VALID_NAME_BOB_FIRST_LETTER_CAPS).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB_FIRST_LETTER_CAPS).build());","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"        Model expectedModel \u003d new ModelManager(new Realodex(model.getRealodex()), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"        // edit person in filtered list into a duplicate in realodex","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"        Person personInList \u003d model.getRealodex().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"                VALID_NAME_BOB_FIRST_LETTER_CAPS).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"     * but smaller than size of realodex","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"UdhayaShan1"},"content":"        // ensures that outOfBoundIndex is still in bounds of realodex list","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRealodex().getPersonList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"UdhayaShan1"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB_FIRST_LETTER_CAPS).build());","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"4llysa":2,"UdhayaShan1":40,"-":144}},{"path":"src/test/java/seedu/realodex/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_NAME_BOB_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                .withName(VALID_NAME_BOB_FIRST_LETTER_CAPS).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"4llysa"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"        //different remarks -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"wapisai"},"content":"                + editPersonDescriptor.getIncome().orElse(null) + \", income\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"wapisai"},"content":"                + editPersonDescriptor.getFamily().orElse(null) + \", family\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"wapisai"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", remark\u003d\"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"wapisai"},"content":"                + editPersonDescriptor.getRemark().orElse(null) + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"4llysa":1,"UdhayaShan1":16,"-":59,"wapisai":4}},{"path":"src/test/java/seedu/realodex/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"UdhayaShan1":5,"-":15}},{"path":"src/test/java/seedu/realodex/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.NameContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.RemarkContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"public class FilterCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    private Model model \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate firstPredicate \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"                new NameContainsKeyphrasePredicate(\"first\");","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate secondPredicate \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"                new NameContainsKeyphrasePredicate(\"second\");","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate thirdPredicate \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"                new RemarkContainsKeyphrasePredicate(\"first\");","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate fourthPredicate \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"                new RemarkContainsKeyphrasePredicate(\"second\");","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"        FilterCommand filterThirdCommand \u003d new FilterCommand(thirdPredicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"        FilterCommand filterFourthCommand \u003d new FilterCommand(fourthPredicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"        // different predicate type, different keyphrase -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"        assertFalse(filterFirstCommand.equals(filterFourthCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"        // same predicate type, different keyphrase -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"        // different predicate type, same keyphrase -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"        assertFalse(filterFirstCommand.equals(filterThirdCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"        assertFalse(filterSecondCommand.equals(filterFourthCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"    public void execute_nonMatchingNameKeyphrase_noPersonFound() {","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate predicate \u003d prepareNamePredicate(\"yapyapyap\");","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"    public void execute_nonMatchingRemarkKeyphrase_noPersonFound() {","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate predicate \u003d prepareRemarkPredicate(\"abcdefghijklmnopqrstuvwxyz\");","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"    public void execute_oneNameKeyphrase_multiplePersonsFound() {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate predicate \u003d prepareNamePredicate(\"El\");","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"        assertEquals(Arrays.asList(DANIEL, ELLE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"    public void execute_oneRemarkKeyphrase_multiplePersonsFound() {","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate predicate \u003d prepareRemarkPredicate(\"the\");","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"jyztintan"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"jyztintan"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"jyztintan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"jyztintan"},"content":"        assertEquals(Arrays.asList(CARL, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate predicate \u003d new NameContainsKeyphrasePredicate(\"keyphrase\");","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"jyztintan"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"jyztintan"},"content":"        String expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"jyztintan"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"jyztintan"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeyphrasePredicate}.","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":125,"author":{"gitId":"jyztintan"},"content":"    private NameContainsKeyphrasePredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"jyztintan"},"content":"        return new NameContainsKeyphrasePredicate(userInput);","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"jyztintan"},"content":"     * Parses {@code userInput} into a {@code RemarkContainsKeyphrasePredicate}.","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"jyztintan"},"content":"    private RemarkContainsKeyphrasePredicate prepareRemarkPredicate(String userInput) {","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"jyztintan"},"content":"        return new RemarkContainsKeyphrasePredicate(userInput);","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jyztintan":76,"UdhayaShan1":11,"-":48}},{"path":"src/test/java/seedu/realodex/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.AddCommand.MESSAGE_ADD_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.ClearCommand.MESSAGE_CLEAR_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.DeleteCommand.MESSAGE_DELETE_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.EditCommand.MESSAGE_EDIT_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.FilterCommand.MESSAGE_FILTER_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.ListCommand.MESSAGE_LIST_HELP;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"appleraincoat"},"content":"    private Model model \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"appleraincoat"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"appleraincoat"},"content":"        assertCommandSuccess(new HelpCommand(\"\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":28,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"appleraincoat"},"content":"    public void execute_commandhelp_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"appleraincoat"},"content":"        CommandResult expectedAddHelpCommandResult \u003d new CommandResult(MESSAGE_ADD_HELP,","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"appleraincoat"},"content":"                false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"appleraincoat"},"content":"        assertCommandSuccess(new HelpCommand(\"add\"), model, expectedAddHelpCommandResult, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"appleraincoat"},"content":"        CommandResult expectedClearHelpCommandResult \u003d new CommandResult(MESSAGE_CLEAR_HELP,","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"appleraincoat"},"content":"                false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"appleraincoat"},"content":"        assertCommandSuccess(new HelpCommand(\"clear\"), model, expectedClearHelpCommandResult, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"appleraincoat"},"content":"        CommandResult expectedDeleteHelpCommandResult \u003d new CommandResult(MESSAGE_DELETE_HELP,","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"appleraincoat"},"content":"                false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"appleraincoat"},"content":"        assertCommandSuccess(new HelpCommand(\"delete\"), model, expectedDeleteHelpCommandResult, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"appleraincoat"},"content":"        CommandResult expectedEditHelpCommandResult \u003d new CommandResult(MESSAGE_EDIT_HELP,","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"appleraincoat"},"content":"                false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"appleraincoat"},"content":"        assertCommandSuccess(new HelpCommand(\"edit\"), model, expectedEditHelpCommandResult, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"appleraincoat"},"content":"        CommandResult expectedFilterHelpCommandResult \u003d new CommandResult(MESSAGE_FILTER_HELP,","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"appleraincoat"},"content":"                false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"appleraincoat"},"content":"        assertCommandSuccess(new HelpCommand(\"filter\"), model, expectedFilterHelpCommandResult, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"appleraincoat"},"content":"        CommandResult expectedListHelpCommandResult \u003d new CommandResult(MESSAGE_LIST_HELP,","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"appleraincoat"},"content":"                false, false);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"appleraincoat"},"content":"        assertCommandSuccess(new HelpCommand(\"list\"), model, expectedListHelpCommandResult, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"UdhayaShan1":5,"-":12,"appleraincoat":39}},{"path":"src/test/java/seedu/realodex/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"        model \u003d new ModelManager(getTypicalRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        expectedModel \u003d new ModelManager(model.getRealodex(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"UdhayaShan1":10,"-":29}},{"path":"src/test/java/seedu/realodex/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_MISSING_PREFIXES;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB_PREFIX_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.EMAIL_DESC_BOB_PREFIX_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.FAMILY_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.FAMILY_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.FAMILY_DESC_BOB_PREFIX_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INCOME_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INCOME_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INCOME_DESC_BOB_PREFIX_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_FAMILY_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_INCOME_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.NAME_DESC_AMY_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.NAME_DESC_AMY_NON_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.NAME_DESC_AMY_VARYING_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.NAME_DESC_BOB_PREFIX_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.PHONE_DESC_BOB_PREFIX_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.REMARK_DESC_BOB_PREFIX_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.TAG_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.TAG_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.TAG_DESC_BOB_PREFIX_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_FAMILY_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_INCOME_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_NAME_BOB_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_FAMILY;","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.AMY_NAME_CAPS;","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.AddCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.CommandTestUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"4llysa"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"                           PREAMBLE_WHITESPACE + NAME_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"                                   + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"                                   + REMARK_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"appleraincoat"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"        // two valid tags - all accepted","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"4llysa"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_BOB, VALID_TAG_AMY)","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"                        + TAG_DESC_BOB + TAG_DESC_AMY + REMARK_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        // three valid tags - all accepted","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"        expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_BOB, VALID_TAG_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"                                   + PHONE_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"                                   + INCOME_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"                                   + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"                                   + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"                                   + REMARK_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"                                   + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"    public void parse_prefixesCapitalized_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"        // name prefix caps","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"                           PREAMBLE_WHITESPACE + NAME_DESC_BOB_PREFIX_CAPS","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"                                   + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"                                   + REMARK_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"        // phone prefix caps","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB_PREFIX_CAPS + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"                                   + REMARK_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"UdhayaShan1"},"content":"        // income prefix caps","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB_PREFIX_CAPS + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"UdhayaShan1"},"content":"                                   + REMARK_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"UdhayaShan1"},"content":"        // email prefix caps","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB_PREFIX_CAPS","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"UdhayaShan1"},"content":"                                   + REMARK_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"UdhayaShan1"},"content":"        // address prefix caps","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB_PREFIX_CAPS + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + REMARK_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"UdhayaShan1"},"content":"        // family prefix caps","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB_PREFIX_CAPS","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + REMARK_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"UdhayaShan1"},"content":"        // tag prefix caps","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB_PREFIX_CAPS + REMARK_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"UdhayaShan1"},"content":"        // remark prefix caps","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + REMARK_DESC_BOB_PREFIX_CAPS + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"UdhayaShan1"},"content":"        // all fields prefix caps","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB_PREFIX_CAPS + PHONE_DESC_BOB_PREFIX_CAPS","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"UdhayaShan1"},"content":"                                   + INCOME_DESC_BOB_PREFIX_CAPS + EMAIL_DESC_BOB_PREFIX_CAPS","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB_PREFIX_CAPS + FAMILY_DESC_BOB_PREFIX_CAPS","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB_PREFIX_CAPS + REMARK_DESC_BOB_PREFIX_CAPS + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"UdhayaShan1"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"UdhayaShan1"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"UdhayaShan1"},"content":"                + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB + REMARK_DESC_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, NAME_DESC_AMY_CAPS + validExpectedPersonString,","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                           Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"UdhayaShan1"},"content":"        //multiple incomes","lastModifiedDate":"2024-03-17"},{"lineNumber":199,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, INCOME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-17"},{"lineNumber":200,"author":{"gitId":"UdhayaShan1"},"content":"                           Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INCOME));","lastModifiedDate":"2024-03-17"},{"lineNumber":201,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":210,"author":{"gitId":"UdhayaShan1"},"content":"        // multiple family","lastModifiedDate":"2024-03-17"},{"lineNumber":211,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, FAMILY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-17"},{"lineNumber":212,"author":{"gitId":"UdhayaShan1"},"content":"                           Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FAMILY));","lastModifiedDate":"2024-03-17"},{"lineNumber":213,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":214,"author":{"gitId":"UdhayaShan1"},"content":"        //multiple remarks","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, REMARK_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"UdhayaShan1"},"content":"                           Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REMARK));","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":220,"author":{"gitId":"UdhayaShan1"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + INCOME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"UdhayaShan1"},"content":"                        + NAME_DESC_AMY_CAPS + ADDRESS_DESC_AMY + FAMILY_DESC_AMY + REMARK_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":223,"author":{"gitId":"UdhayaShan1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_INCOME, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"UdhayaShan1"},"content":"                                                             PREFIX_PHONE, PREFIX_FAMILY, PREFIX_REMARK));","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":240,"author":{"gitId":"UdhayaShan1"},"content":"        // invalid income","lastModifiedDate":"2024-03-17"},{"lineNumber":241,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, INVALID_INCOME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-17"},{"lineNumber":242,"author":{"gitId":"UdhayaShan1"},"content":"                           Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INCOME));","lastModifiedDate":"2024-03-17"},{"lineNumber":243,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":248,"author":{"gitId":"UdhayaShan1"},"content":"        // invalid family","lastModifiedDate":"2024-03-17"},{"lineNumber":249,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, INVALID_FAMILY_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-17"},{"lineNumber":250,"author":{"gitId":"UdhayaShan1"},"content":"                           Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FAMILY));","lastModifiedDate":"2024-03-17"},{"lineNumber":251,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":266,"author":{"gitId":"UdhayaShan1"},"content":"        // invalid income","lastModifiedDate":"2024-03-17"},{"lineNumber":267,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_INCOME_DESC,","lastModifiedDate":"2024-03-17"},{"lineNumber":268,"author":{"gitId":"UdhayaShan1"},"content":"                           Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INCOME));","lastModifiedDate":"2024-03-17"},{"lineNumber":269,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":273,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":274,"author":{"gitId":"UdhayaShan1"},"content":"        // invalid family","lastModifiedDate":"2024-03-17"},{"lineNumber":275,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_FAMILY_DESC,","lastModifiedDate":"2024-03-17"},{"lineNumber":276,"author":{"gitId":"UdhayaShan1"},"content":"                           Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FAMILY));","lastModifiedDate":"2024-03-17"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":281,"author":{"gitId":"UdhayaShan1"},"content":"        String expectedCommandFormatMessage \u003d AddCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":283,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":284,"author":{"gitId":"UdhayaShan1"},"content":"                           VALID_NAME_BOB_FIRST_LETTER_CAPS + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"4llysa"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-15"},{"lineNumber":286,"author":{"gitId":"UdhayaShan1"},"content":"                           MESSAGE_MISSING_PREFIXES + \"n/NAME\\n\" + expectedCommandFormatMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":289,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":290,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + VALID_PHONE_BOB + INCOME_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":291,"author":{"gitId":"4llysa"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-15"},{"lineNumber":292,"author":{"gitId":"UdhayaShan1"},"content":"                           MESSAGE_MISSING_PREFIXES + \"p/PHONE\\n\" + expectedCommandFormatMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":294,"author":{"gitId":"UdhayaShan1"},"content":"        // missing income prefix","lastModifiedDate":"2024-03-17"},{"lineNumber":295,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-17"},{"lineNumber":296,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + VALID_INCOME_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":297,"author":{"gitId":"UdhayaShan1"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-17"},{"lineNumber":298,"author":{"gitId":"UdhayaShan1"},"content":"                           MESSAGE_MISSING_PREFIXES + \"i/INCOME\\n\" + expectedCommandFormatMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":301,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":302,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":303,"author":{"gitId":"4llysa"},"content":"                                   + VALID_EMAIL_BOB + ADDRESS_DESC_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-15"},{"lineNumber":304,"author":{"gitId":"UdhayaShan1"},"content":"                           MESSAGE_MISSING_PREFIXES + \"e/EMAIL\\n\" + expectedCommandFormatMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":307,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":308,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":309,"author":{"gitId":"4llysa"},"content":"                                   + EMAIL_DESC_BOB + VALID_ADDRESS_BOB + FAMILY_DESC_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-15"},{"lineNumber":310,"author":{"gitId":"UdhayaShan1"},"content":"                           MESSAGE_MISSING_PREFIXES + \"a/ADDRESS\\n\" + expectedCommandFormatMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":312,"author":{"gitId":"UdhayaShan1"},"content":"        // missing family prefix","lastModifiedDate":"2024-03-17"},{"lineNumber":313,"author":{"gitId":"4llysa"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-15"},{"lineNumber":314,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":315,"author":{"gitId":"UdhayaShan1"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + VALID_FAMILY_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-17"},{"lineNumber":316,"author":{"gitId":"UdhayaShan1"},"content":"                           MESSAGE_MISSING_PREFIXES + \"f/FAMILY\\n\" + expectedCommandFormatMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":317,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":318,"author":{"gitId":"4llysa"},"content":"        // missing tag prefix","lastModifiedDate":"2024-03-15"},{"lineNumber":319,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":320,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"UdhayaShan1"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + FAMILY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"UdhayaShan1"},"content":"                           MESSAGE_MISSING_PREFIXES + \"t/TAG\\n\" + expectedCommandFormatMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":323,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":324,"author":{"gitId":"UdhayaShan1"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-17"},{"lineNumber":325,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-17"},{"lineNumber":326,"author":{"gitId":"UdhayaShan1"},"content":"                           VALID_NAME_BOB_FIRST_LETTER_CAPS + VALID_PHONE_BOB + INCOME_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":327,"author":{"gitId":"UdhayaShan1"},"content":"                                   + VALID_EMAIL_BOB + VALID_ADDRESS_BOB + FAMILY_DESC_BOB + VALID_TAG_BOB,","lastModifiedDate":"2024-03-17"},{"lineNumber":328,"author":{"gitId":"UdhayaShan1"},"content":"                           MESSAGE_MISSING_PREFIXES","lastModifiedDate":"2024-03-29"},{"lineNumber":329,"author":{"gitId":"UdhayaShan1"},"content":"                                   + \"n/NAME, a/ADDRESS, p/PHONE, e/EMAIL, t/TAG\\n\" + expectedCommandFormatMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":332,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":333,"author":{"gitId":"UdhayaShan1"},"content":"    public void parse_optionalFieldMissing_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":334,"author":{"gitId":"UdhayaShan1"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withRemark(\"\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":335,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB","lastModifiedDate":"2024-03-20"},{"lineNumber":336,"author":{"gitId":"UdhayaShan1"},"content":"                + PHONE_DESC_BOB","lastModifiedDate":"2024-03-20"},{"lineNumber":337,"author":{"gitId":"UdhayaShan1"},"content":"                + INCOME_DESC_BOB","lastModifiedDate":"2024-03-20"},{"lineNumber":338,"author":{"gitId":"UdhayaShan1"},"content":"                + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-20"},{"lineNumber":339,"author":{"gitId":"UdhayaShan1"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-20"},{"lineNumber":340,"author":{"gitId":"UdhayaShan1"},"content":"                + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-20"},{"lineNumber":341,"author":{"gitId":"UdhayaShan1"},"content":"                + TAG_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":342,"author":{"gitId":"UdhayaShan1"},"content":"                + BIRTHDAY_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":343,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":344,"author":{"gitId":"UdhayaShan1"},"content":"        expectedPerson \u003d new PersonBuilder(AMY_NAME_CAPS).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":345,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY_CAPS","lastModifiedDate":"2024-03-29"},{"lineNumber":346,"author":{"gitId":"UdhayaShan1"},"content":"                + PHONE_DESC_AMY","lastModifiedDate":"2024-03-20"},{"lineNumber":347,"author":{"gitId":"UdhayaShan1"},"content":"                + INCOME_DESC_AMY","lastModifiedDate":"2024-03-20"},{"lineNumber":348,"author":{"gitId":"UdhayaShan1"},"content":"                + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-20"},{"lineNumber":349,"author":{"gitId":"UdhayaShan1"},"content":"                + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-20"},{"lineNumber":350,"author":{"gitId":"UdhayaShan1"},"content":"                + FAMILY_DESC_AMY","lastModifiedDate":"2024-03-20"},{"lineNumber":351,"author":{"gitId":"UdhayaShan1"},"content":"                + TAG_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":352,"author":{"gitId":"UdhayaShan1"},"content":"                + BIRTHDAY_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":353,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":354,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":356,"author":{"gitId":"UdhayaShan1"},"content":"    public void parse_nonCapitalizedName_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":357,"author":{"gitId":"UdhayaShan1"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY_NAME_CAPS).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":358,"author":{"gitId":"UdhayaShan1"},"content":"        String validExpectedNonCapitalizedAmyString \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":359,"author":{"gitId":"UdhayaShan1"},"content":"                NAME_DESC_AMY_NON_CAPS + PHONE_DESC_AMY + INCOME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":360,"author":{"gitId":"UdhayaShan1"},"content":"                + ADDRESS_DESC_AMY + FAMILY_DESC_AMY + TAG_DESC_AMY + BIRTHDAY_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":361,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser, validExpectedNonCapitalizedAmyString, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":362,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":363,"author":{"gitId":"UdhayaShan1"},"content":"        String validExpectedVaryingCapitalizedAmyString \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":364,"author":{"gitId":"UdhayaShan1"},"content":"                NAME_DESC_AMY_VARYING_CAPS + PHONE_DESC_AMY + INCOME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":365,"author":{"gitId":"UdhayaShan1"},"content":"                + ADDRESS_DESC_AMY + FAMILY_DESC_AMY + TAG_DESC_AMY + BIRTHDAY_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser, validExpectedVaryingCapitalizedAmyString, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":367,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":368,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":369,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":370,"author":{"gitId":"UdhayaShan1"},"content":"    public void parse_invalidSingleValue_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":371,"author":{"gitId":"UdhayaShan1"},"content":"        String expectedFailureMessage \u003d \"Error parsing %s: \";","lastModifiedDate":"2024-03-29"},{"lineNumber":372,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":374,"author":{"gitId":"UdhayaShan1"},"content":"        String expectedFailureMessageFormatted \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":375,"author":{"gitId":"UdhayaShan1"},"content":"                String.format(expectedFailureMessage, \"name\") + Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":376,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":377,"author":{"gitId":"UdhayaShan1"},"content":"                           INVALID_NAME_DESC","lastModifiedDate":"2024-03-29"},{"lineNumber":378,"author":{"gitId":"UdhayaShan1"},"content":"                                   + PHONE_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":379,"author":{"gitId":"UdhayaShan1"},"content":"                                   + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":380,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":381,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + BIRTHDAY_DESC_BOB, expectedFailureMessageFormatted);","lastModifiedDate":"2024-03-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":384,"author":{"gitId":"UdhayaShan1"},"content":"        expectedFailureMessageFormatted \u003d String.format(expectedFailureMessage, \"phone\") + Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":385,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":386,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2024-03-29"},{"lineNumber":387,"author":{"gitId":"UdhayaShan1"},"content":"                                   + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":389,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + BIRTHDAY_DESC_BOB, expectedFailureMessageFormatted);","lastModifiedDate":"2024-03-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":391,"author":{"gitId":"UdhayaShan1"},"content":"        // invalid income","lastModifiedDate":"2024-03-17"},{"lineNumber":392,"author":{"gitId":"UdhayaShan1"},"content":"        expectedFailureMessageFormatted \u003d String.format(expectedFailureMessage, \"income\") + Income.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":393,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-17"},{"lineNumber":394,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_INCOME_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":395,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":396,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + BIRTHDAY_DESC_BOB, expectedFailureMessageFormatted);","lastModifiedDate":"2024-03-29"},{"lineNumber":397,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":398,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":400,"author":{"gitId":"UdhayaShan1"},"content":"        expectedFailureMessageFormatted \u003d String.format(expectedFailureMessage, \"email\") + Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":401,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":402,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":403,"author":{"gitId":"UdhayaShan1"},"content":"                                   + INCOME_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":404,"author":{"gitId":"UdhayaShan1"},"content":"                                   + CommandTestUtil.TAG_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":405,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + BIRTHDAY_DESC_BOB, expectedFailureMessageFormatted);","lastModifiedDate":"2024-03-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":408,"author":{"gitId":"UdhayaShan1"},"content":"        expectedFailureMessageFormatted \u003d String.format(expectedFailureMessage, \"address\")","lastModifiedDate":"2024-03-29"},{"lineNumber":409,"author":{"gitId":"UdhayaShan1"},"content":"                + Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":410,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":411,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":412,"author":{"gitId":"UdhayaShan1"},"content":"                                   + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":413,"author":{"gitId":"UdhayaShan1"},"content":"                                   + CommandTestUtil.TAG_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":414,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":415,"author":{"gitId":"UdhayaShan1"},"content":"                           expectedFailureMessageFormatted);","lastModifiedDate":"2024-03-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":417,"author":{"gitId":"UdhayaShan1"},"content":"        // invalid family","lastModifiedDate":"2024-03-17"},{"lineNumber":418,"author":{"gitId":"UdhayaShan1"},"content":"        expectedFailureMessageFormatted \u003d String.format(expectedFailureMessage, \"family\") + Family.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":419,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-17"},{"lineNumber":420,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":421,"author":{"gitId":"UdhayaShan1"},"content":"                                   + ADDRESS_DESC_BOB + INVALID_FAMILY_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":422,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + BIRTHDAY_DESC_BOB, expectedFailureMessageFormatted);","lastModifiedDate":"2024-03-29"},{"lineNumber":423,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":425,"author":{"gitId":"UdhayaShan1"},"content":"        expectedFailureMessageFormatted \u003d String.format(expectedFailureMessage, \"tags\") + Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":426,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":427,"author":{"gitId":"UdhayaShan1"},"content":"                           NAME_DESC_BOB + PHONE_DESC_BOB + INCOME_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":428,"author":{"gitId":"UdhayaShan1"},"content":"                                   + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":429,"author":{"gitId":"UdhayaShan1"},"content":"                                   + INVALID_TAG_DESC + TAG_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":430,"author":{"gitId":"UdhayaShan1"},"content":"                                   + BIRTHDAY_DESC_BOB, expectedFailureMessageFormatted);","lastModifiedDate":"2024-03-29"},{"lineNumber":431,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":432,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":433,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":434,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":435,"author":{"gitId":"UdhayaShan1"},"content":"    public void parse_invalidMultipleValue_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":436,"author":{"gitId":"UdhayaShan1"},"content":"        String expectedFailureMessage \u003d \"Error parsing %s: \";","lastModifiedDate":"2024-03-29"},{"lineNumber":437,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":438,"author":{"gitId":"UdhayaShan1"},"content":"        // two invalid values both failures reported","lastModifiedDate":"2024-03-29"},{"lineNumber":439,"author":{"gitId":"UdhayaShan1"},"content":"        String expectedFailureMessageFormatted \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":440,"author":{"gitId":"UdhayaShan1"},"content":"                String.format(expectedFailureMessage, \"name\")","lastModifiedDate":"2024-03-29"},{"lineNumber":441,"author":{"gitId":"UdhayaShan1"},"content":"                        + Name.MESSAGE_CONSTRAINTS","lastModifiedDate":"2024-03-29"},{"lineNumber":442,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":443,"author":{"gitId":"UdhayaShan1"},"content":"                        + String.format(expectedFailureMessage, \"address\")","lastModifiedDate":"2024-03-29"},{"lineNumber":444,"author":{"gitId":"UdhayaShan1"},"content":"                        + Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":446,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":447,"author":{"gitId":"UdhayaShan1"},"content":"                           INVALID_NAME_DESC + PHONE_DESC_BOB + INCOME_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":448,"author":{"gitId":"UdhayaShan1"},"content":"                                   + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-29"},{"lineNumber":449,"author":{"gitId":"UdhayaShan1"},"content":"                                   + FAMILY_DESC_BOB + TAG_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":450,"author":{"gitId":"UdhayaShan1"},"content":"                           expectedFailureMessageFormatted);","lastModifiedDate":"2024-03-29"},{"lineNumber":451,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":452,"author":{"gitId":"UdhayaShan1"},"content":"        // three invalid values both failures reported","lastModifiedDate":"2024-03-29"},{"lineNumber":453,"author":{"gitId":"UdhayaShan1"},"content":"        expectedFailureMessageFormatted \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":454,"author":{"gitId":"UdhayaShan1"},"content":"                String.format(expectedFailureMessage, \"name\")","lastModifiedDate":"2024-03-29"},{"lineNumber":455,"author":{"gitId":"UdhayaShan1"},"content":"                        + Name.MESSAGE_CONSTRAINTS","lastModifiedDate":"2024-03-29"},{"lineNumber":456,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":457,"author":{"gitId":"UdhayaShan1"},"content":"                        + String.format(expectedFailureMessage, \"phone\")","lastModifiedDate":"2024-03-29"},{"lineNumber":458,"author":{"gitId":"UdhayaShan1"},"content":"                        + Phone.MESSAGE_CONSTRAINTS","lastModifiedDate":"2024-03-29"},{"lineNumber":459,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":460,"author":{"gitId":"UdhayaShan1"},"content":"                        + String.format(expectedFailureMessage, \"address\")","lastModifiedDate":"2024-03-29"},{"lineNumber":461,"author":{"gitId":"UdhayaShan1"},"content":"                        + Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":463,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-11"},{"lineNumber":464,"author":{"gitId":"UdhayaShan1"},"content":"                           INVALID_NAME_DESC + INVALID_PHONE_DESC + INCOME_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":465,"author":{"gitId":"UdhayaShan1"},"content":"                                   + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":466,"author":{"gitId":"UdhayaShan1"},"content":"                                   + TAG_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2024-03-29"},{"lineNumber":467,"author":{"gitId":"UdhayaShan1"},"content":"                           expectedFailureMessageFormatted);","lastModifiedDate":"2024-03-29"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":469,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"4llysa":10,"UdhayaShan1":354,"-":104,"appleraincoat":1}},{"path":"src/test/java/seedu/realodex/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"UdhayaShan1":1,"-":149}},{"path":"src/test/java/seedu/realodex/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"UdhayaShan1":3,"-":36}},{"path":"src/test/java/seedu/realodex/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"wapisai"},"content":"import static seedu.realodex.logic.commands.DeleteCommand.MESSAGE_NO_FIELDS_PROVIDED;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"wapisai"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"wapisai"},"content":"import static seedu.realodex.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"wapisai"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    public void parse_validIndex_returnsDeleteCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"wapisai"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"wapisai"},"content":"        assertParseFailure(parser, \"0\", String.format(MESSAGE_INVALID_INDEX));","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    public void parse_validName_returnsDeleteCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser, \" n/James\", new DeleteCommand(new Name(\"James\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    public void parse_invalidName_throwParseException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(ParseException.class, Name.MESSAGE_CONSTRAINTS, () -\u003e parser.parse(\" n/peter*\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(ParseException.class, Name.MESSAGE_CONSTRAINTS, () -\u003e parser.parse(\" n/ \"));","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(ParseException.class, Name.MESSAGE_CONSTRAINTS, () -\u003e parser.parse(\" n/^\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"wapisai"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_INDEX, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":55,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"wapisai"},"content":"    public void parse_nameAndIndex_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"wapisai"},"content":"        assertParseFailure(parser, \"1 n/James\", String.format(DeleteCommand.MESSAGE_INDEX_AND_NAME_PROVIDED));","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"wapisai"},"content":"    public void parse_noFields_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"wapisai"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_NO_FIELDS_PROVIDED));","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"wapisai"},"content":"    public void parse_multipleName_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"wapisai"},"content":"        assertParseFailure(parser, \" n/James n/John\", Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"wapisai"},"content":"        assertParseFailure(parser, \" n/James n/John n/jj\", Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"UdhayaShan1":21,"-":24,"wapisai":28}},{"path":"src/test/java/seedu/realodex/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.FAMILY_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.FAMILY_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INCOME_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_FAMILY_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_INCOME_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.NAME_DESC_AMY_CAPS;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.TAG_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.TAG_DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_FAMILY_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_FAMILY_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_INCOME_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_NAME_AMY_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_FAMILY;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.CommandTestUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, VALID_NAME_AMY_FIRST_LETTER_CAPS, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY_CAPS, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY_CAPS, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"wapisai"},"content":"        assertParseFailure(parser, \"1\" + INVALID_INCOME_DESC, Income.MESSAGE_CONSTRAINTS); // invalid income","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"wapisai"},"content":"        assertParseFailure(parser, \"1\" + INVALID_FAMILY_DESC, Family.MESSAGE_CONSTRAINTS); // invalid family","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"4llysa"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_BOB","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"4llysa"},"content":"                + CommandTestUtil.TAG_DESC_BOB + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"4llysa"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_BOB + TAG_EMPTY","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"4llysa"},"content":"                + CommandTestUtil.TAG_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"4llysa"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_BOB","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"4llysa"},"content":"                + CommandTestUtil.TAG_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"UdhayaShan1"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"                + PHONE_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"                + CommandTestUtil.TAG_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"UdhayaShan1"},"content":"                + INCOME_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"UdhayaShan1"},"content":"                + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"UdhayaShan1"},"content":"                + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"                + NAME_DESC_AMY_CAPS","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"UdhayaShan1"},"content":"                + FAMILY_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"UdhayaShan1"},"content":"                + TAG_DESC_BOB","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"UdhayaShan1"},"content":"                + REMARK_DESC_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"UdhayaShan1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"UdhayaShan1"},"content":"                .withName(VALID_NAME_AMY_FIRST_LETTER_CAPS)","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"UdhayaShan1"},"content":"                .withIncome(VALID_INCOME_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"UdhayaShan1"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"UdhayaShan1"},"content":"                .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"UdhayaShan1"},"content":"                .withFamily(VALID_FAMILY_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"UdhayaShan1"},"content":"                .withTags(VALID_TAG_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"UdhayaShan1"},"content":"                .withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"UdhayaShan1"},"content":"                .build();","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"UdhayaShan1"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY_CAPS;","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"UdhayaShan1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"UdhayaShan1"},"content":"                VALID_NAME_AMY_FIRST_LETTER_CAPS).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"UdhayaShan1"},"content":"        // income","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"UdhayaShan1"},"content":"        userInput \u003d targetIndex.getOneBased() + INCOME_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"UdhayaShan1"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withIncome(VALID_INCOME_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"UdhayaShan1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"UdhayaShan1"},"content":"        // family","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"UdhayaShan1"},"content":"        userInput \u003d targetIndex.getOneBased() + FAMILY_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"UdhayaShan1"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withFamily(VALID_FAMILY_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"UdhayaShan1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"UdhayaShan1"},"content":"        // 1 tag","lastModifiedDate":"2024-03-17"},{"lineNumber":209,"author":{"gitId":"4llysa"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"4llysa"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":213,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"wapisai"},"content":"        // remark","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"wapisai"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"wapisai"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"UdhayaShan1"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"UdhayaShan1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"UdhayaShan1"},"content":"        // 2 tags","lastModifiedDate":"2024-03-17"},{"lineNumber":221,"author":{"gitId":"UdhayaShan1"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_BOB + TAG_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":222,"author":{"gitId":"UdhayaShan1"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_BOB, VALID_TAG_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":223,"author":{"gitId":"wapisai"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"wapisai"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":243,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"wapisai"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-19"},{"lineNumber":245,"author":{"gitId":"UdhayaShan1"},"content":"        userInput \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":246,"author":{"gitId":"UdhayaShan1"},"content":"                targetIndex.getOneBased()","lastModifiedDate":"2024-03-17"},{"lineNumber":247,"author":{"gitId":"UdhayaShan1"},"content":"                        + PHONE_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":248,"author":{"gitId":"UdhayaShan1"},"content":"                        + INCOME_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":249,"author":{"gitId":"UdhayaShan1"},"content":"                        + INCOME_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":250,"author":{"gitId":"UdhayaShan1"},"content":"                        + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":251,"author":{"gitId":"UdhayaShan1"},"content":"                        + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":252,"author":{"gitId":"UdhayaShan1"},"content":"                        + FAMILY_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":253,"author":{"gitId":"UdhayaShan1"},"content":"                        + FAMILY_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":254,"author":{"gitId":"UdhayaShan1"},"content":"                        + TAG_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":255,"author":{"gitId":"UdhayaShan1"},"content":"                        + PHONE_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":256,"author":{"gitId":"UdhayaShan1"},"content":"                        + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":257,"author":{"gitId":"UdhayaShan1"},"content":"                        + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":258,"author":{"gitId":"UdhayaShan1"},"content":"                        + TAG_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":259,"author":{"gitId":"UdhayaShan1"},"content":"                        + PHONE_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":260,"author":{"gitId":"UdhayaShan1"},"content":"                        + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":261,"author":{"gitId":"UdhayaShan1"},"content":"                        + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":262,"author":{"gitId":"UdhayaShan1"},"content":"                        + REMARK_DESC_AMY","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"UdhayaShan1"},"content":"                        + REMARK_DESC_BOB","lastModifiedDate":"2024-03-20"},{"lineNumber":264,"author":{"gitId":"UdhayaShan1"},"content":"                        + CommandTestUtil.TAG_DESC_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":267,"author":{"gitId":"UdhayaShan1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":268,"author":{"gitId":"UdhayaShan1"},"content":"                                                             PREFIX_INCOME, PREFIX_FAMILY, PREFIX_REMARK));","lastModifiedDate":"2024-03-20"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":271,"author":{"gitId":"UdhayaShan1"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2024-03-17"},{"lineNumber":272,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_PHONE_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":273,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_INCOME_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":274,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_FAMILY_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":275,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":276,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":277,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_PHONE_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":278,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":279,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":280,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_INCOME_DESC","lastModifiedDate":"2024-03-17"},{"lineNumber":281,"author":{"gitId":"UdhayaShan1"},"content":"                + INVALID_FAMILY_DESC;","lastModifiedDate":"2024-03-17"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":284,"author":{"gitId":"UdhayaShan1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":285,"author":{"gitId":"UdhayaShan1"},"content":"                                                             PREFIX_INCOME, PREFIX_FAMILY));","lastModifiedDate":"2024-03-17"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":295,"author":{"gitId":"wapisai"},"content":"        assertParseFailure(parser, userInput, String.format(Tag.MESSAGE_CONSTRAINTS, targetIndex.getOneBased()));","lastModifiedDate":"2024-03-19"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"4llysa":9,"UdhayaShan1":139,"-":135,"appleraincoat":2,"wapisai":12}},{"path":"src/test/java/seedu/realodex/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.NameContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.RemarkContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    void parse_validArgsWithName_returnsFilterCommand() {","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"        String userInput \u003d \" n/Alice\";","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(new NameContainsKeyphrasePredicate(\"Alice\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"    void parse_validArgsWithRemark_returnsFilterCommand() {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"        String userInput \u003d \" r/Loves cats\";","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(new RemarkContainsKeyphrasePredicate(\"Loves cats\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        String userInput \u003d \" invalidArg\";","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"    void parse_invalidPrefix_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"        String userInput \u003d \" p/999\";","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"    void parse_multiplePrefixes_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"        String userInput \u003d \" n/Alice r/Loves cats\";","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_FILTER_CONFLICT));","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"    void parse_multiplePrefixesWithEmptyRemark_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"        String userInput \u003d \" n/Alice r/\";","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_FILTER_CONFLICT));","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"    void parse_multiplePrefixesWithEmptyName_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"        String userInput \u003d \" n/ r/Loves cats\";","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_FILTER_CONFLICT));","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"    void parse_duplicatePrefixes_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"        String userInput \u003d \" n/Alice n/Bob\";","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"    void parse_emptyPreamble_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"        String userInput \u003d \" yapyap n/Alice\";","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jyztintan":66,"UdhayaShan1":5,"-":15}},{"path":"src/test/java/seedu/realodex/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"appleraincoat"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"appleraincoat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"appleraincoat"},"content":"import seedu.realodex.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"appleraincoat"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"appleraincoat"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"appleraincoat"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"    public void parse_validArgs_returnsHelpCommand() throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expectedHelpCommand \u003d new HelpCommand(\"\");","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"appleraincoat"},"content":"        assertParseSuccess(parser, \"\", expectedHelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"appleraincoat"},"content":"        //test for spaces in input","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expectedSpaceHelpCommand \u003d new HelpCommand(\"\");","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"appleraincoat"},"content":"        assertParseSuccess(parser, \"   \", expectedSpaceHelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expectedAddHelpCommand \u003d new HelpCommand(\"add\");","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"appleraincoat"},"content":"        assertParseSuccess(parser, \"add\", expectedAddHelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expectedClearHelpCommand \u003d new HelpCommand(\"clear\");","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"appleraincoat"},"content":"        assertParseSuccess(parser, \"clear\", expectedClearHelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expectedDeleteHelpCommand \u003d new HelpCommand(\"delete\");","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"appleraincoat"},"content":"        assertParseSuccess(parser, \"delete\", expectedDeleteHelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expectedEditHelpCommand \u003d new HelpCommand(\"edit\");","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"appleraincoat"},"content":"        assertParseSuccess(parser, \"edit\", expectedEditHelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expectedFilterHelpCommand \u003d new HelpCommand(\"filter\");","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"appleraincoat"},"content":"        assertParseSuccess(parser, \"filter\", expectedFilterHelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expectedListHelpCommand \u003d new HelpCommand(\"list\");","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"appleraincoat"},"content":"        assertParseSuccess(parser, \"list\", expectedListHelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"appleraincoat"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"appleraincoat":40}},{"path":"src/test/java/seedu/realodex/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.ParserUtil.parseAddressReturnStored;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.ParserUtil.parseEmailReturnStored;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.ParserUtil.parseFamilyReturnStored;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.ParserUtil.parseIncomeReturnStored;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.ParserUtil.parseNameReturnStored;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.ParserUtil.parsePhoneReturnStored;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String INVALID_NAME_CAPS \u003d \"D@nzel Washington Al Pacino\";","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String INVALID_NAME_NON_CAPS \u003d \"d@nzel washington Al Pacino\";","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String INVALID_INCOME \u003d \"-1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String INVALID_FAMILY \u003d \"0\";","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"4llysa"},"content":"    private static final String INVALID_TAG_1 \u003d \"#buyer\";","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"4llysa"},"content":"    private static final String INVALID_TAG_2 \u003d \"friend\";","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_NAME_CAPS \u003d \"Denzel Washington Al Pacino\";","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_NAME_NON_CAPS_ALL \u003d \"denzel washington al pacino\";","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_NAME_NON_CAPS_FIRST_NAME \u003d \"denzel Washington Al Pacino\";","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_NAME_VARYING_CAPS \u003d \"dEnzeL waSHINgToN aL PaCINo\";","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_INCOME \u003d \"10000\";","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_FAMILY \u003d \"4\";","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"4llysa"},"content":"    private static final String VALID_TAG_1 \u003d \"buyer\";","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"4llysa"},"content":"    private static final String VALID_TAG_2 \u003d \"seller\";","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_REMARK_ONE \u003d \"I am Denzel Washington\";","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_REMARK_TWO \u003d \"I am Al Pacino\";","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseIndex_outOfRangeInputButPositive_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseIndex_outOfRangeInputButNegative_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"                -\u003e ParserUtil.parseIndex(Long.toString(-1)));","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"    public void capitalizeWords_nonCapitalizedFirstName_returnsNameCapitalizedName() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"        Name expectedName \u003d new Name(VALID_NAME_NON_CAPS_FIRST_NAME);","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(VALID_NAME_CAPS, ParserUtil.capitalizeWords(VALID_NAME_NON_CAPS_FIRST_NAME));","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"    public void capitalizeWords_nonCapitalizedAllName_returnsNameCapitalizedName() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"        Name expectedName \u003d new Name(VALID_NAME_NON_CAPS_ALL);","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(VALID_NAME_CAPS, ParserUtil.capitalizeWords(VALID_NAME_NON_CAPS_ALL));","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"    public void capitalizeWords_varyingCapitalizedName_returnsNameCapitalizedName() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"        Name expectedName \u003d new Name(VALID_NAME_VARYING_CAPS);","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(VALID_NAME_CAPS, ParserUtil.capitalizeWords(VALID_NAME_NON_CAPS_ALL));","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"    public void capitalizeWords_nullName_returnsCapitalizedAllName() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"                -\u003e ParserUtil.capitalizeWords(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"    public void capitalizeWords_emptyName_returnsCapitalizedAllName() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"\", ParserUtil.capitalizeWords(\"\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseName_invalidValueOfCapitalizedName_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME_CAPS));","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseName_invalidValueOfNonCapitalizedName_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME_NON_CAPS));","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":133,"author":{"gitId":"UdhayaShan1"},"content":"        Name expectedName \u003d new Name(VALID_NAME_CAPS);","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME_CAPS));","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":139,"author":{"gitId":"UdhayaShan1"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME_CAPS + WHITESPACE;","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"UdhayaShan1"},"content":"        Name expectedName \u003d new Name(VALID_NAME_CAPS);","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseName_nonCapitalizedInAllPartsOfName_returnsCapitalizedName() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"UdhayaShan1"},"content":"        String nonCapitalizedInBothNames \u003d VALID_NAME_NON_CAPS_ALL;","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"UdhayaShan1"},"content":"        Name expectedName \u003d new Name(ParserUtil.capitalizeWords(nonCapitalizedInBothNames));","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nonCapitalizedInBothNames));","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseName_nonCapitalizedInFirstPartOfName_returnsCapitalizedName() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"UdhayaShan1"},"content":"        String nonCapitalizedInFirstNames \u003d VALID_NAME_NON_CAPS_FIRST_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"UdhayaShan1"},"content":"        Name expectedName \u003d new Name(ParserUtil.capitalizeWords(nonCapitalizedInFirstNames));","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nonCapitalizedInFirstNames));","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseName_validName_returnsParserUtilName() {","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"UdhayaShan1"},"content":"        String validName \u003d VALID_NAME_CAPS;","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cName\u003e nameStored \u003d parseNameReturnStored(validName);","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(nameStored.returnStoredResult(), new Name(validName));","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(nameStored.returnExceptionMessage(), \"\");","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseName_invalidName_returnsParserUtilName() {","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cName\u003e nameStored \u003d parseNameReturnStored(INVALID_NAME_CAPS);","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(nameStored.returnStoredResult(), new Name());","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(nameStored.returnExceptionMessage(), Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"UdhayaShan1"},"content":"    public void parsePhone_validPhone_returnsParserUtilPhone() {","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"UdhayaShan1"},"content":"        String validPhone \u003d VALID_INCOME;","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cPhone\u003e phoneStored \u003d parsePhoneReturnStored(validPhone);","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(phoneStored.returnStoredResult(), new Phone(validPhone));","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(phoneStored.returnExceptionMessage(), \"\");","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"UdhayaShan1"},"content":"    public void parsePhone_invalidPhone_returnsParserUtilPhone() {","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cPhone\u003e phoneStored \u003d parsePhoneReturnStored(INVALID_PHONE);","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(phoneStored.returnStoredResult(), new Phone());","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(phoneStored.returnExceptionMessage(), Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":212,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseIncome_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":213,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIncome((String) null));","lastModifiedDate":"2024-03-17"},{"lineNumber":214,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseIncome_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"4llysa"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIncome(INVALID_INCOME));","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":220,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":221,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":222,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseIncome_validValueWithoutWhitespace_returnsIncome() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":223,"author":{"gitId":"UdhayaShan1"},"content":"        Income expectedIncome \u003d new Income(VALID_INCOME);","lastModifiedDate":"2024-03-17"},{"lineNumber":224,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedIncome, ParserUtil.parseIncome(VALID_INCOME));","lastModifiedDate":"2024-03-17"},{"lineNumber":225,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":226,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":227,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":228,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseIncome_validValueWithWhitespace_returnsTrimmedIncome() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":229,"author":{"gitId":"UdhayaShan1"},"content":"        String incomeWithWhitespace \u003d WHITESPACE + VALID_INCOME + WHITESPACE;","lastModifiedDate":"2024-03-17"},{"lineNumber":230,"author":{"gitId":"UdhayaShan1"},"content":"        Income expectedIncome \u003d new Income(VALID_INCOME);","lastModifiedDate":"2024-03-17"},{"lineNumber":231,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedIncome, ParserUtil.parseIncome(incomeWithWhitespace));","lastModifiedDate":"2024-03-17"},{"lineNumber":232,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseIncome_validIncome_returnsParserUtilIncome() {","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"UdhayaShan1"},"content":"        String validIncome \u003d VALID_INCOME;","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cIncome\u003e incomeStored \u003d parseIncomeReturnStored(validIncome);","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(incomeStored.returnStoredResult(), new Income(validIncome));","lastModifiedDate":"2024-03-27"},{"lineNumber":238,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(incomeStored.returnExceptionMessage(), \"\");","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseIncome_invalidIncome_returnsParserUtilIncome() {","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cIncome\u003e incomeStored \u003d parseIncomeReturnStored(INVALID_INCOME);","lastModifiedDate":"2024-03-27"},{"lineNumber":244,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(incomeStored.returnStoredResult(), new Income());","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(incomeStored.returnExceptionMessage(), Income.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":247,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":270,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":271,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseAddress_validPhone_returnsParserUtilPhone() {","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"UdhayaShan1"},"content":"        String validAddress \u003d VALID_ADDRESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":273,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cAddress\u003e addressStored \u003d parseAddressReturnStored(validAddress);","lastModifiedDate":"2024-03-27"},{"lineNumber":274,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(addressStored.returnStoredResult(), new Address(validAddress));","lastModifiedDate":"2024-03-27"},{"lineNumber":275,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(addressStored.returnExceptionMessage(), \"\");","lastModifiedDate":"2024-03-27"},{"lineNumber":276,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":277,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseAddress_invalidPhone_returnsParserUtilPhone() {","lastModifiedDate":"2024-03-27"},{"lineNumber":280,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cAddress\u003e addressStored \u003d parseAddressReturnStored(INVALID_ADDRESS);","lastModifiedDate":"2024-03-27"},{"lineNumber":281,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(addressStored.returnStoredResult(), new Address());","lastModifiedDate":"2024-03-27"},{"lineNumber":282,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(addressStored.returnExceptionMessage(), Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":283,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":284,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":285,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":286,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":287,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseFamily_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":288,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFamily((String) null));","lastModifiedDate":"2024-03-17"},{"lineNumber":289,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":290,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":291,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":292,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseFamily_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":293,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFamily(INVALID_FAMILY));","lastModifiedDate":"2024-03-17"},{"lineNumber":294,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":295,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":296,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":297,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseFamily_validValueWithoutWhitespace_returnsFamily() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":298,"author":{"gitId":"UdhayaShan1"},"content":"        Family expectedFamily \u003d new Family(VALID_FAMILY);","lastModifiedDate":"2024-03-17"},{"lineNumber":299,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedFamily, ParserUtil.parseFamily(VALID_FAMILY));","lastModifiedDate":"2024-03-17"},{"lineNumber":300,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":301,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":302,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":303,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseFamily_validValueWithWhitespace_returnsTrimmedFamily() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":304,"author":{"gitId":"UdhayaShan1"},"content":"        String familyWithWhitespace \u003d WHITESPACE + VALID_FAMILY + WHITESPACE;","lastModifiedDate":"2024-03-17"},{"lineNumber":305,"author":{"gitId":"UdhayaShan1"},"content":"        Family expectedFamily \u003d new Family(VALID_FAMILY);","lastModifiedDate":"2024-03-17"},{"lineNumber":306,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedFamily, ParserUtil.parseFamily(familyWithWhitespace));","lastModifiedDate":"2024-03-17"},{"lineNumber":307,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":309,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":310,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseFamily_validFamily_returnsParserUtilFamily() {","lastModifiedDate":"2024-03-27"},{"lineNumber":311,"author":{"gitId":"UdhayaShan1"},"content":"        String validFamily \u003d VALID_FAMILY;","lastModifiedDate":"2024-03-27"},{"lineNumber":312,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cFamily\u003e familyStored \u003d parseFamilyReturnStored(validFamily);","lastModifiedDate":"2024-03-27"},{"lineNumber":313,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(familyStored.returnStoredResult(), new Family(validFamily));","lastModifiedDate":"2024-03-27"},{"lineNumber":314,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(familyStored.returnExceptionMessage(), \"\");","lastModifiedDate":"2024-03-27"},{"lineNumber":315,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":316,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":317,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":318,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseFamily_invalidFamily_returnsParserUtilFamily() {","lastModifiedDate":"2024-03-27"},{"lineNumber":319,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cFamily\u003e familyStored \u003d parseFamilyReturnStored(INVALID_FAMILY);","lastModifiedDate":"2024-03-27"},{"lineNumber":320,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(familyStored.returnStoredResult(), new Family());","lastModifiedDate":"2024-03-27"},{"lineNumber":321,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(familyStored.returnExceptionMessage(), Family.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":322,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":323,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":347,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":348,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseEmail_validEmail_returnsParserUtilEmail() {","lastModifiedDate":"2024-03-27"},{"lineNumber":349,"author":{"gitId":"UdhayaShan1"},"content":"        String validEmail \u003d VALID_EMAIL;","lastModifiedDate":"2024-03-27"},{"lineNumber":350,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cEmail\u003e emailStored \u003d parseEmailReturnStored(validEmail);","lastModifiedDate":"2024-03-27"},{"lineNumber":351,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(emailStored.returnStoredResult(), new Email(validEmail));","lastModifiedDate":"2024-03-27"},{"lineNumber":352,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(emailStored.returnExceptionMessage(), \"\");","lastModifiedDate":"2024-03-27"},{"lineNumber":353,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":354,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":355,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":356,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseEmail_invalidEmail_returnsParserUtilEmail() {","lastModifiedDate":"2024-03-27"},{"lineNumber":357,"author":{"gitId":"UdhayaShan1"},"content":"        ParserUtilResult\u003cEmail\u003e emailStored \u003d parseEmailReturnStored(INVALID_EMAIL);","lastModifiedDate":"2024-03-27"},{"lineNumber":358,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(emailStored.returnStoredResult(), new Email());","lastModifiedDate":"2024-03-27"},{"lineNumber":359,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(emailStored.returnExceptionMessage(), Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":360,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":361,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":369,"author":{"gitId":"4llysa"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG_1));","lastModifiedDate":"2024-03-19"},{"lineNumber":370,"author":{"gitId":"4llysa"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG_2));","lastModifiedDate":"2024-03-19"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":393,"author":{"gitId":"4llysa"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG_1)));","lastModifiedDate":"2024-03-19"},{"lineNumber":394,"author":{"gitId":"4llysa"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG_2)));","lastModifiedDate":"2024-03-19"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":409,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":410,"author":{"gitId":"4llysa"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":411,"author":{"gitId":"4llysa"},"content":"    public void parseTags_sinlgeDuplicateTags_ignoresDuplicates() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":412,"author":{"gitId":"4llysa"},"content":"        Set\u003cTag\u003e tagSetWithDuplicates \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_1));","lastModifiedDate":"2024-03-19"},{"lineNumber":413,"author":{"gitId":"4llysa"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1)));","lastModifiedDate":"2024-03-19"},{"lineNumber":414,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":415,"author":{"gitId":"4llysa"},"content":"        assertEquals(tagSetWithDuplicates, expectedTagSet);","lastModifiedDate":"2024-03-19"},{"lineNumber":416,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":417,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":418,"author":{"gitId":"4llysa"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":419,"author":{"gitId":"4llysa"},"content":"    public void parseTags_multipleDuplicateTags_ignoresDuplicates() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":420,"author":{"gitId":"4llysa"},"content":"        Set\u003cTag\u003e tagSetWithMultipleDuplicates \u003d ParserUtil.parseTags(Arrays.asList(","lastModifiedDate":"2024-03-19"},{"lineNumber":421,"author":{"gitId":"4llysa"},"content":"                VALID_TAG_1, VALID_TAG_2, VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2024-03-19"},{"lineNumber":422,"author":{"gitId":"4llysa"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2024-03-19"},{"lineNumber":423,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":424,"author":{"gitId":"4llysa"},"content":"        assertEquals(tagSetWithMultipleDuplicates, expectedTagSet);","lastModifiedDate":"2024-03-19"},{"lineNumber":425,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":426,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":427,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":428,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseRemark_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":429,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRemark((String) null));","lastModifiedDate":"2024-03-20"},{"lineNumber":430,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":431,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":432,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseRemark_validValueWithoutWhitespace_returnsRemark() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":433,"author":{"gitId":"UdhayaShan1"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK_ONE);","lastModifiedDate":"2024-03-20"},{"lineNumber":434,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_REMARK_ONE));","lastModifiedDate":"2024-03-20"},{"lineNumber":435,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":436,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":437,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":438,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseRemark_validValueWithWhitespace_returnsTrimmedRemark() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":439,"author":{"gitId":"UdhayaShan1"},"content":"        String remarkWithWhitespace \u003d WHITESPACE + VALID_REMARK_ONE + WHITESPACE;","lastModifiedDate":"2024-03-20"},{"lineNumber":440,"author":{"gitId":"UdhayaShan1"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK_ONE);","lastModifiedDate":"2024-03-20"},{"lineNumber":441,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(remarkWithWhitespace));","lastModifiedDate":"2024-03-20"},{"lineNumber":442,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":443,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"4llysa":26,"jyztintan":1,"UdhayaShan1":244,"-":172}},{"path":"src/test/java/seedu/realodex/logic/parser/PrefixCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"public class PrefixCheckerTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    public void anyPrefixesPresent_withMultiplePrefixes_returnsTrue() {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe e/johnd@example.com \";","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME, PREFIX_EMAIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        assertTrue(prefixChecker.anyPrefixesPresent(PREFIX_NAME, PREFIX_EMAIL));","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    public void anyPrefixesPresent_withNoPrefixes_returnsFalse() {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" \";","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME, PREFIX_EMAIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        assertFalse(prefixChecker.anyPrefixesPresent(PREFIX_NAME, PREFIX_EMAIL));","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    public void anyPrefixesPresent_withNoRelevantPrefixes_returnsFalse() {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe \";","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME);","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"        assertFalse(prefixChecker.anyPrefixesPresent(PREFIX_PHONE, PREFIX_ADDRESS));","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"    public void moreThanOnePrefixPresent_withMultiplePrefixes_returnsTrue() {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe e/johnd@example.com \";","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME, PREFIX_EMAIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"        assertTrue(prefixChecker.moreThanOnePrefixPresent(PREFIX_NAME, PREFIX_EMAIL));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"    public void moreThanOnePrefixPresent_withSinglePrefix_returnsFalse() {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe \";","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"        assertFalse(prefixChecker.moreThanOnePrefixPresent(PREFIX_NAME, PREFIX_EMAIL));","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"    public void checkEmptyPreamble_withEmptyPreamble_returnsTrue() {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe\";","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME);","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"        assertTrue(prefixChecker.checkEmptyPreamble());","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"    public void checkEmptyPreamble_withNonEmptyPreamble_returnsFalse() {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \"Random Preamble n/John Doe \";","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME);","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"        assertFalse(prefixChecker.checkEmptyPreamble());","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"    public void checkNoDuplicatePrefix_noDuplicates_doesNotThrowException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe e/johnd@example.com \";","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME, PREFIX_EMAIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"        assertDoesNotThrow(() -\u003e prefixChecker.checkNoDuplicatePrefix(PREFIX_NAME, PREFIX_EMAIL));","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"    public void checkNoDuplicatePrefix_oneDuplicate_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe n/Jane Doe \";","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME);","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"        assertThrows(ParseException.class, () -\u003e prefixChecker.checkNoDuplicatePrefix(PREFIX_NAME));","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"    public void checkNoDuplicatePrefix_multipleDuplicates_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe e/johnd@example.com n/Jane Doe e/janed@example.com \";","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME, PREFIX_EMAIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"jyztintan"},"content":"        assertThrows(ParseException.class, () -\u003e prefixChecker.checkNoDuplicatePrefix(PREFIX_NAME, PREFIX_EMAIL));","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"jyztintan"},"content":"    void findPresentPrefix_whenSinglePrefixPresent_returnsCorrectPrefix() {","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"jyztintan"},"content":"        // Setup ArgumentMultimap with a single prefix","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe\";","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME);","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"jyztintan"},"content":"        Prefix result \u003d prefixChecker.findPresentPrefix(PREFIX_NAME, PREFIX_EMAIL);","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"jyztintan"},"content":"        assertEquals(PREFIX_NAME, result);","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"jyztintan"},"content":"    void findPresentPrefix_whenMultiplePrefixesPresent_returnsFirstPresentPrefix() {","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"jyztintan"},"content":"        // Setup ArgumentMultimap with multiple prefixes","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" n/John Doe r/Loves cats\";","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, PREFIX_NAME, PREFIX_REMARK);","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"jyztintan"},"content":"        Prefix result \u003d prefixChecker.findPresentPrefix(PREFIX_NAME, PREFIX_REMARK);","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"jyztintan"},"content":"        assertEquals(PREFIX_NAME, result);","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"jyztintan"},"content":"    void findPresentPrefix_whenNoPrefixesPresent_returnsNull() {","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"jyztintan"},"content":"        // Setup ArgumentMultimap with no prefixes","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"jyztintan"},"content":"        String argsString \u003d \" Just some text without prefixes\";","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"jyztintan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"jyztintan"},"content":"        PrefixChecker prefixChecker \u003d new PrefixChecker(argMultimap);","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"jyztintan"},"content":"        Prefix result \u003d prefixChecker.findPresentPrefix(PREFIX_NAME, PREFIX_REMARK);","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"jyztintan"},"content":"        assertNull(result);","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"jyztintan":144}},{"path":"src/test/java/seedu/realodex/logic/parser/RealodexParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.AddCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.ListCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.NameContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.RemarkContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"public class RealodexParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    private final RealodexParser parser \u003d new RealodexParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseCommand_deleteByIndex() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"    public void parseCommand_deleteByName() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + \"n/James\");","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(new DeleteCommand(new Name(\"James\")), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"        command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + \"n/ Denzel Untrimmed \");","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(new DeleteCommand(new Name(\"Denzel Untrimmed\")), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"    public void parseCommand_filterByName() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"        String keyphrase \u003d \"foo bar baz\";","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"                FilterCommand.COMMAND_WORD + \" n/\" + keyphrase);","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"        assertEquals(new FilterCommand(new NameContainsKeyphrasePredicate(keyphrase)), command);","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"    public void parseCommand_filterByRemark() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"        String keyphrase \u003d \"foo bar baz\";","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"                FilterCommand.COMMAND_WORD + \" r/\" + keyphrase);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"        assertEquals(new FilterCommand(new RemarkContainsKeyphrasePredicate(keyphrase)), command);","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"appleraincoat"},"content":"    public void parseCommand_add_help() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(parser.parseCommand(\"add help\") instanceof HelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expected \u003d new HelpCommand(\"add\");","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(parser.parseCommand(\"add help\"), expected);","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"appleraincoat"},"content":"    public void parseCommand_clear_help() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(parser.parseCommand(\"clearRealodex help\") instanceof HelpCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expected \u003d new HelpCommand(\"clearRealodex\");","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(parser.parseCommand(\"clearRealodex help\"), expected);","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"appleraincoat"},"content":"    public void parseCommand_delete_help() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(parser.parseCommand(\"delete help\") instanceof HelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expected \u003d new HelpCommand(\"delete\");","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(parser.parseCommand(\"delete help\"), expected);","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"appleraincoat"},"content":"    public void parseCommand_edit_help() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(parser.parseCommand(\"edit help\") instanceof HelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expected \u003d new HelpCommand(\"edit\");","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(parser.parseCommand(\"edit help\"), expected);","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"appleraincoat"},"content":"    public void parseCommand_filter_help() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(parser.parseCommand(\"filter help\") instanceof HelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expected \u003d new HelpCommand(\"filter\");","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(parser.parseCommand(\"filter help\"), expected);","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"appleraincoat"},"content":"    public void parseCommand_list_help() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(parser.parseCommand(\"list help\") instanceof HelpCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"appleraincoat"},"content":"        HelpCommand expected \u003d new HelpCommand(\"list\");","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(parser.parseCommand(\"list help\"), expected);","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jyztintan":15,"UdhayaShan1":34,"-":69,"appleraincoat":42}},{"path":"src/test/java/seedu/realodex/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.NameContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.RealodexBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(new Realodex(), new Realodex(modelManager.getRealodex()));","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        userPrefs.setRealodexFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        userPrefs.setRealodexFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"    public void setRealodexFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setRealodexFilePath(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"    public void setRealodexFilePath_validPath_setsRealodexFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"        modelManager.setRealodexFilePath(path);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(path, modelManager.getRealodexFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"    public void hasPerson_personNotInRealodex_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"    public void hasPerson_personInRealodex_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex realodex \u003d new RealodexBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex differentRealodex \u003d new Realodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"        modelManager \u003d new ModelManager(realodex, userPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(realodex, userPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"        // different realodex -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentRealodex, userPrefs)));","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"jyztintan"},"content":"        String keyphrase \u003d ALICE.getName().fullName;","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"jyztintan"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeyphrasePredicate(keyphrase));","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(modelManager.equals(new ModelManager(realodex, userPrefs)));","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"        differentUserPrefs.setRealodexFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(modelManager.equals(new ModelManager(realodex, differentUserPrefs)));","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jyztintan":3,"UdhayaShan1":26,"-":102}},{"path":"src/test/java/seedu/realodex/model/RealodexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"public class RealodexTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    private final Realodex realodex \u003d new Realodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(Collections.emptyList(), realodex.getPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e realodex.resetData(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    public void resetData_withValidReadOnlyRealodex_replacesData() {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex newData \u003d getTypicalRealodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"        realodex.resetData(newData);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(newData, realodex);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"4llysa"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_AMY)","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        RealodexStub newData \u003d new RealodexStub(newPersons);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e realodex.resetData(newData));","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e realodex.hasPerson(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"    public void hasPerson_personNotInRealodex_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(realodex.hasPerson(ALICE));","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"    public void hasPerson_personInRealodex_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"        realodex.addPerson(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"        assertTrue(realodex.hasPerson(ALICE));","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"    public void hasPerson_personWithSameIdentityFieldsInRealodex_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        realodex.addPerson(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"4llysa"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_AMY)","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"        assertTrue(realodex.hasPerson(editedAlice));","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e realodex.getPersonList().remove(0));","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"        String expected \u003d Realodex.class.getCanonicalName() + \"{persons\u003d\" + realodex.getPersonList() + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(expected, realodex.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"     * A stub ReadOnlyRealodex whose persons list can violate interface constraints.","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"    private static class RealodexStub implements ReadOnlyRealodex {","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        RealodexStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"4llysa":2,"UdhayaShan1":34,"-":72}},{"path":"src/test/java/seedu/realodex/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    public void setRealodexFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setRealodexFilePath(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"UdhayaShan1":4,"-":17}},{"path":"src/test/java/seedu/realodex/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"UdhayaShan1":2,"-":54}},{"path":"src/test/java/seedu/realodex/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"4llysa"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"4llysa"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"4llysa"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"4llysa"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"4llysa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"4llysa"},"content":"public class BirthdayTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"4llysa"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"4llysa"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"4llysa"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"4llysa"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"4llysa"},"content":"    public void isValidBirthday() {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"4llysa"},"content":"        // null email","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"4llysa"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthday.isValidBirthday(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"4llysa"},"content":"        // blank email","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"4llysa"},"content":"        assertTrue(Birthday.isValidBirthday(\"\")); // empty string","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"4llysa"},"content":"        assertTrue(Birthday.isValidBirthday(\" \")); // spaces only","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"4llysa"},"content":"        // missing parts","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"4llysa"},"content":"        assertFalse(Birthday.isValidBirthday(\"1\")); // missing month","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"4llysa"},"content":"        assertFalse(Birthday.isValidBirthday(\"31June\")); // missing year","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"4llysa"},"content":"        assertFalse(Birthday.isValidBirthday(\"June2002\")); // missing day","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"4llysa"},"content":"        // invalid parts","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"4llysa"},"content":"        assertFalse(Birthday.isValidBirthday(\"29Feb2023\")); // not a leap year","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"4llysa"},"content":"        assertFalse(Birthday.isValidBirthday(\"1-jan-2001\")); // not supposed to have \u0027-\u0027","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"4llysa"},"content":"        // valid email","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"4llysa"},"content":"        assertTrue(Birthday.isValidBirthday(\"29Feb2024\")); // leap year","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"4llysa"},"content":"        assertTrue(Birthday.isValidBirthday(\"12May2003\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"4llysa"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"4llysa"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"4llysa"},"content":"        Birthday birthday \u003d new Birthday(\"14mar1706\"); // pi day!","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"4llysa"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"4llysa"},"content":"        assertTrue(birthday.equals(new Birthday(\"14mar1706\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"4llysa"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"4llysa"},"content":"        assertTrue(birthday.equals(birthday));","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"4llysa"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"4llysa"},"content":"        assertFalse(birthday.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"4llysa"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"4llysa"},"content":"        assertFalse(birthday.equals(5.0f));","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"4llysa"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"4llysa"},"content":"        assertFalse(birthday.equals(new Birthday(\"13mar1706\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"4llysa"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"4llysa":59}},{"path":"src/test/java/seedu/realodex/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"UdhayaShan1":2,"-":86}},{"path":"src/test/java/seedu/realodex/model/person/FamilyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"wapisai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"wapisai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"wapisai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"wapisai"},"content":"public class FamilyTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"wapisai"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"wapisai"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Family(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    public void constructor_invalidFamily_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"wapisai"},"content":"        String invalidFamily \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Family(invalidFamily));","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        String invalidFamilyWithSpaces \u003d \" \";","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Family(invalidFamilyWithSpaces));","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"wapisai"},"content":"    public void isValidFamily() {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"wapisai"},"content":"        // null family size","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Family.isValidFamily(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"wapisai"},"content":"        // invalid family sizes","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"wapisai"},"content":"        assertFalse(Family.isValidFamily(\"0\")); // less than 1","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(Family.isValidFamily(\"-1\")); // less than 1","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(Family.isValidFamily(\"-2\")); // less than 1","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(Family.isValidFamily(\"-12313231231313\")); // very negative","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"wapisai"},"content":"        // valid family numbers","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"wapisai"},"content":"        assertTrue(Family.isValidFamily(\"2\")); // more than 1","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        assertTrue(Family.isValidFamily(\"93121\")); // huge family","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        assertTrue(Family.isValidFamily(\"12422131313131938\")); // very huge family","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"wapisai"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"wapisai"},"content":"        Family family \u003d new Family(\"999\");","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"wapisai"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"wapisai"},"content":"        assertTrue(family.equals(new Family(\"999\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"wapisai"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"wapisai"},"content":"        assertTrue(family.equals(family));","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"wapisai"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"wapisai"},"content":"        assertFalse(family.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        // different types (integer vs float) -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"wapisai"},"content":"        assertFalse(family.equals(5.0f));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        //different types (integer vs words) -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(family.equals(\"OKKK\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"wapisai"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"wapisai"},"content":"        assertFalse(family.equals(new Family(\"995\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"wapisai"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"UdhayaShan1":16,"wapisai":48}},{"path":"src/test/java/seedu/realodex/model/person/IncomeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"wapisai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"wapisai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"wapisai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"wapisai"},"content":"public class IncomeTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"wapisai"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"wapisai"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Income(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    public void constructor_invalidIncome_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"wapisai"},"content":"        String invalidIncome \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Income(invalidIncome));","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        String invalidIncomeWithSpaces \u003d \" \";","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Income(invalidIncomeWithSpaces));","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"wapisai"},"content":"    public void isValidIncome() {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"wapisai"},"content":"        // null income","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Income.isValidIncome(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"wapisai"},"content":"        // invalid income","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"wapisai"},"content":"        assertFalse(Income.isValidIncome(\"-1\")); // less than 0","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(Income.isValidIncome(\"-3\")); // less than 0","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(Income.isValidIncome(\"-121333213213131313\")); // less than 0 but very negative","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"wapisai"},"content":"        // valid income numbers","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"wapisai"},"content":"        assertTrue(Income.isValidIncome(\"2\")); // more than 1","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"wapisai"},"content":"        assertTrue(Income.isValidIncome(\"93121\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        assertTrue(Income.isValidIncome(\"1242938231332131313\")); // long number","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"wapisai"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"wapisai"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"wapisai"},"content":"        Income income \u003d new Income(\"999\");","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"wapisai"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"wapisai"},"content":"        assertTrue(income.equals(new Income(\"999\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"wapisai"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"wapisai"},"content":"        assertTrue(income.equals(income));","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"wapisai"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"wapisai"},"content":"        assertFalse(income.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        // different types (integer vs float) -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"wapisai"},"content":"        assertFalse(income.equals(5.0f));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        // different types (integer vs word) -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(income.equals(\"imaword!\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"wapisai"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"wapisai"},"content":"        assertFalse(income.equals(new Income(\"995\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"wapisai"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"UdhayaShan1":15,"wapisai":49}},{"path":"src/test/java/seedu/realodex/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"UdhayaShan1":3,"-":58}},{"path":"src/test/java/seedu/realodex/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_FAMILY_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_INCOME_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_NAME_BOB_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                .withIncome(VALID_INCOME_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"                .withFamily(VALID_FAMILY_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"                .withTags(VALID_TAG_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"                .withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"                .build();","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB_FIRST_LETTER_CAPS).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB_FIRST_LETTER_CAPS.toLowerCase()).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB_FIRST_LETTER_CAPS + \" \";","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB_FIRST_LETTER_CAPS).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"        //different income -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withIncome(VALID_INCOME_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"        // different family size -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withIncome(VALID_FAMILY_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":108,"author":{"gitId":"4llysa"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(\"buyer\").withTags(\"seller\").build();","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"        // different remarks -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"                + \", income\u003d\" + ALICE.getIncome()","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"                + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"                + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"                + \", family\u003d\" + ALICE.getFamily()","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"appleraincoat"},"content":"                + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"appleraincoat"},"content":"                + \", remark\u003d\" + ALICE.getRemark() + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"4llysa":1,"UdhayaShan1":42,"-":82,"appleraincoat":2}},{"path":"src/test/java/seedu/realodex/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"        String invalidPhone2 \u003d \" \";","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone2));","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"UdhayaShan1":4,"-":58}},{"path":"src/test/java/seedu/realodex/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"public class RemarkTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    //May seem redundant, but for further iterations where we may validate remarks.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    public void isValidRemark() {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"        // null name","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        // invalid name","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"        // to-do in the future, ideas include but not limited to length constraints, no illegal characters.","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"        // valid name","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"        assertTrue(Remark.isValidRemark(\"I love apples\")); // alphabets only","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        assertTrue(Remark.isValidRemark(\"12345\")); // numbers only","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"        assertTrue(Remark.isValidRemark(\"James Lau the 1st\")); // alphanumeric characters","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"        assertTrue(Remark.isValidRemark(\"New York\")); // with capital letters","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        assertTrue(Remark.isValidRemark(\"Tony Stark, genius playboy billionaire philanthropist\")); // long remark","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        Remark remark \u003d new Remark(\"Valid Remark\");","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"        assertTrue(remark.equals(new Remark(\"Valid Remark\")));","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"        assertFalse(remark \u003d\u003d null);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"        assertFalse(remark.equals(5.0f));","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"        assertFalse(remark.equals(new Remark(\"Other Valid Name\")));","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"jyztintan":53}},{"path":"src/test/java/seedu/realodex/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"4llysa"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_AMY)","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"4llysa"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_AMY)","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"4llysa":2,"UdhayaShan1":9,"-":164}},{"path":"src/test/java/seedu/realodex/model/person/predicate/NameContainsKeyphrasePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.model.person.predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.NameContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"public class NameContainsKeyphrasePredicateTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"        String firstPredicateKeyphrase \u003d \"first\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"        String secondPredicateKeyphrase \u003d \"first second\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate firstPredicate \u003d new NameContainsKeyphrasePredicate(firstPredicateKeyphrase);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate secondPredicate \u003d new NameContainsKeyphrasePredicate(secondPredicateKeyphrase);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate firstPredicateCopy \u003d new NameContainsKeyphrasePredicate(firstPredicateKeyphrase);","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"    public void test_nameContainsKeyphrase_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase is one word","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate predicate \u003d new NameContainsKeyphrasePredicate(\"Alice\");","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase is more than one word","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"Alice Tan\");","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Tan\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"        // Name starts with matching keyphrase","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"Alice\");","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Tan\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"        // Name does not start with matching keyphrase","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"Alice\");","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Annoying Alice\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase is not the full word","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"lice\");","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"        // Not exact word and not starting with keyphrase","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"lice\");","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Annoying Alice\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"        // Mixed-case keyphrase","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"aLIce bOB\");","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    public void test_nameDoesNotContainKeyphrase_returnsFalse() {","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"        // Non-matching keyphrase","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate predicate \u003d new NameContainsKeyphrasePredicate(\"Carol\");","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase match phone but does not match name","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"12345\");","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(alice));","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase match email but does not match name","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"alice@email.com\");","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(alice));","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase match address but does not match name","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"Main\");","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(alice));","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new NameContainsKeyphrasePredicate(\"Street\");","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(alice));","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"        String keyphrase \u003d \"keyphrase yapyap\";","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate predicate \u003d new NameContainsKeyphrasePredicate(keyphrase);","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"        String expected \u003d NameContainsKeyphrasePredicate.class.getCanonicalName() + \"{keyphrase\u003d\" + keyphrase + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jyztintan":56,"-":47,"UdhayaShan1":1}},{"path":"src/test/java/seedu/realodex/model/person/predicate/PredicateProducerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.model.person.predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.parser.Prefix;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.NameContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.PredicateProducer;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.RemarkContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"class PredicateProducerTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    void createPredicate_validNamePrefix_createsCorrectPredicate() throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"        PredicateProducer predicateProducer \u003d new PredicateProducer();","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"        String keyphrase \u003d \"Alice\";","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").withRemark(\"She is a lice\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"        assertEquals(predicateProducer.createPredicate(PREFIX_NAME, keyphrase),","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"                new NameContainsKeyphrasePredicate(\"Alice\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicateProducer.createPredicate(PREFIX_NAME, keyphrase).test(alice));","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"    void createPredicate_validRemarkPrefix_createsCorrectPredicate() throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        PredicateProducer predicateProducer \u003d new PredicateProducer();","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        String keyphrase \u003d \"She is a lice\";","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").withRemark(\"She is a lice\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        assertEquals(predicateProducer.createPredicate(PREFIX_REMARK, keyphrase),","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"                new RemarkContainsKeyphrasePredicate(\"She is a lice\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicateProducer.createPredicate(PREFIX_REMARK, keyphrase).test(alice));","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"    void createPredicate_emptyKeyphrase_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"        PredicateProducer predicateProducer \u003d new PredicateProducer();","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"        String keyphrase \u003d \"\";","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"        ParseException exception \u003d assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"                predicateProducer.createPredicate(PREFIX_NAME, keyphrase));","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"        assertTrue(exception.getMessage().contains(FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"    void createPredicate_assertionErrorWhenInvalidPrefix() {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"        PredicateProducer predicateProducer \u003d new PredicateProducer();","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        Prefix unhandledPrefix \u003d new Prefix(\"unhandled/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"        ClassLoader.getSystemClassLoader().setDefaultAssertionStatus(true);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"        assertThrows(AssertionError.class, () -\u003e predicateProducer.createPredicate(unhandledPrefix, \"keyphrase\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"jyztintan":64,"UdhayaShan1":1}},{"path":"src/test/java/seedu/realodex/model/person/predicate/RemarkContainsKeyphrasePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package seedu.realodex.model.person.predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.NameContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.predicates.RemarkContainsKeyphrasePredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.testutil.PersonBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"public class RemarkContainsKeyphrasePredicateTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"        String firstPredicateKeyphrase \u003d \"first\";","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        String secondPredicateKeyphrase \u003d \"first second\";","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate firstPredicate \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"                new RemarkContainsKeyphrasePredicate(firstPredicateKeyphrase);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate secondPredicate \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"                new RemarkContainsKeyphrasePredicate(secondPredicateKeyphrase);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"                new RemarkContainsKeyphrasePredicate(firstPredicateKeyphrase);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        //different predicate type -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        NameContainsKeyphrasePredicate copy \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"                new NameContainsKeyphrasePredicate(firstPredicateKeyphrase);","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        assertFalse(firstPredicate.equals(copy));","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"    public void test_nameContainsKeyphrase_returnsTrue() {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase is one word","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate predicate \u003d new RemarkContainsKeyphrasePredicate(\"Nice\");","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(\"Nice\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase is more than one word","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"Nicely done\");","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(\"Nicely done\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"        // Remark does not start with matching keyphrase","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"mala\");","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(\"James cannot eat mala\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase is not the full word","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"me\");","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(\"James cannot eat mala\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"        // Not exact word and not starting with keyphrase","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"lice\");","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(\"Annoying Alice\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"        // Mixed-case keyphrase","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"tHiS dOEs NoT lOoK aCoUstIc\");","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(\"this does not look acoustic\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"        // Symbols in keyphrase","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"tH1S d0e$ nOt L0ok @cOu$t1c\");","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(\"tH1S d0e$ nOt L0ok @cOu$t1c\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"    public void test_nameDoesNotContainKeyphrase_returnsFalse() {","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"        // Non-matching keyphrase","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate predicate \u003d new RemarkContainsKeyphrasePredicate(\"CS2103T\");","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRemark(\"is not fun!\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withRemark(\"She is not a lice\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase match name but does not match remark","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"Alice\");","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(alice));","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase match phone but does not match remark","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"12345\");","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(alice));","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase match email but does not match remark","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"alice@email.com\");","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(alice));","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"        // Keyphrase match address but does not match remark","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"Main\");","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(alice));","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"jyztintan"},"content":"        predicate \u003d new RemarkContainsKeyphrasePredicate(\"Street\");","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"jyztintan"},"content":"        assertFalse(predicate.test(alice));","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"jyztintan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"jyztintan"},"content":"        String keyphrase \u003d \"keyphrase yapyap\";","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"jyztintan"},"content":"        RemarkContainsKeyphrasePredicate predicate \u003d new RemarkContainsKeyphrasePredicate(keyphrase);","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"jyztintan"},"content":"        String expected \u003d RemarkContainsKeyphrasePredicate.class.getCanonicalName() + \"{keyphrase\u003d\" + keyphrase + \"}\";","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"jyztintan"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"jyztintan":119}},{"path":"src/test/java/seedu/realodex/model/remark/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"appleraincoat"},"content":"package seedu.realodex.model.remark;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"appleraincoat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"appleraincoat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"appleraincoat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"appleraincoat"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"appleraincoat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Remark;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"appleraincoat"},"content":"public class RemarkTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"appleraincoat"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"appleraincoat"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null)); //Remark does not take in null,","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"appleraincoat"},"content":"        // only empty string","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"appleraincoat"},"content":"    public void isValidRemarkTest() {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"appleraincoat"},"content":"        // null tag name","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"appleraincoat"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"appleraincoat"},"content":"        // Invalid tag names","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(Remark.isValidRemark(\"\")); // Empty remark","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(Remark.isValidRemark(\"abc123\")); // Alphanumeric characters allowed","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(Remark.isValidRemark(\"\u003c\u003e?.\u0027 [];\u003e\")); // Special characters allowed","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(Remark.isValidRemark(\"      \")); // Pure whitespace remark","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"appleraincoat"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"appleraincoat"},"content":"        Remark remark \u003d new Remark(\"Valid Remark\");","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"appleraincoat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(remark.equals(new Remark(\"Valid Remark\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"appleraincoat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"appleraincoat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"appleraincoat"},"content":"        assertFalse(remark \u003d\u003d null);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"appleraincoat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"appleraincoat"},"content":"        assertFalse(remark.equals(5.0f));","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"appleraincoat"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"        assertFalse(remark.equals(new Remark(\"Other Valid Name\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"appleraincoat"},"content":"        Remark emptyRemark \u003d new Remark(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"appleraincoat"},"content":"        Remark whiteSpaceRemark \u003d new Remark(\"       \");","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"appleraincoat"},"content":"        assertTrue(emptyRemark.equals(whiteSpaceRemark));","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"appleraincoat"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"appleraincoat"},"content":"    public void toStringWithRepresentationTest() {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"appleraincoat"},"content":"        Remark emptyRemark \u003d new Remark(\"\"); // Create a Remark object with an empty string","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"appleraincoat"},"content":"        Remark nonEmptyRemark \u003d new Remark(\"This is a remark\");","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"appleraincoat"},"content":"        Remark specialCharRemark \u003d new Remark(\"\u003c\u003e:}{{}()}\");","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"appleraincoat"},"content":"        Remark whiteSpaceRemark \u003d new Remark(\"       \");","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"appleraincoat"},"content":"        //Empty remark will be represented with \"No remark.\" instead of just a blank","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(\"No remark.\", emptyRemark.toStringWithRepresentation());","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(\"Remark: This is a remark\", nonEmptyRemark.toStringWithRepresentation());","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(\"Remark: \u003c\u003e:}{{}()}\", specialCharRemark.toStringWithRepresentation());","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"appleraincoat"},"content":"        assertEquals(\"No remark.\", whiteSpaceRemark.toStringWithRepresentation());","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"appleraincoat"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"jyztintan":2,"appleraincoat":68}},{"path":"src/test/java/seedu/realodex/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.model.tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        // Invalid tag names","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(Tag.isValidTagName(\"\")); // Empty tag name","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"4llysa"},"content":"        assertFalse(Tag.isValidTagName(\"Buyers\")); // Should not be plural","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(Tag.isValidTagName(\"Sellers \")); // Extra space at the end","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(Tag.isValidTagName(\"Invalid Tag\")); // Space within the tag name","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        // Valid tag names","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        assertTrue(Tag.isValidTagName(\"buyer\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"        assertTrue(Tag.isValidTagName(\"seller\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"4llysa"},"content":"        assertTrue(Tag.isValidTagName(\"buYeR\")); // Tag converts string to uppercase","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"4llysa"},"content":"        assertTrue(Tag.isValidTagName(\"seLLer\")); // Tag converts string to uppercase","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"4llysa":3,"UdhayaShan1":13,"-":24}},{"path":"src/test/java/seedu/realodex/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String INVALID_INCOME \u003d \"-1\";","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String INVALID_FAMILY \u003d \"0\";","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_INCOME \u003d BENSON.getIncome().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String VALID_FAMILY \u003d BENSON.getFamily().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"appleraincoat"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"4llysa"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_INCOME, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"4llysa"},"content":"                                      VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_INCOME, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"4llysa"},"content":"                                                         VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_INCOME, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"4llysa"},"content":"                                      VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_INCOME, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"4llysa"},"content":"                                                         VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"    public void toModelType_invalidIncome_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_INCOME, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"4llysa"},"content":"                                      VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"        String expectedMessage \u003d Income.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"    public void toModelType_nullIncome_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"4llysa"},"content":"                                                         VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Income.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_INCOME, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"4llysa"},"content":"                                      VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_INCOME, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"4llysa"},"content":"                                                         VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_INCOME, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"4llysa"},"content":"                                      VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_INCOME, VALID_EMAIL, null,","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"4llysa"},"content":"                                                         VALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"UdhayaShan1"},"content":"    public void toModelType_invalidFamily_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"UdhayaShan1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_INCOME, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"4llysa"},"content":"                                      INVALID_FAMILY, VALID_TAGS, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"UdhayaShan1"},"content":"        String expectedMessage \u003d Family.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"UdhayaShan1"},"content":"    public void toModelType_nullFamily_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"UdhayaShan1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"UdhayaShan1"},"content":"                                                         VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"UdhayaShan1"},"content":"                                                         VALID_INCOME,","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"UdhayaShan1"},"content":"                                                         VALID_EMAIL,","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"UdhayaShan1"},"content":"                                                         VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"UdhayaShan1"},"content":"                                                         null,","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"UdhayaShan1"},"content":"                                                         VALID_TAGS,","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"4llysa"},"content":"                                                         VALID_REMARK,","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"4llysa"},"content":"                                                         VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"UdhayaShan1"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Family.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"UdhayaShan1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_INCOME, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"4llysa"},"content":"                                      VALID_FAMILY, invalidTags, VALID_REMARK, VALID_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"4llysa":15,"UdhayaShan1":60,"-":92,"appleraincoat":1}},{"path":"src/test/java/seedu/realodex/storage/JsonRealodexStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"public class JsonRealodexStorageTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonRealodexStorageTest\");","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    public void readRealodex_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e readRealodex(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    private java.util.Optional\u003cReadOnlyRealodex\u003e readRealodex(String filePath) throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        return new JsonRealodexStorage(Paths.get(filePath)).readRealodex(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"        assertFalse(readRealodex(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readRealodex(\"notJsonFormatRealodex.json\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"    public void readRealodex_invalidPersonRealodex_throwDataLoadingException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readRealodex(\"invalidPersonRealodex.json\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"    public void readRealodex_invalidAndValidPersonRealodex_throwDataLoadingException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readRealodex(\"invalidAndValidPersonRealodex.json\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    public void readAndSaveRealodex_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        Path filePath \u003d testFolder.resolve(\"TempRealodex.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex original \u003d getTypicalRealodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"        JsonRealodexStorage jsonRealodexStorage \u003d new JsonRealodexStorage(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"        jsonRealodexStorage.saveRealodex(original, filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        ReadOnlyRealodex readBack \u003d jsonRealodexStorage.readRealodex(filePath).get();","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(original, new Realodex(readBack));","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        jsonRealodexStorage.saveRealodex(original, filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"        readBack \u003d jsonRealodexStorage.readRealodex(filePath).get();","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(original, new Realodex(readBack));","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"        jsonRealodexStorage.saveRealodex(original); // file path not specified","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"        readBack \u003d jsonRealodexStorage.readRealodex().get(); // file path not specified","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(original, new Realodex(readBack));","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"    public void saveRealodex_nullRealodex_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRealodex(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"     * Saves {@code realodex} at the specified {@code filePath}.","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"    private void saveRealodex(ReadOnlyRealodex realodex, String filePath) {","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"            new JsonRealodexStorage(Paths.get(filePath))","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"                    .saveRealodex(realodex, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"    public void saveRealodex_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRealodex(new Realodex(), null));","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"UdhayaShan1":42,"-":68}},{"path":"src/test/java/seedu/realodex/storage/JsonSerializableRealodexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.util.JsonUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.testutil.TypicalPersons;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"public class JsonSerializableRealodexTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableRealodexTest\");","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsRealodex.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonRealodex.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonRealodex.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"        JsonSerializableRealodex dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"                                                                      JsonSerializableRealodex.class).get();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex realodexFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex typicalPersonsRealodex \u003d TypicalPersons.getTypicalRealodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(realodexFromFile, typicalPersonsRealodex);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        JsonSerializableRealodex dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"                                                                      JsonSerializableRealodex.class).get();","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        JsonSerializableRealodex dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                                                                      JsonSerializableRealodex.class).get();","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableRealodex.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                     dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"UdhayaShan1":21,"-":26}},{"path":"src/test/java/seedu/realodex/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"        userPrefs.setRealodexFilePath(Paths.get(\"realodex.json\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"UdhayaShan1":6,"-":117}},{"path":"src/test/java/seedu/realodex/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.TypicalPersons.getTypicalRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.ReadOnlyRealodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        JsonRealodexStorage realodexStorage \u003d new JsonRealodexStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"        storageManager \u003d new StorageManager(realodexStorage, userPrefsStorage);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"    public void realodexReadSave() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"         * {@link JsonRealodexStorage} class.","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonRealodexStorageTest} class.","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex original \u003d getTypicalRealodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        storageManager.saveRealodex(original);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"        ReadOnlyRealodex retrieved \u003d storageManager.readRealodex().get();","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(original, new Realodex(retrieved));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    public void getRealodexFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        assertNotNull(storageManager.getRealodexFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":17,"-":51}},{"path":"src/test/java/seedu/realodex/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"UdhayaShan1":1,"-":33}},{"path":"src/test/java/seedu/realodex/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"        descriptor.setIncome(person.getIncome());","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"        descriptor.setFamily(person.getFamily());","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"appleraincoat"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"     * Sets the {@code Income} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"    public EditPersonDescriptorBuilder withIncome(String income) {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"        descriptor.setIncome(new Income(income));","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"     * Sets the {@code Family} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"    public EditPersonDescriptorBuilder withFamily(String family) {","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"        descriptor.setFamily(new Family(family));","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"wapisai"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"wapisai"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"wapisai"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"wapisai"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"wapisai"},"content":"        Remark r \u003d new Remark(remark);","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"wapisai"},"content":"        descriptor.setRemark(r);","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"wapisai"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"wapisai"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"wapisai"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jyztintan":1,"UdhayaShan1":28,"-":79,"appleraincoat":1,"wapisai":9}},{"path":"src/test/java/seedu/realodex/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Address;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"4llysa"},"content":"import seedu.realodex.model.person.Birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Family;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Income;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"import seedu.realodex.model.person.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String DEFAULT_INCOME \u003d \"20000\";","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    public static final String DEFAULT_FAMILY \u003d \"4\";","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"4llysa"},"content":"    public static final Tag DEFAULT_TAG \u003d new Tag(\"buyer\");","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"4llysa"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"4llysa"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"    private Income income;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"    private Family family;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"appleraincoat"},"content":"    private Remark remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"4llysa"},"content":"    private Birthday birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        income \u003d new Income(DEFAULT_INCOME);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        family \u003d new Family(DEFAULT_FAMILY);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"4llysa"},"content":"        tags.add(DEFAULT_TAG);","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"4llysa"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"4llysa"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        income \u003d personToCopy.getIncome();","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"        family \u003d personToCopy.getFamily();","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"appleraincoat"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"4llysa"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"     * Sets the {@code Income} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"    public PersonBuilder withIncome(String income) {","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"        this.income \u003d new Income(income);","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"     * Sets the {@code Family} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"    public PersonBuilder withFamily(String family) {","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"        this.family \u003d new Family(family);","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"appleraincoat"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"appleraincoat"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"appleraincoat"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"appleraincoat"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"appleraincoat"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"appleraincoat"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"appleraincoat"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"4llysa"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"4llysa"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"4llysa"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"4llysa"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"4llysa"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"4llysa"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"4llysa"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"4llysa"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":147,"author":{"gitId":"4llysa"},"content":"        return new Person(name, phone, income, email, address, family, tags, remark, birthday);","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"4llysa":18,"jyztintan":1,"UdhayaShan1":34,"-":87,"appleraincoat":10}},{"path":"src/test/java/seedu/realodex/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_FAMILY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.AddCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        sb.append(PREFIX_INCOME + person.getIncome().toString() + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"        sb.append(PREFIX_FAMILY + person.getFamily().toString() + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"4llysa"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName.toString() + \" \")","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"appleraincoat"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().toString() + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"        sb.append(PREFIX_BIRTHDAY + person.getBirthday().toString() + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"wapisai"},"content":"        descriptor.getIncome().ifPresent(income -\u003e sb.append(PREFIX_INCOME).append(income.toString()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"wapisai"},"content":"        descriptor.getFamily().ifPresent(family -\u003e sb.append(PREFIX_FAMILY).append(family.toString()).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"wapisai"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.toString()).append(\" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"4llysa":1,"UdhayaShan1":17,"-":51,"appleraincoat":1,"wapisai":3}},{"path":"src/test/java/seedu/realodex/testutil/RealodexBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":" * A utility class to help with building Realodex objects.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" *     {@code Realodex ab \u003d new RealodexBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"public class RealodexBuilder {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    private Realodex realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    public RealodexBuilder() {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"        realodex \u003d new Realodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    public RealodexBuilder(Realodex realodex) {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"        this.realodex \u003d realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     * Adds a new {@code Person} to the {@code Realodex} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    public RealodexBuilder withPerson(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        realodex.addPerson(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    public Realodex build() {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        return realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":16,"-":18}},{"path":"src/test/java/seedu/realodex/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":1,"-":71}},{"path":"src/test/java/seedu/realodex/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"UdhayaShan1":4,"-":51}},{"path":"src/test/java/seedu/realodex/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"UdhayaShan1":2,"-":10}},{"path":"src/test/java/seedu/realodex/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_FAMILY_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_FAMILY_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_INCOME_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_INCOME_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_NAME_AMY_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_NAME_BOB_FIRST_LETTER_CAPS;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.Realodex;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"            .withIncome(\"10000\")","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"            .withFamily(\"4\")","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"appleraincoat"},"content":"            .withTags(\"buyer\")","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"appleraincoat"},"content":"            .withRemark(\"this is a remark\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"            .withIncome(\"20000\")","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"            .withFamily(\"4\")","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"4llysa"},"content":"            .withTags(\"seller\", \"buyer\").withBirthday(\"3Jun2003\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"            .withIncome(\"30000\")","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"appleraincoat"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withTags(\"buyer\")","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"4llysa"},"content":"            .withRemark(\"Carl was supposed to start with a K, but the doctor misspelled when he was born\")","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"4llysa"},"content":"            .withBirthday(\"6Jun2006\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"            .withIncome(\"40000\")","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"appleraincoat"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"buyer\")","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"4llysa"},"content":"            .withRemark(\"White VANS\").withBirthday(\"25Dec1999\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"            .withIncome(\"50000\")","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"4llysa"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withTags(\"buyer\")","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"4llysa"},"content":"            .withBirthday(\"1Jan2004\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"appleraincoat"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"            .withIncome(\"60000\")","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"4llysa"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withTags(\"seller\")","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"4llysa"},"content":"            .withBirthday(\"3Jun2003\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"            .withIncome(\"70000\")","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"appleraincoat"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withTags(\"buyer\")","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"4llysa"},"content":"            .withRemark(\"Fun fact: George\u0027s brother\u0027s name is \\\"The\\\".\").withBirthday(\"23Apr1983\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"4llysa"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withTags(\"buyer\").build();","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"4llysa"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"4llysa"},"content":"            .withTags(\"buyer\").withBirthday(\"8Aug1888\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Person AMY_NAME_CAPS \u003d new PersonBuilder().withName(VALID_NAME_AMY_FIRST_LETTER_CAPS)","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"            .withIncome(VALID_INCOME_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"            .withFamily(VALID_FAMILY_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"4llysa"},"content":"            .withTags(VALID_TAG_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"4llysa"},"content":"            .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB_FIRST_LETTER_CAPS)","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"            .withIncome(VALID_INCOME_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"            .withFamily(VALID_FAMILY_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"4llysa"},"content":"            .withTags(VALID_TAG_BOB)","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"            .withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"4llysa"},"content":"            .withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"    public static final String KEYPHRASE_MATCHING_MEIER \u003d \"Meier\"; // A keyphrase that matches MEIER","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns an {@code Realodex} with all the typical persons.","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"    public static Realodex getTypicalRealodex() {","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"        Realodex ab \u003d new Realodex();","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"4llysa":16,"jyztintan":1,"UdhayaShan1":47,"-":44,"appleraincoat":10}},{"path":"src/test/java/seedu/realodex/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"UdhayaShan1":1,"-":44}},{"path":"src/test/java/seedu/realodex/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package seedu.realodex.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import static seedu.realodex.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import seedu.realodex.MainApp;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"UdhayaShan1":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import seedu.realodex.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"UdhayaShan1":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"\u003cfx:root type\u003d\"seedu.realodex.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"UdhayaShan1":1}}]
