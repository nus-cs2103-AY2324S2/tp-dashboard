[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gingerbreaf"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F11-3/tp/actions)","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"![Ui](docs/images/UpdatedUi.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"gingerbreaf"},"content":"This is a professional Applicant Tracking System (ATS) for hiring managers in small to mid range startups.\u003cbr\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"gingerbreaf"},"content":"Hiring managers can use this application to keep track of the following:","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"1. Applicant and Interviewer contacts","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"gingerbreaf"},"content":"2. Interview datetimes","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"gingerbreaf"},"content":"3. Application statuses","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"For usage instructions, refer to the [user guide](https://ay2324s2-cs2103t-f11-3.github.io/tp/UserGuide.html).","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"gingerbreaf"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"yashpola":3,"-":2,"gingerbreaf":9}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"macareonie"},"content":"    archiveFileName \u003d \u0027tether.jar\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"macareonie":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"headcube1"},"content":"You can reach us at our respective emails.","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"### Yashwit Polapragada","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"\u003cimg src\u003d\"images/yashpola.png\" width\u003d\"150px\" height \u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"[[homepage](https://yashwit.com)]","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"[[github](https://github.com/yashpola)]","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"[[portfolio](team/yashwit.md)]","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"headcube1"},"content":"[email: yashwit@u.nus.edu]","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"* Role: Developer","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"* Responsibilites: UI, Docs, Coding","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"### Ryan Chiang","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"\u003cimg src\u003d\"images/macareonie.png\" width\u003d\"150px\" height \u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"[[github](http://github.com/macareonie)]","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"[[portfolio](team/ryanchiang.md)]","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"headcube1"},"content":"[email: e0958490@u.nus.edu]","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"* Role: Developer","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"headcube1"},"content":"* Responsibilities: UI, Docs, Coding","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"gingerbreaf"},"content":"### Jiang Bowei","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"\u003cimg src\u003d\"images/gingerbreaf.png\" width\u003d\"150px\" height \u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"gingerbreaf"},"content":"[[github](http://github.com/gingerbreaf)]","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"gingerbreaf"},"content":"[[portfolio](team/jiangbowei.md)]","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"headcube1"},"content":"[email: boweij@u.nus.edu]","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"headcube1"},"content":"* Responsibilities: UI, Docs, Coding","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"### Ong Zhi Kai","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"\u003cimg src\u003d\"images/zhikaiong2001.png\" width\u003d\"150px\" height \u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"[[github](https://github.com/zhikaiong2001)]","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"[[portfolio](team/zhikaiong2001.md)]","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"headcube1"},"content":"[email: e0968830@u.nus.edu]","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"* Responsibilities: Ui, Docs, Coding","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"headcube1"},"content":"### Wesley Weishen Yu","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"\u003cimg src\u003d\"images/headcube1.png\" width\u003d\"150px\" height \u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"headcube1"},"content":"[[github](https://github.com/headcube1)]","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"headcube1"},"content":"[[portfolio](team/wesleyyu.md)]","lastModifiedDate":"2024-03-02"},{"lineNumber":65,"author":{"gitId":"headcube1"},"content":"[email: e0959950@u.nus.edu]","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"headcube1"},"content":"* Responsibilities: UI, Docs, Coding","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"headcube1":12,"yashpola":6,"-":34,"gingerbreaf":3,"zhikaiong2001":4,"macareonie":9}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"# Tether Developer Guide","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"macareonie"},"content":"**Target user profile**: \u003cbr\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":276,"author":{"gitId":"macareonie"},"content":"Hiring manager who:","lastModifiedDate":"2024-03-03"},{"lineNumber":277,"author":{"gitId":"macareonie"},"content":"* cannot afford a professional Applicant Tracking System (ATS)","lastModifiedDate":"2024-03-03"},{"lineNumber":278,"author":{"gitId":"macareonie"},"content":"* has a need to manage a significant number of job applicants and their interview details","lastModifiedDate":"2024-03-03"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"macareonie"},"content":"**Value proposition**: \u003cbr\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":285,"author":{"gitId":"macareonie"},"content":"Free alternative for tracking interview datetimes, applicant contacts and their application statuses.","lastModifiedDate":"2024-03-03"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                           | I want to …​                             | So that I can…​                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"macareonie"},"content":"|----------|-------------------------------------------------------------------|------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2024-03-19"},{"lineNumber":294,"author":{"gitId":"macareonie"},"content":"| `* * *`  | new user                                                          | see usage instructions                   | refer to instructions when I forget how to use the Tether                 |","lastModifiedDate":"2024-03-19"},{"lineNumber":295,"author":{"gitId":"macareonie"},"content":"| `* * *`  | user                                                              | add a new person (applicant/interviewer) |                                                                           |","lastModifiedDate":"2024-03-03"},{"lineNumber":296,"author":{"gitId":"macareonie"},"content":"| `* * *`  | user                                                              | delete a person (applicant/interviewer)  | remove person entries that I no longer need                               |","lastModifiedDate":"2024-03-03"},{"lineNumber":297,"author":{"gitId":"macareonie"},"content":"| `* * *`  | user                                                              | add a new interview                      |                                                                           |","lastModifiedDate":"2024-03-03"},{"lineNumber":298,"author":{"gitId":"macareonie"},"content":"| `* * *`  | user                                                              | delete an interviewer                    | remove interview entries that I no longer need                            |","lastModifiedDate":"2024-03-03"},{"lineNumber":299,"author":{"gitId":"macareonie"},"content":"| `* *`    | user with many persons in Tether                                  | find a person by name/email              | locate details of a person without having to go through the entire list   |","lastModifiedDate":"2024-03-19"},{"lineNumber":300,"author":{"gitId":"macareonie"},"content":"| `* *`    | user with many interviews in Tether                               | filter interviews by date                | locate details of interviews without having to go through the entire list |","lastModifiedDate":"2024-03-19"},{"lineNumber":301,"author":{"gitId":"macareonie"},"content":"| `* *`    | user with many applicants of varying application status in Tether | tag applicants                           | identify applicant\u0027s application progress                                 |","lastModifiedDate":"2024-03-19"},{"lineNumber":302,"author":{"gitId":"macareonie"},"content":"| `* `     | user collaborating with other Tether users                        | share an applicant\u0027s details             | update other hiring managers on applicant details                         |","lastModifiedDate":"2024-03-19"},{"lineNumber":303,"author":{"gitId":"macareonie"},"content":"| `* `     | user who does not want to clutter local hard drive with files     | store applicant\u0027s resume                 | view applicant\u0027s resume in Tether                                         |","lastModifiedDate":"2024-03-19"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"macareonie"},"content":"(For all use cases below, the **System** is the `Tether` and the **Actor** is the `Hiring Manager`, unless specified otherwise)","lastModifiedDate":"2024-03-19"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"yashpola"},"content":"**Use case: UC01 - Add a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"yashpola"},"content":"2.  System shows a list of persons","lastModifiedDate":"2024-03-03"},{"lineNumber":317,"author":{"gitId":"yashpola"},"content":"3.  User requests to add a new person to the list","lastModifiedDate":"2024-03-03"},{"lineNumber":318,"author":{"gitId":"yashpola"},"content":"4.  System adds the person and updates the displayed list","lastModifiedDate":"2024-03-03"},{"lineNumber":319,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":320,"author":{"gitId":"yashpola"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":321,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":322,"author":{"gitId":"yashpola"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":323,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":324,"author":{"gitId":"yashpola"},"content":"* 3a. Any of the given name, email, phone number are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":325,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":326,"author":{"gitId":"yashpola"},"content":"    * 3a1. System shows an error message indicating invalid name/email/phone number.","lastModifiedDate":"2024-03-03"},{"lineNumber":327,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":328,"author":{"gitId":"yashpola"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":329,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":330,"author":{"gitId":"yashpola"},"content":"**Use case: UC02 - Delete a person by phone number**","lastModifiedDate":"2024-03-03"},{"lineNumber":331,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":332,"author":{"gitId":"yashpola"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":333,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":334,"author":{"gitId":"yashpola"},"content":"1.  User requests to list persons","lastModifiedDate":"2024-03-03"},{"lineNumber":335,"author":{"gitId":"yashpola"},"content":"2.  System shows a list of persons","lastModifiedDate":"2024-03-03"},{"lineNumber":336,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"yashpola"},"content":"4.  System deletes the person","lastModifiedDate":"2024-03-03"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":345,"author":{"gitId":"yashpola"},"content":"    * 2a1. System shows an error message indicating no person in list.","lastModifiedDate":"2024-03-03"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":347,"author":{"gitId":"yashpola"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":349,"author":{"gitId":"yashpola"},"content":"* 3a. The given phone number is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":350,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":351,"author":{"gitId":"yashpola"},"content":"    * 3a1. System shows an error message indicating person not found.","lastModifiedDate":"2024-03-03"},{"lineNumber":352,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":353,"author":{"gitId":"yashpola"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":354,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":355,"author":{"gitId":"yashpola"},"content":"**Use case: UC03 - Tag an applicant**","lastModifiedDate":"2024-03-03"},{"lineNumber":356,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":357,"author":{"gitId":"yashpola"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":358,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":359,"author":{"gitId":"yashpola"},"content":"1.  User requests to list persons","lastModifiedDate":"2024-03-03"},{"lineNumber":360,"author":{"gitId":"yashpola"},"content":"2.  System shows a list of persons","lastModifiedDate":"2024-03-03"},{"lineNumber":361,"author":{"gitId":"yashpola"},"content":"3.  User requests to tag a specific applicant, using their name/email, with an application status","lastModifiedDate":"2024-03-03"},{"lineNumber":362,"author":{"gitId":"yashpola"},"content":"4.  System tags the requested applicant with the given application status","lastModifiedDate":"2024-03-03"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"yashpola"},"content":"    * 2a1. System shows an error message indicating no applicant in list.","lastModifiedDate":"2024-03-03"},{"lineNumber":371,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":372,"author":{"gitId":"yashpola"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":373,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":374,"author":{"gitId":"yashpola"},"content":"* 3a. The given name/email is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":375,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":376,"author":{"gitId":"yashpola"},"content":"    * 3a1. System shows an error message indicating applicant not found.","lastModifiedDate":"2024-03-03"},{"lineNumber":377,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":378,"author":{"gitId":"yashpola"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":379,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":380,"author":{"gitId":"yashpola"},"content":"* 4a. The tag is already added for the applicant.","lastModifiedDate":"2024-03-03"},{"lineNumber":381,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":382,"author":{"gitId":"yashpola"},"content":"    * 4a1. System shows an error message indicating tag is already added.","lastModifiedDate":"2024-03-03"},{"lineNumber":383,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":384,"author":{"gitId":"yashpola"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":385,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":386,"author":{"gitId":"yashpola"},"content":"**Use case: UC04 - Find a person by name/email**","lastModifiedDate":"2024-03-03"},{"lineNumber":387,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":388,"author":{"gitId":"yashpola"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":389,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":390,"author":{"gitId":"yashpola"},"content":"1.  User requests to list persons","lastModifiedDate":"2024-03-03"},{"lineNumber":391,"author":{"gitId":"yashpola"},"content":"2.  System shows a list of persons","lastModifiedDate":"2024-03-03"},{"lineNumber":392,"author":{"gitId":"yashpola"},"content":"3.  User requests to find a specific person in the list by their name or email","lastModifiedDate":"2024-03-03"},{"lineNumber":393,"author":{"gitId":"yashpola"},"content":"4.  System updates the list to only display the requested person","lastModifiedDate":"2024-03-03"},{"lineNumber":394,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"yashpola"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":398,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":399,"author":{"gitId":"yashpola"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":400,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":401,"author":{"gitId":"macareonie"},"content":"    * 2a1. Tether shows an error message indicating no person in list.","lastModifiedDate":"2024-03-19"},{"lineNumber":402,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":403,"author":{"gitId":"yashpola"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":404,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":405,"author":{"gitId":"yashpola"},"content":"* 3a. The given name/email is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"macareonie"},"content":"    * 3a1. Tether shows an error message indicating person not found.","lastModifiedDate":"2024-03-19"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"yashpola"},"content":"3.  Should be able to display multiple lists of applicants/interviews/interviewers without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-03"},{"lineNumber":418,"author":{"gitId":"yashpola"},"content":"4.  Should be responsive in all functionality, especially updating and displaying the list after each request.","lastModifiedDate":"2024-03-03"},{"lineNumber":419,"author":{"gitId":"yashpola"},"content":"5.  Should be able to reliably preserve application data across multiple sessions without risk of data loss/corruption.","lastModifiedDate":"2024-03-03"},{"lineNumber":420,"author":{"gitId":"yashpola"},"content":"6.  Should not leak applicant details, especially email and phone number, outside the application.","lastModifiedDate":"2024-03-03"},{"lineNumber":421,"author":{"gitId":"yashpola"},"content":"7.  Should provide specific error messages to guide users on intended usage of features.","lastModifiedDate":"2024-03-03"},{"lineNumber":422,"author":{"gitId":"yashpola"},"content":"8.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-03"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"macareonie"},"content":"* **Application Status**: These statuses comprise resume review, pending interview, completed interview, accepted, rejected and waiting list.","lastModifiedDate":"2024-03-03"},{"lineNumber":429,"author":{"gitId":"macareonie"},"content":"* **Application Tracking System**: A software application used by organizations to manage and streamline the recruitment and hiring process","lastModifiedDate":"2024-03-03"},{"lineNumber":430,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":431,"author":{"gitId":"macareonie"},"content":"* **Person**: A person can refer to either an `Applicant` or an `Interviewer`","lastModifiedDate":"2024-03-03"},{"lineNumber":432,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":435,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":443,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":444,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yashpola":77,"-":386,"macareonie":25}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"# Tether User Guide","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"Tether is a **desktop app for managing contacts, optimized for use via a Line Interface** (CLI)","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"If you can type fast, Tether can get your hiring management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"1. Download the latest `tether.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar tether.jar`","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"   command to run the application.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"   ![Ui](images/UpdatedUi.png)","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"* Parameters must be in any order.\u003cbr\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"  e.g. if the command specifies `n/NAME p/PHONE e/EMAIL`, they need not be typed in that order.","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"* Commands are case-sensitive.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":" e.g if the user types `ADD_APPLICANT`, it is interpreted as a invalid command.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit`) will be","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"  as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"## Adding an applicant: `add_applicant`","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"Adds an applicant to Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"Format: `add_applicant n/NAME p/PHONE e/EMAIL [t/TAG]`","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"Examples:","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"* `add_applicant n/John Doe p/81239123 e/johndoe123@gmail.com`","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"* `add_applicant n/John Doe p/81239123 e/johndoe123@gmail.com t/friends t/cool`","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"zhikaiong2001"},"content":"## Adding a interviewer: `add_interviewer`","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"Adds an interviewer to the Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"Format: `add_interviewer n/NAME p/PHONE e/EMAIL [t/TAG]`","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"zhikaiong2001"},"content":"* `add_interviewer n/John Doe p/81239123 e/johndoe123@gmail.com`","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"zhikaiong2001"},"content":"* `add_interviewer n/John Doe p/81239123 e/johndoe123@gmail.com t/friends t/cool`","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"zhikaiong2001"},"content":"## Adding a interview: `add_interview`","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"macareonie"},"content":"Adds an interview to the Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"zhikaiong2001"},"content":"Format: `add_interview desc/DESCRIPTION date/DATE st/START TIME et/END TIME a/APPLICANT\u0027S","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"zhikaiong2001"},"content":"    PHONE NUMBER i/INTERVIEWER\u0027S PHONE NUMBER`","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"zhikaiong2001"},"content":"* `add_interview desc/interview Round 1 date/2024-11-11 st/12:00 et/15:00 a/81239123 i/91238123`","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"zhikaiong2001"},"content":"## Listing all the interviews: `list_interviews`","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"macareonie"},"content":"Lists all the interviews in Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"zhikaiong2001"},"content":"Example: `list_interviews` would list all existing interviews.","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"zhikaiong2001"},"content":"## Deleting an applicant/interviewer : `delete_person`","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"macareonie"},"content":"Deletes the specified applicant/interviewer based on their phone number from Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"zhikaiong2001"},"content":"Format: `delete_person \u003cphone number\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"zhikaiong2001"},"content":"* Deletes the person with the specified phone number.","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"zhikaiong2001"},"content":"* If there exists an applicant/interviewer with phone number 81239123, `delete_person 81239123` would delete that","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"zhikaiong2001"},"content":"  applicant/interviewer.","lastModifiedDate":"2024-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"zhikaiong2001"},"content":"## Deleting an interview : `delete_interview`","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"macareonie"},"content":"Deletes the specified interview from Tether based on **index**.","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"zhikaiong2001"},"content":"Format: `delete_interview \u003cinterview index\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"macareonie"},"content":"* `delete_interview 1` would delete the first interview in Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"headcube1"},"content":"## Exiting the program : `exit`","lastModifiedDate":"2024-03-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"headcube1"},"content":"## Saving the data","lastModifiedDate":"2024-03-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"zhikaiong2001"},"content":"Tether\u0027s applicant/interviewer data are saved in the hard disk automatically after any command that changes the data.","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"zhikaiong2001"},"content":"There is no need to save manually.","lastModifiedDate":"2024-03-03"},{"lineNumber":132,"author":{"gitId":"zhikaiong2001"},"content":"**However, saving of interview data is still in progress.**","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":134,"author":{"gitId":"zhikaiong2001"},"content":"## More features to come `[coming in v1.3]`","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"zhikaiong2001"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2024-03-03"},{"lineNumber":144,"author":{"gitId":"zhikaiong2001"},"content":"the data of your previous Tether home folder.","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"zhikaiong2001"},"content":"| Action               | Format, Examples                                                                                                                                                                                                 |","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"zhikaiong2001"},"content":"|----------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"zhikaiong2001"},"content":"| **Add Applicant**    | `add_applicant n/NAME p/PHONE e/EMAIL [t/TAG]` \u003cbr\u003e e.g., `add_applicant n/John Doe p/81239123 e/johndoe123@gmail.com`                                                                                           |","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"zhikaiong2001"},"content":"| **Add Interviewer**  | `add_interviewer n/NAME p/PHONE e/EMAIL [t/TAG]` \u003cbr\u003e e.g., `add_interviewer n/Jane Doe p/81239123 e/janed@example.com`                                                                                          |","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"zhikaiong2001"},"content":"| **Add Interview**    | `add_interview desc/DESCRIPTION date/DATE st/START TIME et/END TIME a/APPLICANT PHONE i/INTERVIEWER PHONE`\u003cbr\u003e e.g., `add_interview desc/Interview with John date/2024-11-11 st/10:00 et/11:00 a/81239123 i/91238123` |","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"zhikaiong2001"},"content":"| **Delete Person**    | `delete_person PHONE` \u003cbr\u003e e.g., `delete_person 81239123`                                                                                                                                                        |","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"zhikaiong2001"},"content":"| **Delete Interview** | `delete_interview INDEX`\u003cbr\u003e e.g., `delete_interview 1`                                                                                                                                                          |","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"zhikaiong2001"},"content":"| **List Interviews**  | `list_interviews`                                                                                                                                                                                                |","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"zhikaiong2001"},"content":"| **Exit**             | `exit`                                                                                                                                                                                                           |","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"zhikaiong2001"},"content":"| **Help**             | `help`                                                                                                                                                                                                            |","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"headcube1":2,"-":95,"zhikaiong2001":53,"macareonie":11}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eTether\u003c/a\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"-":66,"macareonie":1}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"user -[USER_COLOR]\u003e ui : \"delete_person 98765432\"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete_person 98765432\")","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"macareonie":2}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"Enum \"\u003c\u003cenumeration\u003e\u003e\\nType\" as Type","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":10,"author":{"gitId":"headcube1"},"content":"AddressBook *-right-\u003e \"1\" UniqueInterviewList","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"headcube1"},"content":"UniqueInterviewList -right-\u003e Interview","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"Person *--\u003e Type","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"headcube1"},"content":"Interview *--\u003e Interviewer","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"headcube1"},"content":"Interview *--\u003e Applicant","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"Applicant -up--|\u003ePerson","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"Interviewer -up--|\u003ePerson","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"headcube1":5,"yashpola":6,"-":20}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"[-\u003e LogicManager : execute(\"delete_person 98765432\")","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete_person 98765432\")","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"98765432\")","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"DeleteCommand -\u003e Model : deletePerson(p)","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":66,"macareonie":4}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"Enum \"\u003c\u003cenumeration\u003e\u003e\\nType\" as Type","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"gingerbreaf"},"content":"Class UniqueInterviewList","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"Class Applicant","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"Class Interviewer","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"Enum Type","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"gingerbreaf"},"content":"AddressBook *--\u003e \"1\" UniqueInterviewList","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"gingerbreaf"},"content":"UniqueInterviewList --\u003e \"~* all\" Interview","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"gingerbreaf"},"content":"Interview --\u003e \"2\" Person","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"Person *--\u003e Type","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"Applicant -up--|\u003ePerson","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"Interviewer -up--|\u003ePerson","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yashpola":8,"-":50,"gingerbreaf":4}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"Class JsonAdaptedInterview","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedInterview","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"JsonAdaptedInterview --\u003e \"2\" JsonAdaptedPerson","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"zhikaiong2001":6}},{"path":"docs/team/jiangbowei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gingerbreaf"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"gingerbreaf"},"content":"  layout: default.md","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"gingerbreaf"},"content":"  title: \"Bowei\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"gingerbreaf"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"### Project: Tether","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"Tether is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"gingerbreaf":7,"macareonie":2}},{"path":"docs/team/ryanchiang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"  layout: default.md","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"  title: \"Ryan Chiang\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"### Project: Tether","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"Tether is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"macareonie":10}},{"path":"docs/team/wesleyyu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"headcube1"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"headcube1"},"content":"  layout: default.md","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"headcube1"},"content":"  title: \"Wesley\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"headcube1"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"### Project: Tether","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"Tether is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"headcube1":7,"macareonie":2}},{"path":"docs/team/yashwit.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"layout: default.md","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"title: \"Yash\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"### Project: Tether","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"Tether is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"yashpola":7,"macareonie":2}},{"path":"docs/team/zhikaiong2001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"  layout: default.md","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"  title: \"Ong Zhi Kai\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"### Project: Tether","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"Tether is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"zhikaiong2001":7,"macareonie":2}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Tether ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"macareonie"},"content":"        logger.info(\"Starting Tether \" + MainApp.VERSION);","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":184,"macareonie":2}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"    /** Returns an unmodifiable view of the filtered list of interviews */","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":50,"zhikaiong2001":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"zhikaiong2001"},"content":"        return model.getFilteredInterviewList();","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":88,"zhikaiong2001":6}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_PERSON_NOT_IN_LIST \u003d \"The person you are looking for is not on the list\";","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"headcube1"},"content":"    public static final String MESSAGE_INCORRECT_APPLICANT_PHONE_NUMBER \u003d \"The phone number you have keyed is is \"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"headcube1"},"content":"            + \"not an applicant phone number.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"headcube1"},"content":"    public static final String MESSAGE_INCORRECT_INTERVIEWER_PHONE_NUMBER \u003d \"The phone number you have keyed is is \"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"headcube1"},"content":"            + \"not an interviewer phone number.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"headcube1"},"content":"    public static final String MESSAGE_INCORRECT_INTERVIEWER_AND_APPLICANT_PHONE_NUMBER \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"headcube1"},"content":"            \"The phone number you have keyed is is not an applicant nor an interviewer phone number.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_INCORRECT_STATUS_APPLICANT \u003d \"Only applicants can be given this status\";","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_INCORRECT_STATUS_INTERVIEWER \u003d \"Only interviewers can be given this status\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"headcube1"},"content":"    public static final String MESSAGE_INVALID_END_TIME \u003d \"The end time is before the start time!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"gingerbreaf"},"content":"    public static final String MESSAGE_INTERVIEW_NOT_IN_LIST \u003d \"The interview you are looking for is not on the list\";","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"gingerbreaf"},"content":"    public static final String MESSAGE_NOT_INTEGER \u003d \"The provided argument is not an integer\";","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    public static final String MESSAGE_NOT_DATE \u003d \"The provided argument is not a valid date\";","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"macareonie"},"content":"     * Formats the {@code interview} for display to the user.","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"gingerbreaf"},"content":"    public static String formatInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"gingerbreaf"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"headcube1"},"content":"        builder.append(\"Applicant: \")","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"headcube1"},"content":"                .append(interview.getApplicant().getName())","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"gingerbreaf"},"content":"                .append(\" Interviewer: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"gingerbreaf"},"content":"                .append(interview.getInterviewer().getName())","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"gingerbreaf"},"content":"                .append(\" Date: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"gingerbreaf"},"content":"                .append(interview.getDate())","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"gingerbreaf"},"content":"                .append(\" From: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"gingerbreaf"},"content":"                .append(interview.getStartTime())","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"gingerbreaf"},"content":"                .append(\" to: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"gingerbreaf"},"content":"                .append(interview.getEndTime());;","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"gingerbreaf"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"headcube1":9,"yashpola":2,"-":49,"gingerbreaf":17,"zhikaiong2001":1,"macareonie":4}},{"path":"src/main/java/seedu/address/logic/commands/AddApplicantPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" * Adds an applicant to Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"gingerbreaf"},"content":"public class AddApplicantPersonCommand extends AddPersonCommand {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"gingerbreaf"},"content":"    public static final String COMMAND_WORD \u003d AddPersonCommand.COMMAND_WORD + \"_applicant\";","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an applicant to Tether. \"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"gingerbreaf"},"content":"            + AddPersonCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New applicant added: %1$s\";","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This applicant already exists in Tether.\"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"            + \" Do ensure phone number is unique\";","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"     * Creates an AddApplicantCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"gingerbreaf"},"content":"    public AddApplicantPersonCommand(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        super(person);","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        if (model.hasPerson(toAdd) || model.hasPersonWithSamePhone(toAdd)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"            return true;","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-10"},{"lineNumber":53,"author":{"gitId":"gingerbreaf"},"content":"        if (!(other instanceof AddApplicantPersonCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"            return false;","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand otherAddPersonCommand \u003d (AddApplicantPersonCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"gingerbreaf"},"content":"        return toAdd.equals(otherAddPersonCommand.toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":60,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"macareonie"},"content":"    public String toString() {","lastModifiedDate":"2024-03-10"},{"lineNumber":63,"author":{"gitId":"macareonie"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-10"},{"lineNumber":64,"author":{"gitId":"macareonie"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"macareonie"},"content":"                .toString();","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":67,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"yashpola":2,"gingerbreaf":7,"macareonie":58}},{"path":"src/main/java/seedu/address/logic/commands/AddApplicantStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":" * Parses input arguments and creates a new AddApplicantCommandStatus object","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"public class AddApplicantStatusCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    public static final String COMMAND_WORD \u003d \"applicant_status\";","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the status of the applicant identified \"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"            + \"by the phone number used in the command. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            + \"Existing status will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            + \"Parameters: PHONE (must be at least 3 digits) \"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"            + PREFIX_STATUS + \"(must be either \\\"resume review\\\", \\\"pending interview\\\", \\\"completed interview\\\"\"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"            + \"\\\"waiting list\\\", \\\"accepted\\\", or \\\"rejected\\\") [STATUS]\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            + \"Example: \" + COMMAND_WORD + \" 98362254 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"            + PREFIX_STATUS + \"accepted\";","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_ADD_STATUS_SUCCESS \u003d \"Added status to Applicant: %1$s\";","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    private final Phone phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"    private final ApplicantStatus status;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"     * @param phone of the person in the filtered person list to edit the status","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"     * @param status of the person to be updated to","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    public AddApplicantStatusCommand(Phone phone, ApplicantStatus status) {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        requireAllNonNull(phone, status);","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        Person personToEdit;","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"            personToEdit \u003d lastShownList","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                    .stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"                    .parallel()","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"                    .filter(person -\u003e person.getPhone().equals(phone))","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"                    .reduce((person, prev) -\u003e person).get();","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"            throw new CommandException(Messages.MESSAGE_INCORRECT_APPLICANT_PHONE_NUMBER);","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"        if (!personToEdit.getPersonType().equals(\"APPLICANT\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"            throw new CommandException(Messages.MESSAGE_INCORRECT_STATUS_APPLICANT);","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"        Applicant editedPerson \u003d new Applicant(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"                personToEdit.getRemark(), status, personToEdit.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"     * Generates a command execution success message for adding the status","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"        return String.format(MESSAGE_ADD_STATUS_SUCCESS, personToEdit);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"        if (!(other instanceof AddApplicantStatusCommand)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"        // state check","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"        AddApplicantStatusCommand e \u003d (AddApplicantStatusCommand) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"yashpola"},"content":"        return phone.equals(e.phone)","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"yashpola"},"content":"                \u0026\u0026 status.equals(e.status);","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":104}},{"path":"src/main/java/seedu/address/logic/commands/AddInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"headcube1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"headcube1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"headcube1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_END_TIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICANT;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEWER;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"headcube1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"headcube1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"headcube1"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":" * Adds an Interview to Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"headcube1"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"headcube1"},"content":"public class AddInterviewCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"headcube1"},"content":"    public static final String COMMAND_WORD \u003d AddPersonCommand.COMMAND_WORD + \"_interview\";","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_INFORMATION \u003d \"Parameters: \"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"            + PREFIX_START_TIME + \"START TIME \"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"            + PREFIX_END_TIME + \"END TIME \"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"            + PREFIX_APPLICANT + \"APPLICANT PHONE NUMBER\"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"            + PREFIX_INTERVIEWER + \"INTERVIEWER PHONE NUMBER \" + \"\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"            + PREFIX_DESCRIPTION + \"technical interview \"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"            + PREFIX_DATE + \"2022-11-11 \"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"            + PREFIX_START_TIME + \"10:00 \"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"            + PREFIX_END_TIME + \"11:00 \"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"            + PREFIX_APPLICANT + \"88888888\"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"            + PREFIX_INTERVIEWER + \"88889999\";","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an interview to Tether. \"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"            + MESSAGE_INFORMATION;","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"headcube1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Interview added: %1$s\";","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"This Interview already exists in Tether.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"headcube1"},"content":"    private String description;","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"headcube1"},"content":"    private Phone applicant;","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"headcube1"},"content":"    private Phone interviewer;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"headcube1"},"content":"    // Format YYYY-MM-DD","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"headcube1"},"content":"    private LocalDate date;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"headcube1"},"content":"    // Format HH:mm","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"headcube1"},"content":"    private LocalTime startTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"headcube1"},"content":"    private LocalTime endTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"headcube1"},"content":"    private Interview interview;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"headcube1"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"headcube1"},"content":"     * Creates an AddInterviewCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"headcube1"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"macareonie"},"content":"    public AddInterviewCommand(String description, Phone applicant, Phone interviewer, LocalDate date,","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"macareonie"},"content":"                               LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"headcube1"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"headcube1"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"headcube1"},"content":"        this.interviewer \u003d interviewer;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"headcube1"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"headcube1"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"headcube1"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"headcube1"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"headcube1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"headcube1"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"headcube1"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"headcube1"},"content":"        boolean isFoundApplicant \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"headcube1"},"content":"        boolean isFoundInterviewer \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"headcube1"},"content":"        boolean isCorrectApplicantPhone \u003d true;","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"headcube1"},"content":"        boolean isCorrectInterviewerPhone \u003d true;","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"headcube1"},"content":"        Phone targetApplicantPhone \u003d applicant;","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"headcube1"},"content":"        Phone targetInterviewerPhone \u003d interviewer;","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"headcube1"},"content":"        Person applicantSearch \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"headcube1"},"content":"        Person interviewerSearch \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"headcube1"},"content":"        for (Person p : lastShownList) {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"headcube1"},"content":"            if (p.getPhone().equals(targetApplicantPhone)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"headcube1"},"content":"                isFoundApplicant \u003d true;","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"headcube1"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"headcube1"},"content":"            if (isFoundApplicant) {","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"headcube1"},"content":"                if (p.getPersonType().equals(\"APPLICANT\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"headcube1"},"content":"                    isCorrectApplicantPhone \u003d false;","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"headcube1"},"content":"                }","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"headcube1"},"content":"                applicantSearch \u003d p;","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"headcube1"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"headcube1"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"headcube1"},"content":"        for (Person p : lastShownList) {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"headcube1"},"content":"            if (p.getPhone().equals(targetInterviewerPhone)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"headcube1"},"content":"                isFoundInterviewer \u003d true;","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"headcube1"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"headcube1"},"content":"            if (isFoundInterviewer) {","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"headcube1"},"content":"                if (p.getPersonType().equals(\"INTERVIEWER\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"headcube1"},"content":"                    isCorrectInterviewerPhone \u003d false;","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"headcube1"},"content":"                }","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"headcube1"},"content":"                interviewerSearch \u003d p;","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"headcube1"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"headcube1"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"headcube1"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"headcube1"},"content":"            throw new CommandException(MESSAGE_INVALID_END_TIME);","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"headcube1"},"content":"        if (!isFoundApplicant || !isFoundInterviewer) {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"headcube1"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_IN_LIST);","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"headcube1"},"content":"        if (isCorrectApplicantPhone \u0026\u0026 isCorrectInterviewerPhone) {","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"headcube1"},"content":"            throw new CommandException(Messages.MESSAGE_INCORRECT_INTERVIEWER_AND_APPLICANT_PHONE_NUMBER);","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"headcube1"},"content":"        if (isCorrectApplicantPhone) {","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"headcube1"},"content":"            throw new CommandException(Messages.MESSAGE_INCORRECT_APPLICANT_PHONE_NUMBER);","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"headcube1"},"content":"        if (isCorrectInterviewerPhone) {","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"headcube1"},"content":"            throw new CommandException(Messages.MESSAGE_INCORRECT_INTERVIEWER_PHONE_NUMBER);","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"headcube1"},"content":"        this.interview \u003d new Interview(applicantSearch, interviewerSearch, date, startTime, endTime, description);","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"headcube1"},"content":"        if (model.hasInterview(interview)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"headcube1"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"headcube1"},"content":"        model.addInterview(interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"yashpola"},"content":"        applicantSearch.updateCurrentStatusToReflectInterview(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"yashpola"},"content":"        interviewerSearch.updateCurrentStatusToReflectInterview(model, applicantSearch);","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"headcube1"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, \"\\n\" + Messages.formatInterview(interview)));","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"headcube1"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"headcube1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"headcube1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"headcube1"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"headcube1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"headcube1"},"content":"        if (!(other instanceof AddInterviewCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"headcube1"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"headcube1"},"content":"        AddInterviewCommand otherInterviewCommmand \u003d (AddInterviewCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"headcube1"},"content":"        return interview.equals(otherInterviewCommmand.interview);","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"headcube1"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"headcube1"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"headcube1"},"content":"        return \"Description: \" + description + \" applicant: \" + applicant.toString() + \" interviewer: \"","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"headcube1"},"content":"                + interviewer.toString() + \" date: \" + date.toString() + \" start: \" + startTime.toString() + \" end: \"","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"headcube1"},"content":"                + endTime.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"headcube1"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"headcube1":140,"yashpola":2,"macareonie":31}},{"path":"src/main/java/seedu/address/logic/commands/AddInterviewerPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" * Adds an interviewer to Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"gingerbreaf"},"content":"public class AddInterviewerPersonCommand extends AddPersonCommand {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"gingerbreaf"},"content":"    public static final String COMMAND_WORD \u003d AddPersonCommand.COMMAND_WORD + \"_interviewer\";","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an interviewer to Tether. \"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"gingerbreaf"},"content":"            + AddPersonCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New interviewer added: %1$s\";","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This interviewer already exists in the Tether.\"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"            + \" Do ensure phone number is unique\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"     * Creates an AddInterviewerCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"gingerbreaf"},"content":"    public AddInterviewerPersonCommand(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        super(person);","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        if (model.hasPerson(toAdd) || model.hasPersonWithSamePhone(toAdd)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"            return true;","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-10"},{"lineNumber":51,"author":{"gitId":"gingerbreaf"},"content":"        if (!(other instanceof AddInterviewerPersonCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-03-10"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand otherAddPersonCommand \u003d (AddPersonCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"gingerbreaf"},"content":"        return toAdd.equals(otherAddPersonCommand.toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-10"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"                .toString();","lastModifiedDate":"2024-03-10"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"yashpola":55,"gingerbreaf":7,"macareonie":3}},{"path":"src/main/java/seedu/address/logic/commands/AddInterviewerStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":" * Parses input arguments and creates a new AddInterviewerCommandStatus object","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"public class AddInterviewerStatusCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    public static final String COMMAND_WORD \u003d \"interviewer_status\";","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the status of the interviewer identified \"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"            + \"by the phone number used in the command. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            + \"Existing status will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            + \"Parameters: PHONE (must be at least 3 digits) \"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"            + PREFIX_STATUS + \"(must be either \\\"free\\\" or \\\"interview with [APPLICANT NAME]\\\") [STATUS]\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"            + \"Example: \" + COMMAND_WORD + \" 98362254 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            + PREFIX_STATUS + \"free\";","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_ADD_STATUS_SUCCESS \u003d \"Added status to Interviewer: %1$s\";","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    private final Phone phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"    private final InterviewerStatus status;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"     * @param phone of the person in the filtered person list to edit the status","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"     * @param status of the person to be updated to","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    public AddInterviewerStatusCommand(Phone phone, InterviewerStatus status) {","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"        requireAllNonNull(phone, status);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"        Person personToEdit;","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"            personToEdit \u003d lastShownList","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"                    .stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                    .parallel()","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"                    .filter(person -\u003e person.getPhone().equals(phone))","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"                    .reduce((person, prev) -\u003e person).get();","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            throw new CommandException(Messages.MESSAGE_INCORRECT_INTERVIEWER_PHONE_NUMBER);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        if (!personToEdit.getPersonType().equals(\"INTERVIEWER\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"            throw new CommandException(Messages.MESSAGE_INCORRECT_STATUS_INTERVIEWER);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"        Interviewer editedPerson \u003d new Interviewer(personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"                personToEdit.getEmail(), personToEdit.getRemark(), status, personToEdit.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"     * Generates a command execution success message for adding the status","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"        return String.format(MESSAGE_ADD_STATUS_SUCCESS, personToEdit);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"        if (!(other instanceof AddInterviewerStatusCommand)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"        // state check","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"        AddInterviewerStatusCommand e \u003d (AddInterviewerStatusCommand) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"        return phone.equals(e.phone)","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"yashpola"},"content":"                \u0026\u0026 status.equals(e.status);","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":103}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" * Adds a person to Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"gingerbreaf"},"content":"public abstract class AddPersonCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_USAGE \u003d \"Parameters: \"","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    protected final Person toAdd;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"gingerbreaf"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yashpola":2,"-":37,"gingerbreaf":2,"macareonie":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"gingerbreaf"},"content":"    public static final String COMMAND_WORD \u003d \"delete_person\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"            + \": Deletes the person identified by the phone number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"            + \"Parameters: Phone\\n\"","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"            + \"Example: \" + COMMAND_WORD + \" 87652533\";","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"    private final Phone targetPhone;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"    public DeleteCommand(Phone targetPhone) {","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        this.targetPhone \u003d targetPhone;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"        Person personToDelete \u003d null;","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        for (Person p : lastShownList) {","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"            if (p.getPhone().equals(targetPhone)) {","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"                personToDelete \u003d p;","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"                isFound \u003d true;","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"                break;","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"            }","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"        if (!isFound) {","lastModifiedDate":"2024-03-10"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_IN_LIST);","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"        return targetPhone.equals(otherDeleteCommand.targetPhone);","lastModifiedDate":"2024-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"macareonie"},"content":"                .add(\"targetPhone\", targetPhone)","lastModifiedDate":"2024-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":56,"gingerbreaf":1,"macareonie":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"public class DeleteInterviewCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    public static final String COMMAND_WORD \u003d \"delete_interview\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"            + \": Deletes the Interview identified by the index in the displayed interview list.\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"            + \"Parameters: Index\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    public static final String MESSAGE_DELETE_INTERVIEW_SUCCESS \u003d \"Interview Deleted \";","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"headcube1"},"content":"    private Integer targetInt;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"    public DeleteInterviewCommand(int targetInt) {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"        this.targetInt \u003d targetInt;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"        List\u003cInterview\u003e lastShownList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"        Interview interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"            interview \u003d lastShownList.get(targetInt);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"            System.out.println(\"index wrong\");","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"            throw new CommandException(Messages.MESSAGE_INTERVIEW_NOT_IN_LIST);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"        model.deleteInterview(interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        interview.getApplicant().revertCurrentStatus(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        interview.getInterviewer().updateCurrentStatusToReflectInterview(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"        return new CommandResult(MESSAGE_DELETE_INTERVIEW_SUCCESS","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"                + \"\\nInformation about delete interview: \\n\" + Messages.formatInterview(interview));","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"headcube1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"headcube1"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"headcube1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"headcube1"},"content":"        if (!(other instanceof DeleteInterviewCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"headcube1"},"content":"        DeleteInterviewCommand otherDeleteInterviewCommand \u003d (DeleteInterviewCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"headcube1"},"content":"        return targetInt.equals(otherDeleteInterviewCommand.targetInt);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"zhikaiong2001"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"                .add(\"targetINT\", targetInt)","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"zhikaiong2001"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"headcube1":11,"yashpola":4,"zhikaiong2001":58,"macareonie":3}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.InterviewerState;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.Type;","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"macareonie"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"macareonie"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark(); // edit command does not allow editing remarks","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"yashpola"},"content":"        if (personToEdit.getPersonType().equals(Type.APPLICANT.toString())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"yashpola"},"content":"            return new Applicant(updatedName, updatedPhone, updatedEmail, updatedRemark,","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"yashpola"},"content":"                    new ApplicantStatus(ApplicantState.STAGE_ONE.toString()), updatedTags);","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"yashpola"},"content":"        } else if (personToEdit.getPersonType().equals(Type.INTERVIEWER.toString())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"yashpola"},"content":"            return new Interviewer(updatedName, updatedPhone, updatedEmail, updatedRemark,","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"yashpola"},"content":"                    new InterviewerStatus(InterviewerState.FREE.toString()), updatedTags);","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"macareonie"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedRemark, updatedTags);","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"macareonie"},"content":"        // short circuit if same object","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"macareonie"},"content":"        // state check","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"macareonie"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"macareonie"},"content":"        return index.equals(e.index)","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"macareonie"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"macareonie"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2024-02-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"macareonie"},"content":"            // short circuit if same object","lastModifiedDate":"2024-02-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"macareonie"},"content":"            // state check","lastModifiedDate":"2024-02-27"},{"lineNumber":219,"author":{"gitId":"macareonie"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2024-02-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"macareonie"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2024-02-27"},{"lineNumber":222,"author":{"gitId":"macareonie"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2024-02-27"},{"lineNumber":223,"author":{"gitId":"macareonie"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2024-02-27"},{"lineNumber":224,"author":{"gitId":"macareonie"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2024-02-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yashpola":14,"-":196,"macareonie":17}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":" * Filters the displayed interview or person list based on the date or status provided.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"public abstract class FilterCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all\";","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_USAGE \u003d \"use either filter_by_interview date or filter_by_status\";","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"yashpola":14}},{"path":"src/main/java/seedu/address/logic/commands/FilterInterviewsByDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":" * Filters the displayed interview list based on the date provided.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"public class FilterInterviewsByDateCommand extends FilterCommand {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    public static final String COMMAND_WORD \u003d \"filter_interviews_by_date\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all interviews by date\";","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    private LocalDate targetDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    public FilterInterviewsByDateCommand(LocalDate targetDate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"        this.targetDate \u003d targetDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"        List\u003cInterview\u003e interviewList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"        interviewList \u003d filterInterviewsByDate(interviewList, targetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"        if (interviewList.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"            return new CommandResult(\"No interviews found on \" + targetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"        int x \u003d 1;","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"        for (Interview i : interviewList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"            result \u003d result + \"\\n\" + x + \") \" + (i.toString()) + \"\\n\";","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"            x++;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"    private List\u003cInterview\u003e filterInterviewsByDate(List\u003cInterview\u003e interviews, LocalDate date) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"        List\u003cInterview\u003e filteredList \u003d new ArrayList\u003cInterview\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"        for (int i \u003d 0; i \u003c interviews.size(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"            if (interviews.get(i).getDate().equals(date)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"                filteredList.add(interviews.get(i));","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"        return filteredList;","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        if (object \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"        if (!(object instanceof FilterInterviewsByDateCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"        FilterInterviewsByDateCommand other \u003d (FilterInterviewsByDateCommand) object;","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        return this.targetDate.equals(other.targetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"                .add(\"targetDate\", targetDate)","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"yashpola":23,"zhikaiong2001":53}},{"path":"src/main/java/seedu/address/logic/commands/FilterPersonsByStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":" * Filters the displayed person list based on the status provided.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"public class FilterPersonsByStatusCommand extends FilterCommand {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    public static final String COMMAND_WORD \u003d FilterCommand.COMMAND_WORD + \"_by_status\";","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_SUCCESS \u003d FilterCommand.MESSAGE_SUCCESS + \" persons with status\";","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    private Status targetStatus;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     * Creates a FilterPersonsByStatusCommand to filter persons by status.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     * @param targetStatus The {@code Status} to be matched","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    public FilterPersonsByStatusCommand(Status targetStatus) {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"        this.targetStatus \u003d targetStatus;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"     * This method wraps the {@code updateFilteredPersonList} method of the {@code ModelManager} class","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"     * with a preliminary check on whether any persons exist with the {@code targetStatus}.","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"     * @return A command result indicating success","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        boolean existsMatchingPersons \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"                .anyMatch(person -\u003e person.getCurrentStatus().equals(targetStatus.toString()));","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        if (!existsMatchingPersons) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"            return new CommandResult(\"No persons found with status: \" + targetStatus.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        model.updateFilteredPersonList(person -\u003e person.getCurrentStatus().equals(targetStatus.toString()));","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        return new CommandResult(MESSAGE_SUCCESS + \": \" + targetStatus.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        if (object \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        if (!(object instanceof FilterPersonsByStatusCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"        FilterPersonsByStatusCommand other \u003d (FilterPersonsByStatusCommand) object;","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"        return this.targetStatus.equals(other.targetStatus);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"                .add(\"targetStatus\", targetStatus)","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"yashpola":70}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":" * Finds and lists all persons in Tether whose name contains any of the argument keywords.","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"public abstract class FindCommand extends Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_USAGE \u003d \"find_[field]: Finds all persons whose names/phone/email contain \"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"            + \"any of the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"            + \"Examples: \" + \"find_name alice bob charlie \\n find_phone 123 456 789 \\n find_email alice@gmail.com\";","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"    public FindCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":11,"macareonie":6}},{"path":"src/main/java/seedu/address/logic/commands/FindEmailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":" * Finds and lists all persons in Tether whose email contains any of the argument keywords.","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"public class FindEmailCommand extends FindCommand {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"    public static final String COMMAND_WORD \u003d \"find_email\";","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"    private final EmailContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"     * Creates a FindEmailCommand with given {@code Predicate} to filter for specific {@code Person}s.","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"    public FindEmailCommand(EmailContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"        super();","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"        if (!(other instanceof FindEmailCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        FindEmailCommand otherFindEmailCommand \u003d (FindEmailCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"        return predicate.equals(otherFindEmailCommand.predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"                .toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":58}},{"path":"src/main/java/seedu/address/logic/commands/FindNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":" * Finds and lists all persons in Tether whose name contains any of the argument keywords.","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"public class FindNameCommand extends FindCommand {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"    public static final String COMMAND_WORD \u003d \"find_name\";","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"     * Creates a FindNameCommand with given {@code Predicate} to filter for specific {@code Person}s.","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"    public FindNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"        super();","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"        if (!(other instanceof FindNameCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        FindNameCommand otherFindNameCommand \u003d (FindNameCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"        return predicate.equals(otherFindNameCommand.predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"                .toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":58}},{"path":"src/main/java/seedu/address/logic/commands/FindPhoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":" * Finds and lists all persons in Tether whose phone number contains any of the argument keywords.","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"public class FindPhoneCommand extends FindCommand {","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"    public static final String COMMAND_WORD \u003d \"find_phone\";","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"    private final PhoneContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"     * Creates a FindPhoneCommand with given {@code Predicate} to filter for specific {@code Person}s.","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"    public FindPhoneCommand(PhoneContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"        super();","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        if (!(other instanceof FindPhoneCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"        FindPhoneCommand otherFindPhoneCommand \u003d (FindPhoneCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        return predicate.equals(otherFindPhoneCommand.predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"                .toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":57}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"gingerbreaf"},"content":"    public static final String COMMAND_WORD \u003d \"list_persons\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":23,"gingerbreaf":1}},{"path":"src/main/java/seedu/address/logic/commands/ListInterviewsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gingerbreaf"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"gingerbreaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERVIEWS;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"gingerbreaf"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"gingerbreaf"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"gingerbreaf"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"gingerbreaf"},"content":"public class ListInterviewsCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"gingerbreaf"},"content":"    public static final String COMMAND_WORD \u003d \"list_interviews\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"gingerbreaf"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all interviews\";","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"gingerbreaf"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"gingerbreaf"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"        model.updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"gingerbreaf"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"gingerbreaf":21,"zhikaiong2001":3}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import java.util.List;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"    private final Index index;","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"    private final Remark remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"                remark, personToEdit.getTags());","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"macareonie"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"macareonie"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"macareonie"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"macareonie"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"macareonie"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"macareonie"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"macareonie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"macareonie"},"content":"        // short circuit if same object","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"macareonie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"macareonie"},"content":"            return true;","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"macareonie"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"macareonie"},"content":"            return false;","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"macareonie"},"content":"        // state check","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"macareonie"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"macareonie"},"content":"        return index.equals(e.index)","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"macareonie"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"macareonie":91}},{"path":"src/main/java/seedu/address/logic/parser/AddApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.logic.commands.AddApplicantPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":" * Parses input arguments and creates a new AddApplicantCommand object","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"gingerbreaf"},"content":"public class AddApplicantCommandParser implements Parser\u003cAddApplicantPersonCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"gingerbreaf"},"content":"    public AddApplicantPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"                    AddApplicantPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        ApplicantStatus status \u003d new ApplicantStatus(ApplicantState.STAGE_ONE.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        Applicant applicant \u003d new Applicant(name, phone, email, remark, status, tagList);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"gingerbreaf"},"content":"        return new AddApplicantPersonCommand(applicant);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yashpola":4,"-":47,"gingerbreaf":4,"macareonie":9}},{"path":"src/main/java/seedu/address/logic/parser/AddApplicantStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.AddApplicantStatusCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":" * Parses input arguments and creates a new {@code AddApplicantStatusCommand} object","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"public class AddApplicantStatusCommandParser implements Parser\u003cAddApplicantStatusCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddApplicantStatusCommand}","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"     * and returns a {@code AddApplicantStatusCommand} object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    public AddApplicantStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STATUS);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        Phone phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getPreamble());","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"                    AddApplicantStatusCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        ApplicantStatus applicantStatus \u003d ParserUtil.parseApplicantStatus(argMultimap","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"                .getValue(PREFIX_STATUS).orElse(\"\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        return new AddApplicantStatusCommand(phone, applicantStatus);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":39}},{"path":"src/main/java/seedu/address/logic/parser/AddInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"headcube1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"headcube1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICANT;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"headcube1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"headcube1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"headcube1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEWER;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"headcube1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"headcube1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"headcube1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"headcube1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"headcube1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"headcube1"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"headcube1"},"content":" * Parses input arguments and creates a new AddInterviewCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"headcube1"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"headcube1"},"content":"public class AddInterviewCommandParser implements Parser\u003cAddInterviewCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"headcube1"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"headcube1"},"content":"     * Parses the given {@code String} of arguments in the context of the AddInterviewCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"headcube1"},"content":"     * and returns an AddInterviewCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"headcube1"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"headcube1"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"headcube1"},"content":"    public AddInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"headcube1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME,","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"                        PREFIX_APPLICANT, PREFIX_INTERVIEWER);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME,","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"                PREFIX_APPLICANT, PREFIX_INTERVIEWER)","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"headcube1"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"headcube1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"headcube1"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"headcube1"},"content":"        LocalDate date \u003d parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"headcube1"},"content":"        LocalTime startTime \u003d parseTime(argMultimap.getValue(PREFIX_START_TIME).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"headcube1"},"content":"        LocalTime endTime \u003d parseTime(argMultimap.getValue(PREFIX_END_TIME).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"headcube1"},"content":"        Phone applicantPhone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_APPLICANT).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"headcube1"},"content":"        Phone interviewerPhone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_INTERVIEWER).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"headcube1"},"content":"        return new AddInterviewCommand(description, applicantPhone, interviewerPhone, date, startTime, endTime);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"headcube1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"headcube1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"headcube1"},"content":"    private static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"headcube1"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"headcube1"},"content":"            return LocalDate.parse(date, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"headcube1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"headcube1"},"content":"            throw new ParseException(\"Invalid date format!\");","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"headcube1"},"content":"    private static LocalTime parseTime(String time) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"headcube1"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"headcube1"},"content":"            return LocalTime.parse(time, DateTimeFormatter.ISO_LOCAL_TIME);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"headcube1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"headcube1"},"content":"            throw new ParseException(\"Invalid time format!\");","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"headcube1"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"headcube1"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"headcube1":61,"macareonie":12}},{"path":"src/main/java/seedu/address/logic/parser/AddInterviewerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.logic.commands.AddInterviewerPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.InterviewerState;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":" * Parses input arguments and creates a new AddInterviewerCommand object","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"gingerbreaf"},"content":"public class AddInterviewerCommandParser implements Parser\u003cAddInterviewerPersonCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"gingerbreaf"},"content":"    public AddInterviewerPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"gingerbreaf"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        InterviewerStatus status \u003d new InterviewerStatus(InterviewerState.FREE.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        Interviewer person \u003d new Interviewer(name, phone, email, remark, status, tagList);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"gingerbreaf"},"content":"        return new AddInterviewerPersonCommand(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yashpola":6,"-":47,"gingerbreaf":5,"macareonie":6}},{"path":"src/main/java/seedu/address/logic/parser/AddInterviewerStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.AddInterviewerStatusCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":" * Parses input arguments and creates a new {@code AddInterviewerStatusCommand} object","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"public class AddInterviewerStatusCommandParser implements Parser\u003cAddInterviewerStatusCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddApplicantStatusCommand}","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"     * and returns a {@code AddApplicantStatusCommand} object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    public AddInterviewerStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STATUS);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        Phone phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getPreamble());","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"                    AddInterviewerStatusCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        InterviewerStatus interviewerStatus \u003d ParserUtil.parseInterviewerStatus(argMultimap","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"                .getValue(PREFIX_STATUS).orElse(\"\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        return new AddInterviewerStatusCommand(phone, interviewerStatus);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":39}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.AddApplicantPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.AddApplicantStatusCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.AddInterviewerPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.AddInterviewerStatusCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.DeleteInterviewCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.logic.commands.FilterInterviewsByDateCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindEmailCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindPhoneCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.ListInterviewsCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"gingerbreaf"},"content":"        case AddInterviewerPersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"            return new AddInterviewerCommandParser().parse(arguments);","lastModifiedDate":"2024-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"gingerbreaf"},"content":"        case AddApplicantPersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"            return new AddApplicantCommandParser().parse(arguments);","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"headcube1"},"content":"        case AddInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"headcube1"},"content":"            return new AddInterviewCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"        case DeleteInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"            return new DeleteInterviewCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"macareonie"},"content":"        case FindEmailCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"macareonie"},"content":"            return new FindEmailCommandParser().parse(arguments);","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        case FindNameCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"macareonie"},"content":"            return new FindNameCommandParser().parse(arguments);","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"macareonie"},"content":"        case FindPhoneCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"macareonie"},"content":"            return new FindPhoneCommandParser().parse(arguments);","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"macareonie"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"macareonie"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"        case AddApplicantStatusCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"            return new AddApplicantStatusCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"        case AddInterviewerStatusCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"            return new AddInterviewerStatusCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"gingerbreaf"},"content":"        case ListInterviewsCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"gingerbreaf"},"content":"            return new ListInterviewsCommand();","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"zhikaiong2001"},"content":"        case FilterInterviewsByDateCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"zhikaiong2001"},"content":"            return new FilterInterviewsByDateCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"headcube1":2,"yashpola":8,"-":73,"zhikaiong2001":6,"gingerbreaf":4,"macareonie":21}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"headcube1"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"desc/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"headcube1"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"headcube1"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"st/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"headcube1"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"et/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"headcube1"},"content":"    public static final Prefix PREFIX_APPLICANT \u003d new Prefix(\"a/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"headcube1"},"content":"    public static final Prefix PREFIX_INTERVIEWER \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"headcube1":7,"yashpola":1,"-":14,"macareonie":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"            Phone phone \u003d ParserUtil.parsePhone(args);","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"            return new DeleteCommand(phone);","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":26,"macareonie":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.Messages.MESSAGE_NOT_INTEGER;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.logic.commands.DeleteInterviewCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":" * Parses input arguments and creates a new DeleteInterviewCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"public class DeleteInterviewCommandParser implements Parser\u003cDeleteInterviewCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    public DeleteInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"            Integer x \u003d Integer.valueOf(args.trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"            x -\u003d 1;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"            return new DeleteInterviewCommand(x);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"                    String.format(MESSAGE_NOT_INTEGER));","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"zhikaiong2001":24,"macareonie":5}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":79,"macareonie":2}},{"path":"src/main/java/seedu/address/logic/parser/FilterInterviewsByDateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import static seedu.address.logic.Messages.MESSAGE_NOT_DATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.logic.commands.FilterInterviewsByDateCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":" * Parses input arguments and creates a new FilterInterviewsByDateCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"public class FilterInterviewsByDateCommandParser implements Parser\u003cFilterInterviewsByDateCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     * Parses the given {@code String} of arguments in the context of FilterInterviewByDateCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * and returns a FilterInterviewByDateCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws ParseException if the user does not conform the expected date format","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    public FilterInterviewsByDateCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"            LocalDate date \u003d LocalDate.parse(args.trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"            return new FilterInterviewsByDateCommand(date);","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"            throw new ParseException(String.format(MESSAGE_NOT_DATE));","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"zhikaiong2001":30}},{"path":"src/main/java/seedu/address/logic/parser/FilterPersonsByStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.FilterPersonsByStatusCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":" * Parses input arguments and creates a new FilterPersonsByStatusCommandParser object","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"public class FilterPersonsByStatusCommandParser implements Parser\u003cFilterPersonsByStatusCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     * Parses the given {@code String} of arguments in the context of FilterPersonsByStatusCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     * and returns a FilterPersonsByStatusCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     * @throws ParseException if the given status is invalid","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public FilterPersonsByStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STATUS);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        Status status;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            String statusArgument \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"            if (ApplicantStatus.isValidStatus(statusArgument)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"                status \u003d new ApplicantStatus(statusArgument);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"            } else if (InterviewerStatus.isValidStatus(statusArgument)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"                status \u003d new InterviewerStatus(statusArgument);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"            } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"                throw new ParseException(Status.MESSAGE_USAGE);","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                    Status.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"        return new FilterPersonsByStatusCommand(status);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"yashpola":47}},{"path":"src/main/java/seedu/address/logic/parser/FindEmailCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindEmailCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" * Parses input arguments and creates a new FindEmailCommand object","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"public class FindEmailCommandParser implements Parser\u003cFindEmailCommand\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"     * Parses the given {@code String} of arguments in the context of the FindEmailCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"     * and returns a FindEmailCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"    public FindEmailCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEmailCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"        String[] emailKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"        return new FindEmailCommand(new EmailContainsKeywordsPredicate(Arrays.asList(emailKeywords)));","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":33}},{"path":"src/main/java/seedu/address/logic/parser/FindNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" * Parses input arguments and creates a new FindNameCommand object","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"public class FindNameCommandParser implements Parser\u003cFindNameCommand\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"     * Parses the given {@code String} of arguments in the context of the FindNameCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"     * and returns a FindNameCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"    public FindNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"        return new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":25,"macareonie":8}},{"path":"src/main/java/seedu/address/logic/parser/FindPhoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindPhoneCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" * Parses input arguments and creates a new FindPhoneCommand object","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"public class FindPhoneCommandParser implements Parser\u003cFindPhoneCommand\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPhoneCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"     * and returns a FindPhoneCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"    public FindPhoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPhoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"        String[] phoneKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"        return new FindPhoneCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(phoneKeywords)));","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":33}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":110,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"yashpola"},"content":"     * Parses a {@code String status} into a {@code ApplicantStatus}.","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"yashpola"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"yashpola"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"yashpola"},"content":"    public static ApplicantStatus parseApplicantStatus(String applicantStatus) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"yashpola"},"content":"        requireNonNull(applicantStatus);","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"yashpola"},"content":"        String trimmedApplicantStatus \u003d applicantStatus.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"yashpola"},"content":"        if (!ApplicantStatus.isValidStatus(trimmedApplicantStatus)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"yashpola"},"content":"            throw new ParseException(ApplicantStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"yashpola"},"content":"        return new ApplicantStatus(trimmedApplicantStatus);","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"yashpola"},"content":"     * Parses a {@code String status} into a {@code InterviewerStatus}.","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"yashpola"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"yashpola"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"yashpola"},"content":"    public static InterviewerStatus parseInterviewerStatus(String interviewerStatus) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"yashpola"},"content":"        requireNonNull(interviewerStatus);","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"yashpola"},"content":"        String trimmedInterviewerStatus \u003d interviewerStatus.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"yashpola"},"content":"        if (!InterviewerStatus.isValidStatus(trimmedInterviewerStatus)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"yashpola"},"content":"            throw new ParseException(InterviewerStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"yashpola"},"content":"        return new InterviewerStatus(trimmedInterviewerStatus);","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yashpola":32,"-":108}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"        Index index;","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"macareonie":37}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.model.interview.UniqueInterviewList;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"gingerbreaf"},"content":"    private final UniqueInterviewList interviews;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"gingerbreaf"},"content":"        interviews \u003d new UniqueInterviewList();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"gingerbreaf"},"content":"    // Person Operations","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"        setInterviews(newData.getInterviewList());","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"     * Returns true if a person with the same phone as {@code person} exists in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"    public boolean hasPersonWithSamePhone(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"        return persons.containsSamePhone(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"gingerbreaf"},"content":"    // Interview Operations","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"macareonie"},"content":"     * Adds an interview to the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"macareonie"},"content":"     * The interview must not already exist in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"gingerbreaf"},"content":"    public void addInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"gingerbreaf"},"content":"        interviews.add(interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"macareonie"},"content":"     * Returns true if an interview with the same identity as {@code interview} exists in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"gingerbreaf"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"gingerbreaf"},"content":"        requireNonNull(interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"gingerbreaf"},"content":"        return interviews.contains(interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"macareonie"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"macareonie"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"gingerbreaf"},"content":"    public void removeInterview(Interview key) {","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"gingerbreaf"},"content":"        interviews.remove(key);","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"zhikaiong2001"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"zhikaiong2001"},"content":"        this.interviews.setInterviews(interviews);","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":156,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"gingerbreaf"},"content":"    public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"gingerbreaf"},"content":"        return interviews.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yashpola":8,"-":129,"gingerbreaf":26,"zhikaiong2001":6,"macareonie":11}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    Predicate\u003cInterview\u003e PREDICATE_SHOW_ALL_INTERVIEWS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"     * Returns true if a person with the same phone as {@code person} exists in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"    boolean hasPersonWithSamePhone(Person person);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"zhikaiong2001"},"content":"    void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"gingerbreaf"},"content":"    void addInterview(Interview interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"gingerbreaf"},"content":"    boolean hasInterview(Interview interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"gingerbreaf"},"content":"    void deleteInterview(Interview interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"gingerbreaf"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yashpola":5,"-":87,"gingerbreaf":9,"zhikaiong2001":2}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"gingerbreaf"},"content":"    private final FilteredList\u003cInterview\u003e filteredInterviews;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"gingerbreaf"},"content":"        filteredInterviews \u003d new FilteredList\u003c\u003e(this.addressBook.getInterviewList());","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"yashpola"},"content":"    public boolean hasPersonWithSamePhone(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"yashpola"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"yashpola"},"content":"        return addressBook.hasPersonWithSamePhone(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"gingerbreaf"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"gingerbreaf"},"content":"        requireNonNull(interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"gingerbreaf"},"content":"        return addressBook.hasInterview(interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"gingerbreaf"},"content":"    public void addInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"gingerbreaf"},"content":"        addressBook.addInterview(interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"zhikaiong2001"},"content":"        updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"gingerbreaf"},"content":"    public void deleteInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"gingerbreaf"},"content":"        addressBook.removeInterview(interview);","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"zhikaiong2001"},"content":"    public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"zhikaiong2001"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"zhikaiong2001"},"content":"        filteredInterviews.setPredicate(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"gingerbreaf"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Interview List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"gingerbreaf"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"gingerbreaf"},"content":"        return filteredInterviews;","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yashpola":6,"-":149,"gingerbreaf":26,"zhikaiong2001":8}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"gingerbreaf"},"content":"    ObservableList\u003cInterview\u003e getInterviewList();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"gingerbreaf":3}},{"path":"src/main/java/seedu/address/model/interview/Interview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gingerbreaf"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"gingerbreaf"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"gingerbreaf"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":" * Represents an Interview in the Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"gingerbreaf"},"content":"public class Interview {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"gingerbreaf"},"content":"    private Person applicant;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"gingerbreaf"},"content":"    private Person interviewer;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"gingerbreaf"},"content":"    private LocalDate date;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"gingerbreaf"},"content":"    private LocalTime startTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"gingerbreaf"},"content":"    private LocalTime endTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"gingerbreaf"},"content":"    private String description;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"     * Represents a Interview in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"    public Interview(Person applicant, Person interviewer, LocalDate date, LocalTime startTime,","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"                     LocalTime endTime, String description) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"gingerbreaf"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"gingerbreaf"},"content":"        this.interviewer \u003d interviewer;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"gingerbreaf"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"gingerbreaf"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"gingerbreaf"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"gingerbreaf"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"gingerbreaf"},"content":"    public Person getApplicant() {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"gingerbreaf"},"content":"        return applicant;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"gingerbreaf"},"content":"    public Person getInterviewer() {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"gingerbreaf"},"content":"        return interviewer;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"gingerbreaf"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"gingerbreaf"},"content":"        return date;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"gingerbreaf"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"gingerbreaf"},"content":"        return startTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"gingerbreaf"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"gingerbreaf"},"content":"        return endTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"headcube1"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"headcube1"},"content":"        return description;","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"     * Returns true if both interviews of the same name have at least one other identity field that is the same.","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"     * This defines a weaker notion of equality between two interviews.","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"gingerbreaf"},"content":"    public boolean isSameInterview(Interview otherInterview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"gingerbreaf"},"content":"        boolean applicantMatch \u003d otherInterview.applicant.equals(this.applicant);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"gingerbreaf"},"content":"        boolean interviewerMatch \u003d otherInterview.interviewer.equals(this.interviewer);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"gingerbreaf"},"content":"        boolean dateMatch \u003d otherInterview.date.equals(this.date);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"gingerbreaf"},"content":"        boolean timeMatch \u003d otherInterview.startTime.equals(this.startTime)","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"gingerbreaf"},"content":"                \u0026\u0026 otherInterview.endTime.equals(this.endTime);","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"gingerbreaf"},"content":"        return applicantMatch \u0026\u0026 interviewerMatch \u0026\u0026 dateMatch \u0026\u0026 timeMatch;","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"gingerbreaf"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"gingerbreaf"},"content":"     * Returns true if both Interviews have the same fields.","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"gingerbreaf"},"content":"     * This defines a stronger notion of equality between two Interviews.","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"gingerbreaf"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"gingerbreaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"gingerbreaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"gingerbreaf"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"gingerbreaf"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"gingerbreaf"},"content":"        if (!(other instanceof Interview)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"gingerbreaf"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"gingerbreaf"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"gingerbreaf"},"content":"        Interview otherInterview \u003d (Interview) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"gingerbreaf"},"content":"        boolean applicantMatch \u003d otherInterview.applicant.equals(this.applicant);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"gingerbreaf"},"content":"        boolean interviewerMatch \u003d otherInterview.interviewer.equals(this.interviewer);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"gingerbreaf"},"content":"        boolean dateMatch \u003d otherInterview.date.equals(this.date);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"gingerbreaf"},"content":"        boolean timeMatch \u003d otherInterview.startTime.equals(this.startTime)","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"gingerbreaf"},"content":"                \u0026\u0026 otherInterview.endTime.equals(this.endTime);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"gingerbreaf"},"content":"        return applicantMatch \u0026\u0026 interviewerMatch \u0026\u0026 dateMatch \u0026\u0026 timeMatch;","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"gingerbreaf"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"gingerbreaf"},"content":"        return \" ------Interview------\" + \u0027\\n\u0027 + \"Applicant: \" + applicant.getName() + \"\\nInterviewer: \"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"gingerbreaf"},"content":"                + interviewer.getName() + \"\\nDate: \" + date.toString() + \"\\nStart: \" + startTime.toString() + \" End: \"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"gingerbreaf"},"content":"                 + endTime.toString() + \"\\nDescription: \" + description;","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"gingerbreaf"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"headcube1":4,"gingerbreaf":83,"macareonie":14}},{"path":"src/main/java/seedu/address/model/interview/UniqueInterviewList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gingerbreaf"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"gingerbreaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"gingerbreaf"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"gingerbreaf"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"gingerbreaf"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.model.interview.exceptions.DuplicateInterviewException;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.model.interview.exceptions.InterviewNotFoundException;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"gingerbreaf"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"gingerbreaf"},"content":" * A list of interviews that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":" * An interview is considered unique by comparing using {@code Interview#isSameInterview(Interview)}. As such,","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":" * adding and updating of interviews uses Interview#isSameInterview(Interview) for equality so as to ensure that","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":" * the interview being added or updated is unique in terms of identity in the UniqueInterviewList.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":" * However, the removal of an interview uses Interview#equals(Object) so","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"gingerbreaf"},"content":" * as to ensure that the interview with exactly the same fields will be removed.","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"gingerbreaf"},"content":" *","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"gingerbreaf"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"gingerbreaf"},"content":" *","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"gingerbreaf"},"content":" * @see Interview#isSameInterview(Interview)","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"gingerbreaf"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"gingerbreaf"},"content":"public class UniqueInterviewList implements Iterable\u003cInterview\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"gingerbreaf"},"content":"    private final ObservableList\u003cInterview\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"gingerbreaf"},"content":"    private final ObservableList\u003cInterview\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"gingerbreaf"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"gingerbreaf"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"gingerbreaf"},"content":"     * Returns true if the list contains an equivalent interview as the given argument.","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"gingerbreaf"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"gingerbreaf"},"content":"    public boolean contains(Interview toCheck) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"gingerbreaf"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"gingerbreaf"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInterview);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"gingerbreaf"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"gingerbreaf"},"content":"     * Adds an interview to the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"gingerbreaf"},"content":"     * The interview must not already exist in the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"gingerbreaf"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"gingerbreaf"},"content":"    public void add(Interview toAdd) {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"gingerbreaf"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"gingerbreaf"},"content":"        //if (contains(toAdd)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"gingerbreaf"},"content":"        //    throw new DuplicateInterviewException();","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"gingerbreaf"},"content":"        //}","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"gingerbreaf"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"gingerbreaf"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"gingerbreaf"},"content":"     * Replaces the interview {@code target} in the list with {@code editedInterview}.","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"gingerbreaf"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"gingerbreaf"},"content":"     * The interview identity of {@code editedInterview} must not be the same as another existing interview in the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"gingerbreaf"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"    public void setInterview(Interview target, Interview editedInterview) throws DuplicateInterviewException,","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"            InterviewNotFoundException {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"gingerbreaf"},"content":"        requireAllNonNull(target, editedInterview);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"gingerbreaf"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"gingerbreaf"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"gingerbreaf"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"gingerbreaf"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"gingerbreaf"},"content":"        if (!target.isSameInterview(editedInterview) \u0026\u0026 contains(editedInterview)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"gingerbreaf"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"gingerbreaf"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"gingerbreaf"},"content":"        internalList.set(index, editedInterview);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"gingerbreaf"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"gingerbreaf"},"content":"     * Removes the equivalent interview from the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"gingerbreaf"},"content":"     * The interview must exist in the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"gingerbreaf"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"gingerbreaf"},"content":"    public void remove(Interview toRemove) {","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"gingerbreaf"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"gingerbreaf"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"gingerbreaf"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"gingerbreaf"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"gingerbreaf"},"content":"    public void setInterviews(UniqueInterviewList replacement) {","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"gingerbreaf"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"gingerbreaf"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"gingerbreaf"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"gingerbreaf"},"content":"     * Replaces the contents of this list with {@code interviews}.","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"gingerbreaf"},"content":"     * {@code interviews} must not contain duplicate interviews.","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"gingerbreaf"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"gingerbreaf"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) throws DuplicateInterviewException {","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"gingerbreaf"},"content":"        requireAllNonNull(interviews);","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"gingerbreaf"},"content":"        if (!interviewsAreUnique(interviews)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"gingerbreaf"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"gingerbreaf"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"gingerbreaf"},"content":"        internalList.setAll(interviews);","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"gingerbreaf"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"gingerbreaf"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"gingerbreaf"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"gingerbreaf"},"content":"    public ObservableList\u003cInterview\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"gingerbreaf"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"gingerbreaf"},"content":"    public Iterator\u003cInterview\u003e iterator() {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"gingerbreaf"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"gingerbreaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"gingerbreaf"},"content":"        return other \u003d\u003d this || (other instanceof UniqueInterviewList","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"gingerbreaf"},"content":"                \u0026\u0026 internalList.equals(((UniqueInterviewList) other).internalList));","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"gingerbreaf"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"gingerbreaf"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"gingerbreaf"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"gingerbreaf"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"gingerbreaf"},"content":"     * Returns true if {@code interviews} contains only unique interviews.","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"gingerbreaf"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"gingerbreaf"},"content":"    private boolean interviewsAreUnique(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"gingerbreaf"},"content":"        for (int i \u003d 0; i \u003c interviews.size() - 1; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"gingerbreaf"},"content":"            for (int j \u003d i + 1; j \u003c interviews.size(); j++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"gingerbreaf"},"content":"                if (interviews.get(i).isSameInterview(interviews.get(j))) {","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"gingerbreaf"},"content":"                    return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"gingerbreaf"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"gingerbreaf"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"gingerbreaf"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"gingerbreaf"},"content":"        return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"gingerbreaf"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"gingerbreaf"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"gingerbreaf":129,"macareonie":10}},{"path":"src/main/java/seedu/address/model/interview/exceptions/DuplicateInterviewException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gingerbreaf"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":" * Signals that the operation will result in duplicate Interviews (Interviews are considered duplicates if they have","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":" * the same identity).","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"headcube1"},"content":"public class DuplicateInterviewException extends RuntimeException {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"headcube1"},"content":"    public DuplicateInterviewException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"headcube1"},"content":"        super(\"Operation would result in duplicate interviews\");","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"gingerbreaf"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"headcube1":4,"gingerbreaf":3,"macareonie":4}},{"path":"src/main/java/seedu/address/model/interview/exceptions/InterviewNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gingerbreaf"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":" * Signals that the operation is unable to find the specified interview.","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"gingerbreaf"},"content":"public class InterviewNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"headcube1"},"content":"    public InterviewNotFoundException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"headcube1"},"content":"        super(\"Interview not found!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"gingerbreaf"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"headcube1":3,"gingerbreaf":4,"macareonie":3}},{"path":"src/main/java/seedu/address/model/person/Applicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.Type;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":" * Represents an Applicant in the Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"public class Applicant extends Person {","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    private final Type type \u003d Type.APPLICANT;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    private ApplicantStatus previousStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    private ApplicantStatus currentStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    public Applicant(Name name, Phone phone, Email email, Remark remark, ApplicantStatus status, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"        super(name, phone, email, remark, tags);","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"        this.tags.add(new Tag(\"Applicant\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        this.currentStatus \u003d status;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        return super.isSamePerson(otherPerson);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    public String getPersonType() {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        return type.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"     * Changes the status of this applicant to pending interview.","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"     * @param model the location of the applicant to be edited","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    public void updateCurrentStatusToReflectInterview(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        previousStatus \u003d currentStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        currentStatus \u003d new ApplicantStatus(ApplicantState.STAGE_TWO.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        /*","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"            Need to find this applicant by reference equality and replace them for the change in status to reflect in","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"            the gui immediately","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        model.setPerson(this, this);","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"     * Rolls back the status of this applicant.","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"     * @param model the location of the applicant to be edited","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"    public void revertCurrentStatus(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"        currentStatus \u003d previousStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        /*","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"            Need to find this applicant by reference equality and replace them for the change in status to reflect in","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"            the gui immediately","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        model.setPerson(this, this);","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"    public String getCurrentStatus() {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"        return currentStatus.toString().toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":74,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"        return super.toString() + \"\\nStatus: \" + currentStatus.toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"yashpola":55,"macareonie":24}},{"path":"src/main/java/seedu/address/model/person/ApplicantStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":" * Represents an Applicant\u0027s status in the Tether.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":" * Guarantee: is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"public class ApplicantStatus extends Status {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            \"Status can only be one of \\\"resume review\\\", \\\"pending interview\\\", \\\"completed interview\\\"\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"                    + \"\\\"waiting list\\\", \\\"accepted\\\", or \\\"rejected\\\"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    public final String value;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"     * @param status A status.","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    public ApplicantStatus(String status) {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        checkArgument(isValidStatus(status.toLowerCase()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        value \u003d status.toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"     * Checks and returns the status if it is valid.","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    public static boolean isValidStatus(String status) {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        Pattern patternResumeReview \u003d Pattern.compile(\"^resume review$\");","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        Matcher matcherResumeReview \u003d patternResumeReview.matcher(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        Pattern patternPendingIntv \u003d Pattern.compile(\"^pending interview$\");","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        Matcher matcherPendingIntv \u003d patternPendingIntv.matcher(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        Pattern patternCompletedIntv \u003d Pattern.compile(\"^completed interview$\");","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        Matcher matcherCompletedIntv \u003d patternCompletedIntv.matcher(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        Pattern patternWaitingList \u003d Pattern.compile(\"^waiting list$\");","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        Matcher matcherWaitingList \u003d patternWaitingList.matcher(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        Pattern patternAccepted \u003d Pattern.compile(\"^accepted$\");","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        Matcher matcherAccepted \u003d patternAccepted.matcher(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        Pattern patternRejected \u003d Pattern.compile(\"^rejected$\");","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        Matcher matcherRejected \u003d patternRejected.matcher(status.toLowerCase());","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"        return (matcherResumeReview.matches()","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"                        || matcherPendingIntv.matches()","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"                        || matcherCompletedIntv.matches()","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"                        || matcherWaitingList.matches()","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                        || matcherAccepted.matches()","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"                        || matcherRejected.matches());","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        return value;","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"        if (!(other instanceof ApplicantStatus)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"        ApplicantStatus otherApplicantStatus \u003d (ApplicantStatus) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"        return value.equals(otherApplicantStatus.value);","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":87}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate otherEmailContainsKeywordsPredicate \u003d (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        return keywords.equals(otherEmailContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":44}},{"path":"src/main/java/seedu/address/model/person/Interviewer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.InterviewerState;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.Type;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":" * Represents an Interviewer in Tether.","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"public class Interviewer extends Person {","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"gingerbreaf"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    private final Type type \u003d Type.INTERVIEWER;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    private InterviewerStatus status;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    public Interviewer(Name name, Phone phone, Email email, Remark remark, InterviewerStatus status, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        super(name, phone, email, remark, tags);","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"        this.tags.add(new Tag(\"Interviewer\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    public String getPersonType() {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        return type.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"     * Changes the status of this interviewer to free only if they had an interview before.","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"     * @param model the location of the interviewer to be edited.","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    public void updateCurrentStatusToReflectInterview(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        if (status.value.contains(InterviewerState.OCCUPIED.toString())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"            status \u003d new InterviewerStatus(InterviewerState.FREE.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"        /*","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"            Need to find this interviewer by reference equality and replace them for the change in status to reflect","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"            in the gui immediately","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        model.setPerson(this, this);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"     * Changes the status of this interviewer to interview with [applicant name] only if the status is free currently.","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"     * @param model the location of the interviewer to be edited.","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"     * @param applicantScheduled the applicant whom this interviewer is scheduled with.","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"    public void updateCurrentStatusToReflectInterview(Model model, Person applicantScheduled) {","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"        if (status.value.equals(InterviewerState.FREE.toString())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            status \u003d new InterviewerStatus(InterviewerState.OCCUPIED + \" \" + applicantScheduled.getName());","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        /*","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"            Need to find this interviewer by reference equality and replace them for the change in status to reflect","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"            in the gui immediately","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        model.setPerson(this, this);","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"    public String getCurrentStatus() {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"        return status.toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-10"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-03-10"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"        return super.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"yashpola":76,"gingerbreaf":1,"macareonie":2}},{"path":"src/main/java/seedu/address/model/person/InterviewerStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":" * Represents an Interviewer\u0027s status in the Tether.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":" * Guarantee: is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"public class InterviewerStatus extends Status {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"            \"Status can only be either \\\"free\\\" or \\\"interview with [APPLICANT NAME]\\\"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    public final String value;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     * Constructs a {@code ApplicantStatus}.","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     * @param status A status.","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    public InterviewerStatus(String status) {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        checkArgument(isValidStatus(status.toLowerCase()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        value \u003d status.toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"     * Checks and returns the status if it is valid.","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    public static boolean isValidStatus(String status) {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        Pattern patternFree \u003d Pattern.compile(\"^free$\");","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        Matcher matcherFree \u003d patternFree.matcher(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        Pattern patternOccupied \u003d Pattern.compile(\"^interview with .*\");","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        Matcher matcherOccupied \u003d patternOccupied.matcher(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        return matcherFree.matches() || matcherOccupied.matches();","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        return value;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        if (!(other instanceof InterviewerStatus)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"        InterviewerStatus otherInterviewerStatus \u003d (InterviewerStatus) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"        return value.equals(otherInterviewerStatus.value);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":67}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.Type;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"    protected Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"    private final Remark remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    // Type field","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    private Type type \u003d Type.PERSON;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"    public Person(Name name, Phone phone, Email email, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"    public Remark getRemark() {","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"        return remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    public String getPersonType() {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"        return type.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"    public void updateCurrentStatusToReflectInterview(Model model) {}","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"    public void updateCurrentStatusToReflectInterview(Model model, Person applicantScheduled) {","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"    public void revertCurrentStatus(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"    public String getCurrentStatus() {","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"        return \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"macareonie"},"content":"     * Returns true if both persons of the same name have at least one other identity field that is the same.","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"macareonie"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"macareonie"},"content":"                \u0026\u0026 (otherPerson.getPhone().equals(getPhone()) || otherPerson.getEmail().equals(getEmail()));","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"macareonie"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"macareonie"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"macareonie"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"macareonie"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"macareonie"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"macareonie"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"macareonie"},"content":"        builder.append(getName())","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"macareonie"},"content":"                .append(\" Phone: \")","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"macareonie"},"content":"                .append(getPhone())","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"macareonie"},"content":"                .append(\" Email: \")","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"macareonie"},"content":"                .append(getEmail())","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"macareonie"},"content":"                .append(\" Remark: \")","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"macareonie"},"content":"                .append(getRemark())","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"macareonie"},"content":"                .append(\" Tags: \");","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"macareonie"},"content":"        getTags().forEach(builder::append);","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"macareonie"},"content":"        return builder.toString();","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yashpola":20,"-":94,"macareonie":26}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"        if (!(other instanceof PhoneContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate otherPhoneContainsKeywordsPredicate \u003d (PhoneContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        return keywords.equals(otherPhoneContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":44}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"public class Remark {","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"    public final String value;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"     *","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"     * @param remark A remark.","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"    public Remark(String remark) {","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"        value \u003d remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"    public String toString() {","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"        return value;","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"        return value.hashCode();","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"macareonie":38}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.InterviewerState;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":" * Represents a Person\u0027s status in the Tether.","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class Status {","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    public static final String MESSAGE_USAGE \u003d \"For applicants, status can only be one of \"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"            + ApplicantState.STAGE_ONE + \", \"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"            + ApplicantState.STAGE_TWO + \", \"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"            + ApplicantState.STAGE_THREE + \", \"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"            + ApplicantState.OUTCOME_ONE + \", \"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"            + ApplicantState.OUTCOME_TWO + \", or \"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            + ApplicantState.OUTCOME_THREE + \".\\nFor interviewers, status can only be one of \"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"            + InterviewerState.FREE + \", or \"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"            + InterviewerState.OCCUPIED + \" [applicant name].\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":19}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"     * Returns true if the list contains a person with an equivalent phone number as the given argument.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"    public boolean containsSamePhone(Person toCheck) {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"        return internalList.stream().anyMatch(person -\u003e person.getPhone().equals(toCheck.getPhone()));","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yashpola":6,"-":152}},{"path":"src/main/java/seedu/address/model/person/enums/ApplicantState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.model.person.enums;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":" * Enumerates an applicant\u0027s statuses at any given time","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"public enum ApplicantState {","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"    STAGE_ONE {","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"        public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"            return \"resume review\";","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    },","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    STAGE_TWO {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"        public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"            return \"pending interview\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    },","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    STAGE_THREE {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"        public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"            return \"completed interview\";","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    },","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    OUTCOME_ONE {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"            return \"waiting list\";","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    },","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    OUTCOME_TWO {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"            return \"accepted\";","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    },","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    OUTCOME_THREE {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"            return \"rejected\";","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    },","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":37}},{"path":"src/main/java/seedu/address/model/person/enums/InterviewerState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.model.person.enums;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":" * Enumerates an Interviewer\u0027s status at any given time.","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"public enum InterviewerState {","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"    FREE {","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"        public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"            return \"free\";","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    },","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    OCCUPIED {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"        public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"            return \"interview with\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":17}},{"path":"src/main/java/seedu/address/model/person/enums/Type.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.model.person.enums;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":" * Enumerates possible types for persons added to Tether.","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"public enum Type {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"    PERSON, APPLICANT, INTERVIEWER;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"yashpola":8}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"headcube1"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"headcube1"},"content":"    public PersonNotFoundException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"headcube1"},"content":"        super(\"Person not found!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"headcube1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"headcube1":5,"-":5}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.InterviewerState;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"            new Applicant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"                    EMPTY_REMARK,","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"                    new ApplicantStatus(ApplicantState.STAGE_ONE.toString()),","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"            new Applicant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"                    EMPTY_REMARK,","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"                    new ApplicantStatus(ApplicantState.STAGE_ONE.toString()),","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"            new Interviewer(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"                    EMPTY_REMARK,","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                    new InterviewerStatus(InterviewerState.FREE.toString()),","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"            new Applicant(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"                    EMPTY_REMARK,","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"                    new ApplicantStatus(ApplicantState.STAGE_ONE.toString()),","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"            new Interviewer(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"                    EMPTY_REMARK,","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"                    new InterviewerStatus(InterviewerState.FREE.toString()),","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"            new Interviewer(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"                    EMPTY_REMARK,","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"                    new InterviewerStatus(InterviewerState.FREE.toString()),","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yashpola":10,"-":47,"macareonie":18}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInterview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":" * Jackson-friendly version of {@link Interview}.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"public class JsonAdaptedInterview {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Interview\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    private final String description;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"    private final String date;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    private final String startTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"    private final String endTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    private final JsonAdaptedPerson applicant;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"    private final JsonAdaptedPerson interviewer;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a {@code JsonAdaptedInterview} with the given interview details.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    public JsonAdaptedInterview(@JsonProperty(\"description\") String description,","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"                                @JsonProperty(\"date\") String date,","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"                                @JsonProperty(\"startTime\") String startTime,","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"                                @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"                                @JsonProperty(\"applicant\") JsonAdaptedPerson applicant,","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"                                @JsonProperty(\"interviewer\") JsonAdaptedPerson interviewer) {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"        this.interviewer \u003d interviewer;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"     * Converts a given {@code Interview} into this class for Jackson use.","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"    public JsonAdaptedInterview(Interview source) {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"        date \u003d source.getDate().format(formatter);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"        startTime \u003d source.getStartTime().toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"        endTime \u003d source.getEndTime().toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"        applicant \u003d new JsonAdaptedPerson(source.getApplicant());","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"        interviewer \u003d new JsonAdaptedPerson(source.getInterviewer());","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"     * Converts this Jackson-friendly adapted interview object into the model\u0027s {@code Interview} object.","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted interview.","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"zhikaiong2001"},"content":"    public Interview toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"zhikaiong2001"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"                    LocalDate.class.getSimpleName()));","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"zhikaiong2001"},"content":"        final LocalDate date \u003d LocalDate.parse(this.date, formatter);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"        if (this.startTime \u003d\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"zhikaiong2001"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"zhikaiong2001"},"content":"                    LocalTime.class.getSimpleName()));","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"zhikaiong2001"},"content":"        final LocalTime start \u003d LocalTime.parse(startTime);","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"zhikaiong2001"},"content":"        if (this.endTime \u003d\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"zhikaiong2001"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"zhikaiong2001"},"content":"                    LocalTime.class.getSimpleName()));","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"zhikaiong2001"},"content":"        final LocalTime end \u003d LocalTime.parse(endTime);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"zhikaiong2001"},"content":"        final Person app \u003d applicant.toModelType();","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"zhikaiong2001"},"content":"        final Person inter \u003d interviewer.toModelType();","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"zhikaiong2001"},"content":"        return new Interview(app, inter, date, start, end, this.description);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"zhikaiong2001":91}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.Type;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"    private final String remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"    private final String type;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"    private final String status;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"                             @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"                             @JsonProperty(\"type\") String type,","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"                             @JsonProperty(\"status\") String status) {","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"macareonie"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"macareonie"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"        type \u003d source.getPersonType();","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"        status \u003d source.getCurrentStatus();","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"macareonie"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"macareonie"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"macareonie"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"macareonie"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"yashpola"},"content":"        if (type.equals(Type.APPLICANT.toString())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"yashpola"},"content":"            ApplicantStatus applicantStatus \u003d new ApplicantStatus(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"yashpola"},"content":"            return new Applicant(modelName, modelPhone, modelEmail, modelRemark, applicantStatus, modelTags);","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"yashpola"},"content":"        } else if (type.equals(Type.INTERVIEWER.toString())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"yashpola"},"content":"            InterviewerStatus interviewerStatus \u003d new InterviewerStatus(status);","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"yashpola"},"content":"            return new Interviewer(modelName, modelPhone, modelEmail, modelRemark, interviewerStatus, modelTags);","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"macareonie"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelRemark, modelTags);","lastModifiedDate":"2024-02-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yashpola":23,"-":91,"macareonie":15}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":" * A class to access Tether data stored as a json file on the hard disk.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":79,"macareonie":1}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import static seedu.address.logic.commands.AddInterviewCommand.MESSAGE_DUPLICATE_INTERVIEW;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"    private final List\u003cJsonAdaptedInterview\u003e interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"                                       @JsonProperty(\"interviews\") List\u003cJsonAdaptedInterview\u003e interviews) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"        if (interviews !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"            this.interviews.addAll(interviews);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"        interviews.addAll(source.getInterviewList().stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"                .map(JsonAdaptedInterview::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"zhikaiong2001"},"content":"        for (JsonAdaptedInterview jsonAdaptedInterview : interviews) {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"zhikaiong2001"},"content":"            Interview interview \u003d jsonAdaptedInterview.toModelType();","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"            if (addressBook.hasInterview(interview)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"zhikaiong2001"},"content":"            addressBook.addInterview(interview);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":60,"zhikaiong2001":20}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":" * Manages storage of Tether data in local storage.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"macareonie":1}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-f11-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    public static final String COMMON_COMMANDS \u003d \"\\n\\nFor quick help, here are some common commands \"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"            + \"(omit the [] when using!): \"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"            + \"\\n1. Quick add an applicant/interviewer: add_[applicant/interviewer] n/[name] p/[phone] e/[email] \"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"            + \"\\n2. Add an interview: add_interview desc/[description] date/[date] st/[starting time] et/[ending time] \"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"            + \"a/[applicant phone] i/[interviewer phone]\"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"            + \"\\n3. Delete an applicant/interviewer: delete_person [phone]\"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"            + \"\\n4. Delete an interview: delete_interview [interview index]\"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"            + \"\\n5. List applicants/interviewers: list_persons\"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            + \"\\n6. List interviews: list_interviews\"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"            + \"\\n7. Edit applicants/interviewers: edit [applicant/interviewer index] n/[newName]...\"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"            + \"\\n8. Find person(s) by email/name/phone: find_[email/name/phone] [keyword1] [keyword2]...\"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"            + \"\\n9. Filter interview(s) by date: filter_interviews_by_date [date in YYYY-MM-DD]\";","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to our user guide at \" + USERGUIDE_URL + \" for detailed info \"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"            + \"on how to use Tether.\" + COMMON_COMMANDS;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yashpola":11,"-":100,"zhikaiong2001":2,"macareonie":2}},{"path":"src/main/java/seedu/address/ui/InterviewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"public class InterviewCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    private static final String FXML \u003d \"InterviewListCard.fxml\";","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"    public final Interview interview;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    private Label id;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"    private Label description;","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"    private Label applicantNamePhone;","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"    private Label interviewerNamePhone;","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"    private Label date;","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"    private Label startEndTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"     * Creates a {@code InterviewCard} with the given {@code Interview} and {@code int}.","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"    public InterviewCard(Interview interview, int displayedIndex) {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"        super(FXML);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"        this.interview \u003d interview;","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"        applicantNamePhone.setText(\"Applicant:   \" + interview.getApplicant().getName().toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"        interviewerNamePhone.setText(\"Interviewer: \" + interview.getInterviewer().getName().toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"        date.setText(interview.getDate().toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"        startEndTime.setText(interview.getStartTime().toString() + \" ~ \" + interview.getEndTime().toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"        description.setText(interview.getDescription());","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"        if (!(other instanceof InterviewCard)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"zhikaiong2001"},"content":"        // state check","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"zhikaiong2001"},"content":"        InterviewCard card \u003d (InterviewCard) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"zhikaiong2001"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"zhikaiong2001"},"content":"                \u0026\u0026 interview.equals(card.interview);","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"zhikaiong2001":73}},{"path":"src/main/java/seedu/address/ui/InterviewListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"public class InterviewListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    private static final String FXML \u003d \"InterviewListPanel.fxml\";","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InterviewListPanel.class);","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    private ListView\u003cInterview\u003e interviewListView;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     * Creates a {@code InterviewListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    public InterviewListPanel(ObservableList\u003cInterview\u003e interviewList) {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        super(FXML);","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"        interviewListView.setItems(interviewList);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"        interviewListView.setCellFactory(listView -\u003e new InterviewListViewCell());","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Interview} using a {@code InterviewCard}.","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    class InterviewListViewCell extends ListCell\u003cInterview\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"        protected void updateItem(Interview interview, boolean empty) {","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"            super.updateItem(interview, empty);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"            System.out.println(\"Yes\");","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"            if (empty || interview \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"                setText(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"                setGraphic(new InterviewCard(interview, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"zhikaiong2001":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    private InterviewListPanel interviewListPanel;","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"    private StackPane interviewListPanelPlaceholder;","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"zhikaiong2001"},"content":"        interviewListPanel \u003d new InterviewListPanel(logic.getFilteredInterviewList());","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"zhikaiong2001"},"content":"        interviewListPanelPlaceholder.getChildren().add(interviewListPanel.getRoot());","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":196,"zhikaiong2001":6}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"    private Label remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    private FlowPane status;","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and {@code int}.","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        status.getChildren().add(new Label(person.getCurrentStatus()));","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"        if (person.getCurrentStatus().equals(ApplicantState.OUTCOME_TWO.toString())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            status.getChildren().get(0).getStyleClass().add(\"bg-green\");","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        } else if (person.getCurrentStatus().equals(ApplicantState.OUTCOME_THREE.toString())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            status.getChildren().get(0).getStyleClass().add(\"bg-red\");","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"            status.getChildren().get(0).getStyleClass().add(\"bg-black\");","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"macareonie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"macareonie"},"content":"        // short circuit if same object","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"macareonie"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"macareonie"},"content":"            return true;","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"macareonie"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"macareonie"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"macareonie"},"content":"            return false;","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"macareonie"},"content":"        // state check","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"macareonie"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"macareonie"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"macareonie"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yashpola":11,"-":55,"macareonie":22}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/tether_logo.png\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":84,"macareonie":1}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" style\u003d\"-fx-background-color: #012A4A; -fx-border-color: white; -fx-border-radius: 5px;\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"yashpola":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: derive(#012A4A, 20%);","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"    background-color: #012A4A; /* Used in the default.html file */","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":".bg-green {","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: green;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":".bg-red {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: #800000;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":".bg-black {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: black;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    -fx-control-inner-background: #012A4A;","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: #012A4A;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: derive(#012A4A, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: #013A63;","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: #01497C;","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: derive(#013A63, 50%);","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: #013A63;","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: derive(#2A6F97, 20%);","lastModifiedDate":"2024-03-16"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: derive(white, 50%);","lastModifiedDate":"2024-03-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: transparent #012A4A transparent #012A4A;","lastModifiedDate":"2024-03-16"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"yashpola"},"content":"    -fx-background-color: transparent, #012A4A, transparent, #012A4A;","lastModifiedDate":"2024-03-16"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":366,"author":{"gitId":"yashpola"},"content":"#status {","lastModifiedDate":"2024-03-21"},{"lineNumber":367,"author":{"gitId":"yashpola"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-21"},{"lineNumber":368,"author":{"gitId":"yashpola"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-21"},{"lineNumber":369,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":370,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":371,"author":{"gitId":"yashpola"},"content":"#status .label {","lastModifiedDate":"2024-03-21"},{"lineNumber":372,"author":{"gitId":"yashpola"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-21"},{"lineNumber":373,"author":{"gitId":"yashpola"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-21"},{"lineNumber":374,"author":{"gitId":"yashpola"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-21"},{"lineNumber":375,"author":{"gitId":"yashpola"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-21"},{"lineNumber":376,"author":{"gitId":"yashpola"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-21"},{"lineNumber":377,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yashpola":36,"-":341}},{"path":"src/main/resources/view/InterviewListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"   \u003cVBox prefHeight\u003d\"140.0\" prefWidth\u003d\"66.0\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"             \u003cLabel fx:id\u003d\"id\" prefHeight\u003d\"106.0\" prefWidth\u003d\"93.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\" translateX\u003d\"10.0\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"                 \u003cminWidth\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"                     \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"                     \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"                 \u003c/minWidth\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"             \u003c/Label\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"      \u003c/children\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"   \u003c/VBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"    \u003cGridPane prefHeight\u003d\"140.0\" prefWidth\u003d\"372.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" prefHeight\u003d\"105.0\" prefWidth\u003d\"203.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"                \u003cLabel fx:id\u003d\"applicantNamePhone\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"27.0\" prefWidth\u003d\"352.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$applicantNamePhone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" layoutX\u003d\"25.0\" layoutY\u003d\"15.0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"               \u003cLabel fx:id\u003d\"interviewerNamePhone\" layoutX\u003d\"15.0\" layoutY\u003d\"10.0\" prefHeight\u003d\"17.0\" prefWidth\u003d\"357.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$interviewerNamePhone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"            \u003cLabel fx:id\u003d\"date\" prefHeight\u003d\"17.0\" prefWidth\u003d\"306.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"            \u003cLabel fx:id\u003d\"startEndTime\" prefHeight\u003d\"17.0\" prefWidth\u003d\"307.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startEndTime\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"         \u003cLabel fx:id\u003d\"description\" layoutX\u003d\"25.0\" layoutY\u003d\"80.0\" prefHeight\u003d\"17.0\" prefWidth\u003d\"346.0\" styleClass\u003d\"cell_small_label\" text\u003d\"description\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"zhikaiong2001":47}},{"path":"src/main/resources/view/InterviewListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"    \u003cListView fx:id\u003d\"interviewListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"zhikaiong2001":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Tether\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"         xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #012A4A;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #012A4A;\"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"                           styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100.0\" minHeight\u003d\"200.0\" minWidth\u003d\"230.0\"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"                           prefHeight\u003d\"200.0\" prefWidth\u003d\"230.0\" style\u003d\"-fx-background-color: #012A4A;\"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"                           styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"                \u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"340.0\"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"                      VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340.0\" style\u003d\"-fx-background-color: #012A4A;\"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"                              styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"                        \u003cVBox fx:id\u003d\"interviewList\" minWidth\u003d\"340.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"517.0\"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"                              style\u003d\"-fx-background-color: #012A4A;\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"zhikaiong2001"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"                                \u003cStackPane fx:id\u003d\"interviewListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"zhikaiong2001"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"zhikaiong2001"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yashpola":5,"-":44,"zhikaiong2001":25}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"      \u003cFlowPane fx:id\u003d\"status\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yashpola":1,"-":35,"macareonie":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" style\u003d\"-fx-background-color: #012A4A\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" style\u003d\"-fx-background-color: #012A4A; -fx-border-color: white; -fx-border-radius: 5px;\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"yashpola":2,"-":6}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" style\u003d\"-fx-background-color: #2A6F97\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"yashpola":1,"-":11}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSON_NOT_IN_LIST;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalPersons.CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.logic.commands.AddApplicantPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.AddInterviewerPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"macareonie"},"content":"        String deleteCommand \u003d \"delete_person 999\";","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"macareonie"},"content":"        assertCommandException(deleteCommand, MESSAGE_PERSON_NOT_IN_LIST);","lastModifiedDate":"2024-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"macareonie"},"content":"    public void execute_applicantStorageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2024-03-10"},{"lineNumber":80,"author":{"gitId":"macareonie"},"content":"        assertApplicantCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"macareonie"},"content":"    public void execute_applicantStorageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"macareonie"},"content":"        assertApplicantCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"macareonie"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"macareonie"},"content":"    public void execute_interviewerStorageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"macareonie"},"content":"        assertInterviewerCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"    public void execute_interviewerStorageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2024-03-10"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"        assertInterviewerCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"macareonie"},"content":"    private void assertApplicantCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2024-03-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"gingerbreaf"},"content":"        String addApplicantCommand \u003d AddApplicantPersonCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"macareonie"},"content":"                + EMAIL_DESC_AMY;","lastModifiedDate":"2024-02-27"},{"lineNumber":187,"author":{"gitId":"macareonie"},"content":"        Applicant expectedPerson \u003d new PersonBuilder(AMY).withTags().build_applicant();","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":190,"author":{"gitId":"macareonie"},"content":"        assertCommandFailure(addApplicantCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"macareonie"},"content":"    private void assertInterviewerCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2024-03-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2024-03-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2024-03-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2024-03-17"},{"lineNumber":212,"author":{"gitId":"yashpola"},"content":"        String addInterviewerCommand \u003d AddInterviewerPersonCommand.COMMAND_WORD + NAME_DESC_CUBE + PHONE_DESC_CUBE","lastModifiedDate":"2024-03-24"},{"lineNumber":213,"author":{"gitId":"yashpola"},"content":"                + EMAIL_DESC_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":214,"author":{"gitId":"yashpola"},"content":"        Interviewer expectedPerson \u003d new PersonBuilder(CUBE).withTags().build_interviewer();","lastModifiedDate":"2024-03-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"macareonie"},"content":"        assertCommandFailure(addInterviewerCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yashpola":9,"-":185,"gingerbreaf":2,"macareonie":23}},{"path":"src/test/java/seedu/address/logic/commands/AddApplicantCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":" * Contains integration tests (interaction with the Model) for {@code AddApplicantCommand}.","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"public class AddApplicantCommandIntegrationTest {","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"gingerbreaf"},"content":"        assertCommandSuccess(new AddApplicantPersonCommand(validPerson), model,","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"gingerbreaf"},"content":"                String.format(AddApplicantPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"gingerbreaf"},"content":"        assertCommandFailure(new AddApplicantPersonCommand(personInList), model,","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"gingerbreaf"},"content":"                AddApplicantPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":42,"gingerbreaf":4,"macareonie":2}},{"path":"src/test/java/seedu/address/logic/commands/AddApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"public class AddApplicantCommandTest {","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"gingerbreaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddApplicantPersonCommand(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"gingerbreaf"},"content":"        CommandResult commandResult \u003d new AddApplicantPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"gingerbreaf"},"content":"        assertEquals(String.format(AddApplicantPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand addPersonCommand \u003d new AddApplicantPersonCommand(validPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"gingerbreaf"},"content":"                AddApplicantPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub)","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"        );","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand addAliceCommand \u003d new AddApplicantPersonCommand(alice);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand addBobCommand \u003d new AddApplicantPersonCommand(bob);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddApplicantPersonCommand(alice);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand addPersonCommand \u003d new AddApplicantPersonCommand(ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"gingerbreaf"},"content":"        String expected \u003d AddApplicantPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"gingerbreaf"},"content":"        assertEquals(expected, addPersonCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"macareonie"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2024-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"macareonie"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"macareonie"},"content":"        public void addInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"macareonie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"yashpola"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"yashpola"},"content":"        public boolean hasPersonWithSamePhone(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"yashpola"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"macareonie"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"macareonie"},"content":"        public boolean hasInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"macareonie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"macareonie"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"macareonie"},"content":"        public void deleteInterview(Interview target) {","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"macareonie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"zhikaiong2001"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"zhikaiong2001"},"content":"        public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"zhikaiong2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"macareonie"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"macareonie"},"content":"        public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"macareonie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"yashpola"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"yashpola"},"content":"        public boolean hasPersonWithSamePhone(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"yashpola"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"yashpola"},"content":"            return personsAdded.stream().anyMatch(p -\u003e p.getPhone().equals(person.getPhone()));","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yashpola":11,"-":191,"gingerbreaf":11,"zhikaiong2001":5,"macareonie":25}},{"path":"src/test/java/seedu/address/logic/commands/AddApplicantStatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"public class AddApplicantStatusCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    private static final String APPLICANT_STATUS_STUB \u003d \"resume review\";","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    public void execute_addStatusUnfilteredList_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withStatus(APPLICANT_STATUS_STUB).build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        AddApplicantStatusCommand addApplicantStatusCommand \u003d new AddApplicantStatusCommand(firstPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"                new ApplicantStatus(editedPerson.getCurrentStatus()));","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        String expectedMessage \u003d String.format(AddApplicantStatusCommand.MESSAGE_ADD_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        assertCommandSuccess(addApplicantStatusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"                .withStatus(APPLICANT_STATUS_STUB).build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        AddApplicantStatusCommand addApplicantStatusCommand \u003d new AddApplicantStatusCommand(firstPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"                new ApplicantStatus(editedPerson.getCurrentStatus()));","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        String expectedMessage \u003d String.format(AddApplicantStatusCommand.MESSAGE_ADD_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"        assertCommandSuccess(addApplicantStatusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    public void execute_invalidPersonPhoneUnfilteredList_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        AddApplicantStatusCommand addApplicantStatusCommand \u003d new AddApplicantStatusCommand(new Phone(\"111\"),","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"                new ApplicantStatus(APPLICANT_STATUS_STUB));","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"        assertCommandFailure(addApplicantStatusCommand, model, Messages.MESSAGE_INCORRECT_APPLICANT_PHONE_NUMBER);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"        final AddApplicantStatusCommand standardCommand \u003d new AddApplicantStatusCommand(firstPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"                new ApplicantStatus(APPLICANT_STATUS_STUB));","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"        AddApplicantStatusCommand commandWithSameValues \u003d new AddApplicantStatusCommand(firstPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"                new ApplicantStatus(APPLICANT_STATUS_STUB));","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(standardCommand, new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"                new Remark(VALID_REMARK_AMY)));","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(standardCommand, new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"                new Remark(VALID_REMARK_BOB)));","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"yashpola":99}},{"path":"src/test/java/seedu/address/logic/commands/AddInterviewCommandIntergrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"headcube1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"headcube1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"headcube1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"headcube1"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"headcube1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"headcube1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"headcube1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"headcube1"},"content":"import seedu.address.testutil.InterviewBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"headcube1"},"content":"public class AddInterviewCommandIntergrationTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"headcube1"},"content":"    private Model model;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"headcube1"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"headcube1"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"headcube1"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"headcube1"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"headcube1"},"content":"    public void execute_newInterview_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"headcube1"},"content":"        Interview validInterview \u003d new InterviewBuilder().buildInterview();","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"headcube1"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"headcube1"},"content":"        expectedModel.addInterview(validInterview);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"headcube1"},"content":"        assertCommandSuccess(new AddInterviewCommand(validInterview.getDescription(),","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"headcube1"},"content":"                        validInterview.getApplicant().getPhone(), validInterview.getInterviewer().getPhone(),","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"headcube1"},"content":"                        validInterview.getDate(), validInterview.getStartTime(), validInterview.getEndTime()), model,","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"headcube1"},"content":"                String.format(AddInterviewCommand.MESSAGE_SUCCESS, \"\\n\" + Messages.formatInterview(validInterview)),","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"headcube1"},"content":"                expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"headcube1"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"headcube1"},"content":"    public void execute_duplicateInterview_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"headcube1"},"content":"        Interview validInterview \u003d new InterviewBuilder().buildInterview();","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"headcube1"},"content":"        model.addInterview(validInterview);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"headcube1"},"content":"        Interview interviewInList \u003d model.getAddressBook().getInterviewList().get(0);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"headcube1"},"content":"        assertCommandFailure(new AddInterviewCommand(interviewInList.getDescription(),","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"headcube1"},"content":"                interviewInList.getApplicant().getPhone(), interviewInList.getInterviewer().getPhone(),","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"headcube1"},"content":"                interviewInList.getDate(), interviewInList.getStartTime(), interviewInList.getEndTime()), model,","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"headcube1"},"content":"                AddInterviewCommand.MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"headcube1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"headcube1":50}},{"path":"src/test/java/seedu/address/logic/commands/AddInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"headcube1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"headcube1"},"content":"public class AddInterviewCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"headcube1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"headcube1":4}},{"path":"src/test/java/seedu/address/logic/commands/AddInterviewerCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"public class AddInterviewerCommandIntegrationTest {","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"gingerbreaf"},"content":"        assertCommandSuccess(new AddInterviewerPersonCommand(validPerson), model,","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"gingerbreaf"},"content":"                String.format(AddInterviewerPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"gingerbreaf"},"content":"        assertCommandFailure(new AddInterviewerPersonCommand(personInList), model,","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"gingerbreaf"},"content":"                AddInterviewerPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yashpola":1,"-":43,"gingerbreaf":4}},{"path":"src/test/java/seedu/address/logic/commands/AddInterviewerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"public class AddInterviewerCommandTest {","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"gingerbreaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddInterviewerPersonCommand(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"gingerbreaf"},"content":"        CommandResult commandResult \u003d new AddInterviewerPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"gingerbreaf"},"content":"        assertEquals(String.format(AddInterviewerPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"gingerbreaf"},"content":"        AddInterviewerPersonCommand addCommand \u003d new AddInterviewerPersonCommand(validPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"gingerbreaf"},"content":"        assertThrows(CommandException.class, AddInterviewerPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2024-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"gingerbreaf"},"content":"        AddInterviewerPersonCommand addAliceCommand \u003d new AddInterviewerPersonCommand(alice);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand addBobCommand \u003d new AddInterviewerPersonCommand(bob);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddInterviewerPersonCommand(alice);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"gingerbreaf"},"content":"        AddPersonCommand addPersonCommand \u003d new AddInterviewerPersonCommand(ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"gingerbreaf"},"content":"        String expected \u003d AddInterviewerPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"gingerbreaf"},"content":"        assertEquals(expected, addPersonCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"macareonie"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"macareonie"},"content":"        public void addInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"macareonie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"yashpola"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"yashpola"},"content":"        public boolean hasPersonWithSamePhone(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"yashpola"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"macareonie"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"macareonie"},"content":"        public boolean hasInterview(Interview interview) {","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"macareonie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"macareonie"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"macareonie"},"content":"        public void deleteInterview(Interview target) {","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"macareonie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"macareonie"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"macareonie"},"content":"        public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"macareonie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"zhikaiong2001"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"zhikaiong2001"},"content":"        public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"zhikaiong2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"yashpola"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"yashpola"},"content":"        public boolean hasPersonWithSamePhone(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"yashpola"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"yashpola"},"content":"            return personsAdded.stream().anyMatch(p -\u003e p.getPhone().equals(person.getPhone()));","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":235,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yashpola":13,"-":192,"gingerbreaf":11,"zhikaiong2001":5,"macareonie":21}},{"path":"src/test/java/seedu/address/logic/commands/AddInterviewerStatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_LAST_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"public class AddInterviewerStatusCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    private static final String INTERVIEWER_STATUS_STUB \u003d \"free\";","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    public void execute_addStatusUnfilteredList_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_LAST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withStatus(INTERVIEWER_STATUS_STUB).build_interviewer();","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        AddInterviewerStatusCommand addInterviewerStatusCommand \u003d new AddInterviewerStatusCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"                firstPerson.getPhone(), new InterviewerStatus(editedPerson.getCurrentStatus()));","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        String expectedMessage \u003d String.format(AddInterviewerStatusCommand.MESSAGE_ADD_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        assertCommandSuccess(addInterviewerStatusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        showPersonAtIndex(model, INDEX_LAST_PERSON);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"                .withStatus(INTERVIEWER_STATUS_STUB).build_interviewer();","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        AddInterviewerStatusCommand addInterviewerStatusCommand \u003d new AddInterviewerStatusCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"                firstPerson.getPhone(), new InterviewerStatus(editedPerson.getCurrentStatus()));","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        String expectedMessage \u003d String.format(AddInterviewerStatusCommand.MESSAGE_ADD_STATUS_SUCCESS, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        assertCommandSuccess(addInterviewerStatusCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"    public void execute_invalidPersonPhoneUnfilteredList_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        AddInterviewerStatusCommand addInterviewerStatusCommand \u003d new AddInterviewerStatusCommand(new Phone(\"111\"),","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"                new InterviewerStatus(INTERVIEWER_STATUS_STUB));","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"        assertCommandFailure(addInterviewerStatusCommand, model, Messages.MESSAGE_INCORRECT_INTERVIEWER_PHONE_NUMBER);","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"        final AddInterviewerStatusCommand standardCommand \u003d new AddInterviewerStatusCommand(firstPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"                new InterviewerStatus(INTERVIEWER_STATUS_STUB));","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"        AddInterviewerStatusCommand commandWithSameValues \u003d new AddInterviewerStatusCommand(firstPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"                new InterviewerStatus(INTERVIEWER_STATUS_STUB));","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(standardCommand, new AddInterviewerStatusCommand(secondPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"                new InterviewerStatus(INTERVIEWER_STATUS_STUB)));","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(standardCommand, new AddInterviewerStatusCommand(secondPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"                new InterviewerStatus(INTERVIEWER_STATUS_STUB)));","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"yashpola":99}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    public static final String VALID_NAME_CUBE \u003d \"cube\";","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    public static final String VALID_PHONE_CUBE \u003d \"87654321\";","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"    public static final String VALID_EMAIL_CUBE \u003d \"cube@head.com\";","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    public static final String NAME_DESC_CUBE \u003d \" \" + PREFIX_NAME + VALID_NAME_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    public static final String PHONE_DESC_CUBE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"    public static final String EMAIL_DESC_CUBE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"macareonie"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"macareonie"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"headcube1"},"content":"        List\u003cInterview\u003e expectedInterview \u003d new ArrayList\u003c\u003e(actualModel.getAddressBook().getInterviewList());","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"headcube1"},"content":"        assertEquals(expectedInterview, actualModel.getAddressBook().getInterviewList());","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"headcube1":3,"yashpola":7,"-":120,"macareonie":4}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"    public void execute_validPhoneUnfilteredList_success() {","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getPhone());","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"    public void execute_invalidPhoneUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"        Phone invalidPhone \u003d new Phone(\"999\");","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(invalidPhone);","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_PERSON_NOT_IN_LIST);","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"    public void execute_validPhoneFilteredList_success() {","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getPhone());","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"    public void execute_invalidPhoneFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-10"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"        Person targetSecondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-10"},{"lineNumber":72,"author":{"gitId":"macareonie"},"content":"        Phone invalidPhone \u003d targetSecondPerson.getPhone();","lastModifiedDate":"2024-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"macareonie"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"macareonie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(invalidPhone);","lastModifiedDate":"2024-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"macareonie"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_PERSON_NOT_IN_LIST);","lastModifiedDate":"2024-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"macareonie"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(new Phone(\"94351253\"));","lastModifiedDate":"2024-03-10"},{"lineNumber":84,"author":{"gitId":"macareonie"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(new Phone(\"88888888\"));","lastModifiedDate":"2024-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"macareonie"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(new Phone(\"94351253\"));","lastModifiedDate":"2024-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"macareonie"},"content":"        Phone targetPhone \u003d new Phone(\"94351253\");","lastModifiedDate":"2024-03-10"},{"lineNumber":106,"author":{"gitId":"macareonie"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetPhone);","lastModifiedDate":"2024-03-10"},{"lineNumber":107,"author":{"gitId":"macareonie"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetPhone\u003d\" + targetPhone + \"}\";","lastModifiedDate":"2024-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":98,"macareonie":21}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":" * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for EditCommand.","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        Person editedPerson \u003d new PersonBuilder().withStatus(\"resume review\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                .withTags(VALID_TAG_HUSBAND).build_interviewer();","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"macareonie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"macareonie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"macareonie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"yashpola":3,"-":165,"macareonie":5}},{"path":"src/test/java/seedu/address/logic/commands/FilterInterviewsByDateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"public class FilterInterviewsByDateCommandTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    private LocalDate firstTargetDate \u003d LocalDate.parse(\"2001-03-22\");","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    private LocalDate secondTargetDate \u003d LocalDate.parse(\"2001-04-17\");","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        FilterInterviewsByDateCommand filterInterviewsByDateFirstCommand \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"                new FilterInterviewsByDateCommand(firstTargetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        FilterInterviewsByDateCommand filterInterviewsByDateSecondCommand \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"                new FilterInterviewsByDateCommand(secondTargetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        assertEquals(filterInterviewsByDateFirstCommand, filterInterviewsByDateFirstCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        FilterInterviewsByDateCommand filterInterviewsByDateFirstCommandCopy \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"                new FilterInterviewsByDateCommand(firstTargetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        assertEquals(filterInterviewsByDateFirstCommand, filterInterviewsByDateFirstCommandCopy);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(1, filterInterviewsByDateFirstCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(null, filterInterviewsByDateFirstCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(filterInterviewsByDateFirstCommand, filterInterviewsByDateSecondCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    public void execute_nonExistentDate_noInterviewFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        String expectedMessage \u003d \"No interviews found on \" + firstTargetDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        FilterInterviewsByDateCommand command \u003d new FilterInterviewsByDateCommand(firstTargetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        command.execute(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"        FilterInterviewsByDateCommand filterInterviewsByDateCommand \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                new FilterInterviewsByDateCommand(firstTargetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"        String expected \u003d FilterInterviewsByDateCommand.class.getCanonicalName() + \"{targetDate\u003d\" + firstTargetDate","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"                + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        assertEquals(expected, filterInterviewsByDateCommand.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"yashpola":63}},{"path":"src/test/java/seedu/address/logic/commands/FilterPersonsByStatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"public class FilterPersonsByStatusCommandTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    private ApplicantStatus firstTargetStatus \u003d new ApplicantStatus(ApplicantState.STAGE_ONE.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    private ApplicantStatus secondTargetStatus \u003d new ApplicantStatus(ApplicantState.OUTCOME_THREE.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"        FilterPersonsByStatusCommand filterPersonsByStatusFirstCommand \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"                new FilterPersonsByStatusCommand(firstTargetStatus);","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        FilterPersonsByStatusCommand filterInterviewsByDateSecondCommand \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"                new FilterPersonsByStatusCommand(secondTargetStatus);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        assertEquals(filterPersonsByStatusFirstCommand, filterPersonsByStatusFirstCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        FilterPersonsByStatusCommand filterPersonsByStatusCommandCopy \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"                new FilterPersonsByStatusCommand(firstTargetStatus);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        assertEquals(filterPersonsByStatusFirstCommand, filterPersonsByStatusCommandCopy);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(1, filterPersonsByStatusFirstCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(null, filterPersonsByStatusFirstCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        assertNotEquals(filterPersonsByStatusFirstCommand, filterInterviewsByDateSecondCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    public void execute_existingStatus_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        String expectedMessage \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"            + \"Listed all persons with status: \" + firstTargetStatus + \", showHelp\u003dfalse, exit\u003dfalse}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        FilterPersonsByStatusCommand command \u003d new FilterPersonsByStatusCommand(firstTargetStatus);","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        assertEquals(expectedMessage, command.execute(model).toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"    public void execute_nonExistentStatus_noPersonFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        String expectedMessage \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"                + \"No persons found with status: \" + secondTargetStatus.toString() + \", showHelp\u003dfalse, exit\u003dfalse}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"        FilterPersonsByStatusCommand command \u003d new FilterPersonsByStatusCommand(secondTargetStatus);","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        assertEquals(expectedMessage, command.execute(model).toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        FilterPersonsByStatusCommand filterPersonsByStatusCommand \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"                new FilterPersonsByStatusCommand(firstTargetStatus);","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        String expected \u003d FilterPersonsByStatusCommand.class.getCanonicalName() + \"{targetStatus\u003d\" + firstTargetStatus","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"                + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        assertEquals(expected, filterPersonsByStatusCommand.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"yashpola":69}},{"path":"src/test/java/seedu/address/logic/commands/FindEmailCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"public class FindEmailCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        FindEmailCommand findFirstCommand \u003d new FindEmailCommand(firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"        FindEmailCommand findSecondCommand \u003d new FindEmailCommand(secondPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"        FindCommand findFirstCommandCopy \u003d new FindEmailCommand(firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"        FindEmailCommand command \u003d new FindEmailCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate predicate \u003d preparePredicate(\"lydia@example.com \"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"                + \"werner@example.com heinz@example.com\");","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"macareonie"},"content":"        FindEmailCommand command \u003d new FindEmailCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        FindEmailCommand findCommand \u003d new FindEmailCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"macareonie"},"content":"        String expected \u003d FindEmailCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"macareonie"},"content":"    private EmailContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"macareonie"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":73,"macareonie":19}},{"path":"src/test/java/seedu/address/logic/commands/FindNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"public class FindNameCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        FindNameCommand findFirstCommand \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"        FindNameCommand findSecondCommand \u003d new FindNameCommand(secondPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"        FindCommand findFirstCommandCopy \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"        FindCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"        FindCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"macareonie"},"content":"        FindCommand findCommand \u003d new FindNameCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        String expected \u003d FindNameCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":83,"macareonie":8}},{"path":"src/test/java/seedu/address/logic/commands/FindPhoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"public class FindPhoneCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"123\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"456\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        FindPhoneCommand findFirstCommand \u003d new FindPhoneCommand(firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"        FindPhoneCommand findSecondCommand \u003d new FindPhoneCommand(secondPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"        FindPhoneCommand findFirstCommandCopy \u003d new FindPhoneCommand(firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"        FindCommand command \u003d new FindPhoneCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d preparePredicate(\"9482427 9482224 95352563\");","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"        FindCommand command \u003d new FindPhoneCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"123\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"macareonie"},"content":"        FindCommand findCommand \u003d new FindPhoneCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        String expected \u003d FindPhoneCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"macareonie"},"content":"    private PhoneContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"macareonie"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":73,"macareonie":18}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"macareonie"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"macareonie"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"macareonie"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"macareonie"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"macareonie"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"macareonie"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"macareonie"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"macareonie"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"macareonie"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"macareonie"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"macareonie"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"macareonie"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"macareonie"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"macareonie"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"macareonie"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"macareonie"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"macareonie"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"macareonie"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"macareonie"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"macareonie"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"macareonie"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"macareonie"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"macareonie"},"content":"    public void equals() {","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"macareonie"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"macareonie"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"macareonie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"macareonie"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"macareonie"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"macareonie"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"macareonie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"macareonie"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"macareonie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"macareonie"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"macareonie"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"macareonie"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":127,"author":{"gitId":"macareonie"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"macareonie"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"macareonie"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"macareonie"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"macareonie"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"macareonie"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"macareonie":135}},{"path":"src/test/java/seedu/address/logic/parser/AddApplicantCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.logic.commands.AddApplicantPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"public class AddApplicantCommandParserTest {","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"    private AddApplicantCommandParser parser \u003d new AddApplicantCommandParser();","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"    public void parse_applicantAllFieldsPresent_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"        Applicant expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build_applicant();","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"gingerbreaf"},"content":"                + TAG_DESC_FRIEND, new AddApplicantPersonCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"        // all fields present","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"gingerbreaf"},"content":"                + TAG_DESC_FRIEND, new AddApplicantPersonCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"        Applicant expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"                .build_applicant();","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"gingerbreaf"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddApplicantPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"    public void parse_applicantOptionalFieldsMissing_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"macareonie"},"content":"        Applicant expectedPerson \u003d new PersonBuilder(AMY).withTags().build_applicant();","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY,","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"gingerbreaf"},"content":"                new AddApplicantPersonCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"gingerbreaf"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_PHONE_DESC + EMAIL_DESC_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"macareonie"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"gingerbreaf"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":86,"gingerbreaf":7,"macareonie":23}},{"path":"src/test/java/seedu/address/logic/parser/AddApplicantStatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.AddApplicantStatusCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"public class AddApplicantStatusCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    private AddApplicantStatusCommandParser parser \u003d new AddApplicantStatusCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    private final ApplicantStatus nonEmptyStatus \u003d new ApplicantStatus(\"resume review\");","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public void parse_phoneSpecified_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        String userInput \u003d firstPerson.getPhone().value + \" \" + PREFIX_STATUS + nonEmptyStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        AddApplicantStatusCommand expectedCommand \u003d new AddApplicantStatusCommand(firstPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"                nonEmptyStatus);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    public void parse_incompleteFields_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantStatusCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        // no parameters","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, AddApplicantStatusCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        // no phone","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, AddApplicantStatusCommand.COMMAND_WORD + \" \" + nonEmptyStatus,","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"    public void parse_invalidValues_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        // invalid status","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + \" \" + PREFIX_STATUS + \"nonsense\",","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"                ApplicantStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        // invalid phone","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_STATUS + \"resume review\", String.format(","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"yashpola":56}},{"path":"src/test/java/seedu/address/logic/parser/AddInterviewerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalPersons.CUBE;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.logic.commands.AddInterviewerPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"public class AddInterviewerCommandParserTest {","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    private AddInterviewerCommandParser parser \u003d new AddInterviewerCommandParser();","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"    public void parse_interviewerAllFieldsPresent_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        Interviewer expectedPerson \u003d new PersonBuilder(CUBE).withTags(VALID_TAG_FRIEND).build_interviewer();","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_CUBE + PHONE_DESC_CUBE + EMAIL_DESC_CUBE","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"gingerbreaf"},"content":"                + TAG_DESC_FRIEND, new AddInterviewerPersonCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"        // all fields present","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        assertParseSuccess(parser, NAME_DESC_CUBE + PHONE_DESC_CUBE + EMAIL_DESC_CUBE","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"gingerbreaf"},"content":"                + TAG_DESC_FRIEND, new AddInterviewerPersonCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"        Interviewer expectedPersonMultipleTags \u003d new PersonBuilder(CUBE).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"                .build_interviewer();","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"        assertParseSuccess(parser, NAME_DESC_CUBE + PHONE_DESC_CUBE + EMAIL_DESC_CUBE","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"gingerbreaf"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddInterviewerPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"    public void parse_interviewerOptionalFieldsMissing_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        Interviewer expectedPerson \u003d new PersonBuilder(CUBE).withTags().build_interviewer();","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"        assertParseSuccess(parser, NAME_DESC_CUBE + PHONE_DESC_CUBE + EMAIL_DESC_CUBE,","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"gingerbreaf"},"content":"                new AddInterviewerPersonCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"gingerbreaf"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_PHONE_DESC + EMAIL_DESC_BOB,","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"macareonie"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"gingerbreaf"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yashpola":13,"-":80,"gingerbreaf":7,"macareonie":16}},{"path":"src/test/java/seedu/address/logic/parser/AddInterviewerStatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.AddInterviewerStatusCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"public class AddInterviewerStatusCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    private AddInterviewerStatusCommandParser parser \u003d new AddInterviewerStatusCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    private final InterviewerStatus nonEmptyStatus \u003d new InterviewerStatus(\"free\");","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    public void parse_phoneSpecified_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        String userInput \u003d firstPerson.getPhone().value + \" \" + PREFIX_STATUS + nonEmptyStatus;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        AddInterviewerStatusCommand expectedCommand \u003d new AddInterviewerStatusCommand(firstPerson.getPhone(),","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"                nonEmptyStatus);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    public void parse_incompleteFields_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"                AddInterviewerStatusCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        // no parameters","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, AddInterviewerStatusCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        // no phone","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, AddInterviewerStatusCommand.COMMAND_WORD + \" \" + nonEmptyStatus,","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    public void parse_invalidValues_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        // invalid status","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, VALID_PHONE_AMY + \" \" + PREFIX_STATUS + \"nonsense\",","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"               InterviewerStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"        // invalid phone","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_STATUS + \"free\", String.format(","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewerStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"yashpola":58}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.logic.commands.AddApplicantPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.AddInterviewerPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindEmailCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindPhoneCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"    public void parseCommand_add_applicant() throws Exception {","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"        Applicant person \u003d new PersonBuilder().build_applicant();","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"gingerbreaf"},"content":"        AddApplicantPersonCommand command \u003d (AddApplicantPersonCommand) parser.parseCommand(","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"                PersonUtil.getAddApplicantCommand(person));","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"gingerbreaf"},"content":"        assertEquals(new AddApplicantPersonCommand(person), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"    public void parseCommand_add_interviewer() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"        Interviewer person \u003d new PersonBuilder().withStatus(\"free\").build_interviewer();","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"        AddInterviewerPersonCommand command \u003d (AddInterviewerPersonCommand) parser.parseCommand(","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"macareonie"},"content":"                PersonUtil.getAddInterviewerCommand(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"macareonie"},"content":"        assertEquals(new AddInterviewerPersonCommand(person), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"macareonie"},"content":"                DeleteCommand.COMMAND_WORD + \" 87652533\");","lastModifiedDate":"2024-03-10"},{"lineNumber":73,"author":{"gitId":"macareonie"},"content":"        assertEquals(new DeleteCommand(new Phone(\"87652533\")), command);","lastModifiedDate":"2024-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"macareonie"},"content":"    public void parseCommand_find_email() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"macareonie"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo@email.com\", \"bar@email.com\", \"baz@email.com\");","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"macareonie"},"content":"        FindEmailCommand command \u003d (FindEmailCommand) parser.parseCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"macareonie"},"content":"                FindEmailCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"macareonie"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"macareonie"},"content":"        assertEquals(new FindEmailCommand(new EmailContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"macareonie"},"content":"    public void parseCommand_find_name() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"macareonie"},"content":"        FindNameCommand command \u003d (FindNameCommand) parser.parseCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"macareonie"},"content":"                FindNameCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"macareonie"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"macareonie"},"content":"        assertEquals(new FindNameCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"macareonie"},"content":"    public void parseCommand_find_phone() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"macareonie"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"123\", \"456\", \"789\");","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"macareonie"},"content":"        FindPhoneCommand command \u003d (FindPhoneCommand) parser.parseCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"macareonie"},"content":"                FindPhoneCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"macareonie"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"macareonie"},"content":"        assertEquals(new FindPhoneCommand(new PhoneContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"macareonie"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"macareonie"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"macareonie"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"macareonie"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark.value);","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"macareonie"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"headcube1":1,"yashpola":1,"-":89,"gingerbreaf":3,"macareonie":54}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"            System.out.println(pe.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"yashpola":1,"-":39}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, \"87652533\", new DeleteCommand(new Phone(\"87652533\")));","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":30,"macareonie":2}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":103,"author":{"gitId":"macareonie"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"macareonie"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"macareonie"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-02-27"},{"lineNumber":171,"author":{"gitId":"macareonie"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-02-27"},{"lineNumber":172,"author":{"gitId":"macareonie"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-02-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"macareonie"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-02-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"macareonie"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-02-27"},{"lineNumber":179,"author":{"gitId":"macareonie"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-02-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"macareonie"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-02-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":185,"macareonie":10}},{"path":"src/test/java/seedu/address/logic/parser/FilterPersonsByStatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import seedu.address.logic.commands.FilterPersonsByStatusCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"public class FilterPersonsByStatusCommandParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"    private FilterPersonsByStatusCommandParser parser \u003d new FilterPersonsByStatusCommandParser();","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"                Status.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"        assertParseFailure(parser, \"nonsense status\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"                Status.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    public void parse_validArgs_returnsFilterPersonsByStatusCommand() {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        FilterPersonsByStatusCommand expectedFilterPersonsByStatusCommand \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"                new FilterPersonsByStatusCommand(new ApplicantStatus(ApplicantState.STAGE_ONE.toString()));","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        assertParseSuccess(parser, ApplicantState.STAGE_ONE.toString(), expectedFilterPersonsByStatusCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        // varying leading and trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        assertParseSuccess(parser, \" resume review    \", expectedFilterPersonsByStatusCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"yashpola":39}},{"path":"src/test/java/seedu/address/logic/parser/FindEmailCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindEmailCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"public class FindEmailCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"    private FindEmailCommandParser parser \u003d new FindEmailCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"                FindEmailCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"    public void parse_validArgs_returnsFindEmailCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"        FindEmailCommand expectedFindEmailCommand \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"                new FindEmailCommand(new EmailContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"                        \"Alice@email.com\", \"Bob@email.com\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, \"Alice@email.com Bob@email.com\", expectedFindEmailCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, \" \\n Alice@email.com \\n \\t Bob@email.com  \\t\", expectedFindEmailCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":36}},{"path":"src/test/java/seedu/address/logic/parser/FindNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"public class FindNameCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"    private FindNameCommandParser parser \u003d new FindNameCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"                FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"    public void parse_validArgs_returnsFindNameCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"        FindNameCommand expectedFindNameCommand \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"                new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindNameCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindNameCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":25,"macareonie":10}},{"path":"src/test/java/seedu/address/logic/parser/FindPhoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.FindPhoneCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"public class FindPhoneCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"    private FindPhoneCommandParser parser \u003d new FindPhoneCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"                FindPhoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"    public void parse_validArgs_returnsFindPhoneCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"        FindPhoneCommand expectedFindPhoneCommand \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"                new FindPhoneCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(\"123\", \"456\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, \"123 456\", expectedFindPhoneCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, \" \\n 123 \\n \\t 456  \\t\", expectedFindPhoneCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":35}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"    private final Remark nonEmptyRemark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"        // have remark","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, nonEmptyRemark);","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"        // no remark","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        // no parameters","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"        // no index","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"macareonie":43}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"macareonie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"macareonie"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"macareonie"},"content":"        public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"macareonie"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":105,"macareonie":8}},{"path":"src/test/java/seedu/address/model/person/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first@email.com\");","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first@email.com\", \"second@email.com\");","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"        // One keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"                Collections.singletonList(\"Alice@email.com\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"        // Multiple keywords and only one matching keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Alice@email.com\", \"Bob@email.com\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"aLIce@email.com\", \"bOB@email.com\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"macareonie"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"macareonie"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"macareonie"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"macareonie"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Carol@email.com\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"macareonie"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"Alice@email.com\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"macareonie"},"content":"        // Keywords match phone and name, but does not match email","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"12345\", \"bob@email.com\", \"Alice\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"macareonie"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"macareonie"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"macareonie"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1@email.com\", \"keyword2@email.com\");","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"macareonie"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"macareonie"},"content":"        String expected \u003d EmailContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"macareonie"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":83}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"        // Keywords match phone and email, but does not match name","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"macareonie"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":83,"macareonie":2}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"        // different phone and email -\u003e returns false","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"        // same name, same phone, different attributes -\u003e returns true","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"        // same name, same email, different attributes -\u003e returns true","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"        // same name, same phone, same email, different attributes -\u003e returns true","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":74,"macareonie":16}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d new PhoneContainsKeywordsPredicate(","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"macareonie"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"macareonie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"macareonie"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"macareonie"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"        // One keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.singletonList(\"123\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"123\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"macareonie"},"content":"        // Multiple keywords and only one matching keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"macareonie"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"123\", \"456\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"macareonie"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"123\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"macareonie"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"macareonie"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"macareonie"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"123\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"macareonie"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"456\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"macareonie"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"123\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"macareonie"},"content":"        // Keywords match name and email, but does not match phone","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"macareonie"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"54321\", \"alice@email.com\", \"Alice\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"macareonie"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"macareonie"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"macareonie"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"macareonie"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"123\", \"456\");","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"macareonie"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"macareonie"},"content":"        String expected \u003d PhoneContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"macareonie"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"macareonie":79}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"macareonie"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"macareonie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"macareonie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"macareonie"},"content":"public class RemarkTest {","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"macareonie"},"content":"    @Test","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"    public void equals() {","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"macareonie"},"content":"        Remark remark \u003d new Remark(\"Hello\");","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"macareonie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"macareonie"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"macareonie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"macareonie"},"content":"        Remark remarkCopy \u003d new Remark(remark.value);","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"macareonie"},"content":"        assertTrue(remark.equals(remarkCopy));","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"macareonie"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"macareonie"},"content":"        assertFalse(remark.equals(1));","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"macareonie"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"        Remark differentRemark \u003d new Remark(\"Bye\");","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"        assertFalse(remark.equals(differentRemark));","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"macareonie":31}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"macareonie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"macareonie"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":172,"macareonie":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.Type;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"macareonie"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"                        Type.APPLICANT.toString(), ApplicantState.OUTCOME_ONE.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"macareonie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"                        Type.APPLICANT.toString(), ApplicantState.OUTCOME_ONE.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"                        Type.APPLICANT.toString(), ApplicantState.OUTCOME_ONE.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"macareonie"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"                        Type.APPLICANT.toString(), ApplicantState.OUTCOME_ONE.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"                        Type.APPLICANT.toString(), ApplicantState.OUTCOME_ONE.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"                        Type.APPLICANT.toString(), ApplicantState.OUTCOME_ONE.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"macareonie"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_REMARK, invalidTags,","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"yashpola"},"content":"                        Type.APPLICANT.toString(), ApplicantState.OUTCOME_ONE.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yashpola":16,"-":85,"macareonie":4}},{"path":"src/test/java/seedu/address/testutil/InterviewBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"headcube1"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"headcube1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"headcube1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"headcube1"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"headcube1"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.ApplicantState;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.InterviewerState;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"headcube1"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"headcube1"},"content":" *","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"headcube1"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"headcube1"},"content":"public class InterviewBuilder {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"headcube1"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"technical interview\";","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"headcube1"},"content":"    public static final LocalDate DEFAULT_DATE \u003d LocalDate.of(2024, 01, 01);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"headcube1"},"content":"    public static final LocalTime DEFAULT_START_TIME \u003d LocalTime.of(10, 00);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"headcube1"},"content":"    public static final LocalTime DEFAULT_END_TIME \u003d LocalTime.of(12, 59);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"headcube1"},"content":"    private Name applicantName \u003d new Name(\"head\");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"headcube1"},"content":"    private Name interviewName \u003d new Name(\"cube\");","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"headcube1"},"content":"    private Phone applicantPhone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"headcube1"},"content":"    private Phone interviewerPhone \u003d new Phone(\"87654321\");","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"headcube1"},"content":"    private Email applicantEmail \u003d new Email(\"head@cube.com\");","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"headcube1"},"content":"    private Email interviewerEmail \u003d new Email(\"cube@head.com\");","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"headcube1"},"content":"    private Remark emptyRemark \u003d new Remark(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"headcube1"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    private Applicant applicant \u003d new Applicant(applicantName, applicantPhone, applicantEmail, emptyRemark,","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"            new ApplicantStatus(ApplicantState.STAGE_ONE.toString()), tags);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"headcube1"},"content":"    private Interviewer interviewer \u003d new Interviewer(interviewName,","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"            interviewerPhone, interviewerEmail, emptyRemark, new InterviewerStatus(InterviewerState.FREE.toString()),","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"            tags);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"headcube1"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"headcube1"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"headcube1"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"headcube1"},"content":"    public InterviewBuilder() {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"headcube1"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"headcube1"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"headcube1"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"headcube1"},"content":"    public Interview buildInterview() {","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"headcube1"},"content":"        return new Interview(applicant, interviewer, DEFAULT_DATE, DEFAULT_START_TIME,","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"headcube1"},"content":"                DEFAULT_END_TIME, DEFAULT_DESCRIPTION);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"headcube1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"headcube1":52,"yashpola":8}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.ApplicantStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.InterviewerStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"import seedu.address.model.person.enums.Type;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"macareonie"},"content":"    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"macareonie"},"content":"    public static final String DEFAULT_EMAIL \u003d \"alice@gmail.com\";","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    public static final String DEFAULT_STATUS \u003d \"resume review\";","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"macareonie"},"content":"    private Remark remark;","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"macareonie"},"content":"    private String type;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    private String status;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"macareonie"},"content":"     * Initializes the PersonBuilder.","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"macareonie"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"macareonie"},"content":"        type \u003d Type.PERSON.toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        status \u003d DEFAULT_STATUS;","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"macareonie"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"macareonie"},"content":"        type \u003d personToCopy.getPersonType();","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"macareonie"},"content":"        if (type.equals(\"APPLICANT\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"macareonie"},"content":"            tags.add(new Tag(\"Applicant\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"macareonie"},"content":"        } else if (type.equals(\"INTERVIEWER\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"macareonie"},"content":"            tags.add(new Tag(\"Interviewer\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"macareonie"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"        status \u003d personToCopy.getCurrentStatus();","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"macareonie"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"macareonie"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"macareonie"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"macareonie"},"content":"        return this;","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"macareonie"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"yashpola"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"yashpola"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"yashpola"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"yashpola"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"macareonie"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":118,"author":{"gitId":"macareonie"},"content":"     * Builds the {@code Person} with the given {@code Name}, {@code Phone},","lastModifiedDate":"2024-03-02"},{"lineNumber":119,"author":{"gitId":"macareonie"},"content":"     * {@code Email},{@code Remark} and {@code Tags}.","lastModifiedDate":"2024-03-02"},{"lineNumber":120,"author":{"gitId":"macareonie"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":122,"author":{"gitId":"macareonie"},"content":"        return new Person(name, phone, email, remark, tags);","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"yashpola"},"content":"     * Builds the {@code Applicant} with the given {@code Name}, {@code Phone},","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"yashpola"},"content":"     * {@code Email},{@code Remark}, {@code Status} and {@code Tags}.","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"macareonie"},"content":"    public Applicant build_applicant() {","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"yashpola"},"content":"        return new Applicant(name, phone, email, remark, new ApplicantStatus(status), tags);","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"yashpola"},"content":"     * Builds the {@code Interviewer} with the given {@code Name}, {@code Phone},","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"yashpola"},"content":"     * {@code Email},{@code Remark}, {@code Status} and {@code Tags}.","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"macareonie"},"content":"    public Interviewer build_interviewer() {","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"yashpola"},"content":"        return new Interviewer(name, phone, email, remark, new InterviewerStatus(status), tags);","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"headcube1"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"headcube1":4,"yashpola":25,"-":81,"macareonie":30}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"gingerbreaf"},"content":"import seedu.address.logic.commands.AddApplicantPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"macareonie"},"content":"import seedu.address.logic.commands.AddInterviewerPersonCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public static String getAddInterviewerCommand(Person person) {","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"gingerbreaf"},"content":"        return AddInterviewerPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"macareonie"},"content":"    public static String getAddApplicantCommand(Person person) {","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"gingerbreaf"},"content":"        return AddApplicantPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"headcube1":2,"yashpola":1,"-":56,"gingerbreaf":3,"macareonie":3}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    public static final Index INDEX_LAST_PERSON \u003d Index.fromOneBased(9);","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"yashpola":1,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Applicant;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"headcube1"},"content":"import seedu.address.model.person.Interviewer;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"macareonie"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"macareonie"},"content":"            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"            .withStatus(\"resume review\").withTags(\"Applicant\", \"friends\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"macareonie"},"content":"            .withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"            .withTags(\"Applicant\", \"owesMoney\", \"friends\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"            .withEmail(\"heinz@example.com\").withTags(\"Applicant\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"            .withEmail(\"cornelia@example.com\").withTags(\"Applicant\", \"friends\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            .withEmail(\"werner@example.com\").withTags(\"Applicant\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"            .withEmail(\"lydia@example.com\").withTags(\"Applicant\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"            .withEmail(\"anna@example.com\").withTags(\"Applicant\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"            .withEmail(\"stefan@example.com\").withTags(\"Applicant\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"            .withEmail(\"hans@example.com\").withTags(\"Applicant\").build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"            .withEmail(VALID_EMAIL_AMY).withTags(\"Applicant\", VALID_TAG_FRIEND).build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"macareonie"},"content":"            .withEmail(VALID_EMAIL_BOB).withTags(\"Applicant\", VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"            .build_applicant();","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"headcube1"},"content":"    public static final Applicant HEAD \u003d new PersonBuilder().withName(\"head\").withPhone(\"12345678\")","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"macareonie"},"content":"            .withEmail(\"head@cube.com\").withTags(\"Applicant\").build_applicant();","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"headcube1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"headcube1"},"content":"    public static final Interviewer CUBE \u003d new PersonBuilder().withName(\"cube\").withPhone(\"87654321\")","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            .withEmail(\"cube@head.com\").withTags(\"Interviewer\").withStatus(\"free\").build_interviewer();","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"headcube1"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, HEAD, CUBE));","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"headcube1":6,"yashpola":12,"-":58,"macareonie":5}}]
