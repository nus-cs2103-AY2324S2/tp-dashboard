[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T13-4/tp/actions)","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"# SweetRewards","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"Welcome to **SweetRewards**, the premier desktop application designed to help small and medium-sized bakery owners efficiently manage their customer loyalty programs. By integration the use of a command-line interface (CLI), we give you the power to control your very own loyalty points systems through an easy-to-use command system!","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"## Key Features","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"- **Member Management**: Add, edit, and manage member details effortlessly.","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"- **Points and Membership Tiers**: Track purchases, manage reward points, and update membership tiers with ease.","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"- **Order and Catalogue Management**: Seamlessly manage your bakery\u0027s product catalogue and customer orders.","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"- **Data Management**: Automatic saving, with options for manual editing and archiving.","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"## Getting Started","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"1. **Installation**: Ensure your device has Java 11 or higher, and download the latest version of SweetRewards.","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"2. **Initialization**: Use the `seedData` command to populate your application with sample data, or start adding your members with `addmem`.","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"3. **Explore Features**: Dive into managing your loyalty program with features like `addorder`, `redeempoints`, and more.","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"kinjalagarwal1810":2,"kokerinks":15,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"run {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"    archiveFileName \u003d \u0027sweetrewards.jar\u0027","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"billyhoce":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"### Lim Kok Liang","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"\u003cimg src\u003d\"images/kokerinks.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"[[github](http://github.com/kokerinks)] [[linkedin](https://www.linkedin.com/in/lim-kok-liang/)]","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"* Role: Testing, Integration","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"### Billy Ho Cheng En","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"\u003cimg src\u003d\"images/billyhoce.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"[[github](http://github.com/billyhoce)]","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"[[portfolio](team/billyho.md)]","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"* Role: Team lead, Deliverables and deadlines","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"### Khushi Bhagwat","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"\u003cimg src\u003d\"images/kab-dot.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"[[github](http://github.com/kab-dot)]","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"[[portfolio](team/khushibhagwat.md)]","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"* Role: Documentation, Scheduling","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"### Kinjal Agarwal","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cimg src\u003d\"images/kinjalagarwal1810.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"[[github](http://github.com/kinjalagarwal1810)]","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"[[portfolio](team/kinjalagarwal1810.md)]","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"* Role: Code Quality","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"kab-dot":4,"kokerinks":3,"kinjalagarwal1810":11,"-":26,"billyhoce":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"* The storage of members in SweetRewards was reused with minimal changes from a past project ","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"AB3 ([nus-cs2103-AY2324S2/tp](https://github.com/nus-cs2103-AY2324S2/tp))","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"* The commands `addmem`, `clear`, `delmem`, `find`, `list`, `help` were reused with some changes from the previously-mentioned","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"AB3 ([nus-cs2103-AY2324S2/tp](https://github.com/nus-cs2103-AY2324S2/tp))","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"* Code introduced in both `main` and `test` codebase, as well as JavaDocs were produced with the aid of [GitHub Copilot](https://github.com/features/copilot),","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"an AI developer tool.","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delmem 1`.","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"Notably, the `MainWindow` also consists of two side panels `CataloguePanel` and `PersonOrdersPanel` which displays the `Catalogue` of the SweetRewards, and the orders of the selected person respectively.","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"`MainWindow` implements the `PersonSelectionListener` interface, and listens to when a `PersonCard` is clicked in the `PersonListPanel`. It then tells `PersonOrdersPanel` to update the orders displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delmem 1\")` API call as an example.","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"![Interactions Inside the Logic Component for the `delmem 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"billyhoce"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"billyhoce"},"content":"![ModelClassDiagram](images/ModelClassDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"billyhoce"},"content":"* stores the SweetRewards data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and the items for sale (which are contained in a `Catalogue` object).","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"billyhoce"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-T13-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"billyhoce"},"content":"![StorageClassDiagram](images/StorageClassDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"kinjalagarwal1810"},"content":"### Points feature","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"kokerinks"},"content":"The `addpoints` command that comes along with the points feature is implemented like this:","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"billyhoce"},"content":"![AddPointsSequenceDiagram](images/AddPointsSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"kab-dot"},"content":"### Orders feature","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"kokerinks"},"content":"The `addorder` command that comes along with the orders feature is implemented like this:","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"billyhoce"},"content":"![AddOrderSequenceDiagram](images/AddOrderSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"billyhoce"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"billyhoce"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"billyhoce"},"content":"Team Size: 4","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"billyhoce"},"content":"1. **Allow special characters in member names:** Currently, member names can only contain alphanumeric characters and spaces. This might cause problems when users want to add members that have special characters in their names such as `Tan Ye-Ming, John` or `Kumaren s/o Ramasamy`. Some special characters to be added includes apostrophes `\u0027`, brackets `()`, hyphens `-`, slashes `/` and periods `.`.","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"billyhoce"},"content":"2. **Allow numbers and special characters in item names:** Currently, item names only accept alphabetical characters. This prevents use cases such as items with quantities or special characters (E.g. `Chocolate-Chip Cookies 100g`) from being entered. We should allow alphanumeric and special characters.","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"billyhoce"},"content":"3. **Have order panel of GUI update when orders are updated:** Currently, the order panel of the GUI updates only when a person card is clicked, so when users add an order to a person or clears all data using the `clear --force` command, it does not show the updated orders until a person card is clicked. To fix this, either use an `ObservableList` to store the orders of each `Person`, or have the `addorder` and `clear` command force the order display to update.","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"billyhoce"},"content":"4. **Add a delete order command:** Currently, if a user accidentally adds a wrong order, the only solution is to delete the member using `delmem` and add the member back using `addmem`. This is a lot of trouble cause by a simple mistake. As such, we should have a command that allows deletion of orders, which likely works off indexing the orders of a person. For example `delorder n/John 2` deletes the second order of John 2. Of course to complement this feature, the index of orders should be displayed in the GUI. Points awarded in the deleted order should also be revoked.","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"billyhoce"},"content":"5. **Allow horizontal scrolling of GUI Person Card:** Currently the person card of the GUI does not allow horizontal scrolling if the details exceed the horizontal width of the UI. This causes extra-long inputs such as a 50 character long name to be not fully visible. This would allow for extra-long inputs for the name, phone number, email address, address, and allergens of added members.","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"billyhoce"},"content":"6. **Make `invalid person error` for `redeempts` more specific:** Currently the error message when a person cannot be found is `The person index provided is invalid` which is wrong because we are not using an indexing system. It should be changed to `The member \u003cUSER-ENTERED NAME\u003e cannot be found`","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"billyhoce"},"content":"7. **Make `invalid points error` for `additem` more specific:** Currently when adding an item with invalid points (E.g. `additem i/Cookies p/aa`), the error message shown is the `Invalid command format!` message, which is too general. It should be made more specific, stating the specific error of invalid points (E.g. `Invalid points per unit! Points per unit should a postive integer!`).","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"billyhoce"},"content":"8. **Add index-based selection for member selection:** Currently in our `addorder`, `addpts`, `addmempts`, `redeempts` commands, we select the member based on the first member in the list whose name contains the entered string. This might prove as an issue when there are two people with the same or similar names like `Wan Lei` and `Matthew Ang Wan Lei`. If the latter is closer to the top of the list (added earlier), there will be no way to select `Wan Lei`. To prevent this, indexing selection for these commands should be added (E.g. `addorder 3 i/Cookies` would add the Cookies order to the third person in the current filtered list). This does not get rid of the current name selection, and merely introduces an alternative to member selection.","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"billyhoce"},"content":"* Is a small-medium scale bakery owner","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"billyhoce"},"content":"* Has a need to manage a significant number of patrons\u0027 membership details","lastModifiedDate":"2024-04-15"},{"lineNumber":203,"author":{"gitId":"billyhoce"},"content":"* Want to keep track of points for each member and can easily allow accumulation and redemption of points","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"billyhoce"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2024-04-15"},{"lineNumber":205,"author":{"gitId":"billyhoce"},"content":"* Can type fast","lastModifiedDate":"2024-04-15"},{"lineNumber":206,"author":{"gitId":"billyhoce"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"billyhoce"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"billyhoce"},"content":"**Value proposition**: manage membership subscriptions for a small-medium bakery shop faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"billyhoce"},"content":"Priorities: Exists (Exists in this version), High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"| Priority | As a …​                                             | I want to …​                                                                                             | So that I can…​                                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"billyhoce"},"content":"|----------|-----------------------------------------------------|----------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2024-03-01"},{"lineNumber":218,"author":{"gitId":"billyhoce"},"content":"| `Exists` | Potential user exploring the app                    | See the app populated with sample data                                                                   | I can easily see how the app will look like when it is in use              |","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"billyhoce"},"content":"| `Exists` | Potential user exploring the app                    | Access the user guide easily via a help button                                                           |                                                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User ready to start using the app                   | Purge all current data                                                                                   | I can get rid of the sample data and input my own                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User learning to use the app                        | Add a new member                                                                                         |                                                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User learning to use the app                        | Check whether a particular member exists                                                                 | I can verify if a patron is a member or not                                |","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User learning to use the app                        | Manually add points to a member                                                                          | I can reward them for their patronage                                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User learning to use the app                        | Manually subtract points from a member                                                                   | The members can \"spend\" their points for discounts                         |","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User learning to use the app                        | Save all data on every command that changes the data                                                     | Closing the application (intended or not) will not lose my data            |","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User learning to use the app                        | See help on proper usage when I wrongly use a command                                                    | Easily learn and correct my mistakes                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User slightly familiar with the app                 | Add orders to a particular member (saves current date/time)                                              | I can track their past orders                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User slightly familiar with the app                 | Edit member details                                                                                      | When patrons change their name, address or contact, I can easily update it |","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User slightly familiar with the app                 | Delete members                                                                                           | I can remove a member from my list when they are not longer subscribed.    |","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User who likes to be organised                      | Create tags containing allergen information that can be attached to members                              | I can categorise members for different discounts etc.                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User who likes to be organised                      | Search for a member and see and overview of their profile                                                | I can see and easily refer to their important details                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to develop the business                | Count the number of members with a certain Tag                                                           | Make business decisions easier by observing my demographics                |","lastModifiedDate":"2024-03-01"},{"lineNumber":233,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User looking to develop the business                | Check the past orders of a member                                                                        | I can refer back to past orders for marketing/accounting purposes          |","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User with many orders                               | Create and add to a list of products, with the respective points they each reward when bought            | I can input multiple orders quickly                                        |","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User with many orders                               | Add an order to a member which automatically adds points using one single command                        | I can input multiple orders quickly                                        |","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to be more efficient                   | Add an order to a member which automatically adds points, and can redeem points using one single command | I can input multiple orders even quicker                                   |","lastModifiedDate":"2024-03-01"},{"lineNumber":237,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to be more efficient                   | Use all points from a member with a feedback to let me know how many was used                            | I can add orders without even looking at how many points a member has      |","lastModifiedDate":"2024-03-01"},{"lineNumber":238,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to expand the business                 | Create membership tiers that increase the amount of points earned                                        | I can expand my loyalty program                                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":239,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User looking to expand the business                 | Separate members into different tiers manually                                                           | I can expand my loyalty program                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User looking to expand the business                 | Create different redemptions using points other than flat discounts (Eg. free small cake)                | I can expand my loyalty program                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"billyhoce"},"content":"| `*`      | User looking for more complex membership structures | Create membership tiers using pre-built structures that define prerequisites for a tier                  | Automate the process of \"tiering up\"                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"billyhoce"},"content":"| `Exists` | User looking for more complex membership structures | Have members automatically \"tier up\" when they hit the prerequisites for a tier                          | Automate the process of \"tiering up\"                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"billyhoce"},"content":"| `*`      | User looking for more complex membership structures | Have points have an expiry date that I can decide on                                                     | Encourage patrons to spend their points by buying something                |","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"billyhoce"},"content":"| `*`      | User looking for more complex membership structures | Automatically SMS members when their points expire soon                                                  | Encourage patrons to spend their points by buying something                |","lastModifiedDate":"2024-03-01"},{"lineNumber":245,"author":{"gitId":"billyhoce"},"content":"| `*`      | User looking for more complex membership structures | Be able to send out announcements via SMS                                                                | Increase advertising to members                                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":246,"author":{"gitId":"billyhoce"},"content":"| `* *`    | Experienced User who is organised                   | Split the graphical interface into different sections containing members of different tiers              | Have an overview of the members in the different tiers                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"billyhoce"},"content":"| `* *`    | Experienced User who is organised                   | See how many members of each tier there is                                                               | I can understand how my loyalty system is doing                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"kab-dot"},"content":"(For all use cases below, the **System** is the `SweetRewards` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-01"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"kab-dot"},"content":"**Use case 1: Delete a member**","lastModifiedDate":"2024-03-01"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"kab-dot"},"content":"1.  User requests to list customers","lastModifiedDate":"2024-03-01"},{"lineNumber":260,"author":{"gitId":"kab-dot"},"content":"2.  SweetRewards shows a list of customers","lastModifiedDate":"2024-03-01"},{"lineNumber":261,"author":{"gitId":"kab-dot"},"content":"3.  User requests to delete a specific customer in the list","lastModifiedDate":"2024-03-01"},{"lineNumber":262,"author":{"gitId":"kab-dot"},"content":"4.  AddressBook deletes the customer","lastModifiedDate":"2024-03-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"kab-dot"},"content":"    * 3a1. SweetRewards shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":276,"author":{"gitId":"kab-dot"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":278,"author":{"gitId":"kab-dot"},"content":"**Use case 2: Add a member**","lastModifiedDate":"2024-03-01"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":280,"author":{"gitId":"kab-dot"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":282,"author":{"gitId":"kokerinks"},"content":"1.  User requests to add a customer by typing the command `addmem`","lastModifiedDate":"2024-04-14"},{"lineNumber":283,"author":{"gitId":"kab-dot"},"content":"2.  SweetRewards shows member added successfully","lastModifiedDate":"2024-03-01"},{"lineNumber":284,"author":{"gitId":"kab-dot"},"content":"3.  User can view added member successfully","lastModifiedDate":"2024-03-01"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":286,"author":{"gitId":"kab-dot"},"content":"    Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":288,"author":{"gitId":"kab-dot"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":291,"author":{"gitId":"kab-dot"},"content":"* 2a. The compulsory fields are empty","lastModifiedDate":"2024-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":293,"author":{"gitId":"kab-dot"},"content":"    * 2a1. SweetRewards shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":295,"author":{"gitId":"kab-dot"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":297,"author":{"gitId":"kab-dot"},"content":"**Use case 3: Add an order for a member**","lastModifiedDate":"2024-03-01"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":299,"author":{"gitId":"kab-dot"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":301,"author":{"gitId":"billyhoce"},"content":"1.  User requests to add an order to a member by typing the command `addorder`","lastModifiedDate":"2024-04-15"},{"lineNumber":302,"author":{"gitId":"kab-dot"},"content":"2.  SweetRewards shows order added successfully","lastModifiedDate":"2024-03-01"},{"lineNumber":303,"author":{"gitId":"billyhoce"},"content":"3.  User can view the order that was added to the member successfully","lastModifiedDate":"2024-04-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":305,"author":{"gitId":"kab-dot"},"content":"    Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":307,"author":{"gitId":"kab-dot"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":309,"author":{"gitId":"kab-dot"},"content":"* 2a. The compulsory fields are empty","lastModifiedDate":"2024-03-01"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":311,"author":{"gitId":"kab-dot"},"content":"    * 2a1. SweetRewards shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":313,"author":{"gitId":"kab-dot"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":316,"author":{"gitId":"billyhoce"},"content":"**Use case 4: Redeem points for a member**","lastModifiedDate":"2024-04-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":320,"author":{"gitId":"kab-dot"},"content":"1.  User requests to delete \"x\" number of points for a member by","lastModifiedDate":"2024-03-01"},{"lineNumber":321,"author":{"gitId":"billyhoce"},"content":"typing the command `redeempts`","lastModifiedDate":"2024-04-15"},{"lineNumber":322,"author":{"gitId":"billyhoce"},"content":"2.  SweetRewards shows \"x\" points redeemed for member","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"billyhoce"},"content":"3.  User can see that the member has \"x\" lesser points","lastModifiedDate":"2024-04-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":329,"author":{"gitId":"billyhoce"},"content":"* 2a. The current number of points is less than \"x\"","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":331,"author":{"gitId":"kab-dot"},"content":"    * 2a1. SweetRewards shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"kokerinks"},"content":"#### Usability","lastModifiedDate":"2024-03-01"},{"lineNumber":340,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"kokerinks"},"content":"2.  Should operate efficiently in a small business\u0027 technical environment i.e. should require minimal hardware resources.","lastModifiedDate":"2024-03-01"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"kokerinks"},"content":"#### Performance:","lastModifiedDate":"2024-03-01"},{"lineNumber":344,"author":{"gitId":"kokerinks"},"content":"1.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-01"},{"lineNumber":345,"author":{"gitId":"kokerinks"},"content":"2.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-01"},{"lineNumber":346,"author":{"gitId":"kokerinks"},"content":"3.  Ensure that all commands are executed and feedback is provided within 2 seconds during normal operation.","lastModifiedDate":"2024-03-01"},{"lineNumber":347,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":348,"author":{"gitId":"kokerinks"},"content":"#### Accessibility:","lastModifiedDate":"2024-03-01"},{"lineNumber":349,"author":{"gitId":"billyhoce"},"content":"Should support users with different abilities to effectively interact with the system.","lastModifiedDate":"2024-04-15"},{"lineNumber":350,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":351,"author":{"gitId":"kokerinks"},"content":"#### Security:","lastModifiedDate":"2024-03-01"},{"lineNumber":352,"author":{"gitId":"billyhoce"},"content":"Data stored should not be easily modified by non-authorised users of the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"billyhoce"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2024-04-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"billyhoce"},"content":"   2. Double-click the jar file ","lastModifiedDate":"2024-04-15"},{"lineNumber":376,"author":{"gitId":"kokerinks"},"content":"      Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2024-04-14"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"billyhoce"},"content":"2. Saving window preferences","lastModifiedDate":"2024-04-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"billyhoce"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"billyhoce"},"content":"3. Shutdown of application","lastModifiedDate":"2024-04-15"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"kokerinks"},"content":"   1. Enter `exit` into the command box OR click on the `X` button on the top-right hand corner of the window.","lastModifiedDate":"2024-04-14"},{"lineNumber":388,"author":{"gitId":"kokerinks"},"content":"       Expected: The application should close with no other obstructions.","lastModifiedDate":"2024-04-14"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"billyhoce"},"content":"### App Usage","lastModifiedDate":"2024-04-15"},{"lineNumber":391,"author":{"gitId":"billyhoce"},"content":"1. Adding a Member","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":393,"author":{"gitId":"billyhoce"},"content":"   1. Test case: `addmem n/Joseph Joestar hp/62226111 e/joseph@example.com a/455 Orchard Road, S(238801) ag/Chocolate` \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":394,"author":{"gitId":"billyhoce"},"content":"      Expected: New member named \"Joseph Joestar\" added. Scrolling to the bottom of the list of members show Joseph\u0027s details","lastModifiedDate":"2024-04-15"},{"lineNumber":395,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":396,"author":{"gitId":"billyhoce"},"content":"2. Adding an item to the catalogue","lastModifiedDate":"2024-04-15"},{"lineNumber":397,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":398,"author":{"gitId":"billyhoce"},"content":"   1. Prerequisites: The catalogue does not currently contain an item called `Pain Au Chocolat`","lastModifiedDate":"2024-04-15"},{"lineNumber":399,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":400,"author":{"gitId":"billyhoce"},"content":"   2. Test case: `additem i/Pain Au Chocolat p/250` \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":401,"author":{"gitId":"billyhoce"},"content":"      Expected: A new item `Pain Au Chocolat` worth 250 points is added to the bottom of the catalogue on the left panel ","lastModifiedDate":"2024-04-15"},{"lineNumber":402,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":403,"author":{"gitId":"billyhoce"},"content":"   3. Test case: `additem i/Pain Au Chocolat p/300` \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":404,"author":{"gitId":"billyhoce"},"content":"      Expected: An error message saying `This item already exists in the catalogue.`","lastModifiedDate":"2024-04-15"},{"lineNumber":405,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":406,"author":{"gitId":"billyhoce"},"content":"3. Adding an order to a member","lastModifiedDate":"2024-04-15"},{"lineNumber":407,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":408,"author":{"gitId":"billyhoce"},"content":"   1. Test case: `addorder n/joseph i/pain au chocolat q/2` \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":409,"author":{"gitId":"billyhoce"},"content":"      Expected: An order for 2 Pain Au Chocolats added to Joseph\u0027s orders. Scroll to Joseph\u0027s Person Card and click on it. The order panel on the right should show the order made. Joseph should also have 500 more reward and membership points.","lastModifiedDate":"2024-04-15"},{"lineNumber":410,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":411,"author":{"gitId":"billyhoce"},"content":"   2. Test case: `addorder n/joseph i/dinosaur meat q/2`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":412,"author":{"gitId":"billyhoce"},"content":"      Expected: An error message saying that the item cannot be found in the inventory","lastModifiedDate":"2024-04-15"},{"lineNumber":413,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":414,"author":{"gitId":"billyhoce"},"content":"4. Manual modification and redemption of points","lastModifiedDate":"2024-04-15"},{"lineNumber":415,"author":{"gitId":"billyhoce"},"content":"   1. Test case `addpts n/joseph p/100` \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":416,"author":{"gitId":"billyhoce"},"content":"      Expected: Joseph\u0027s reward points increase by 100. Membership points should stay the same","lastModifiedDate":"2024-04-15"},{"lineNumber":417,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":418,"author":{"gitId":"billyhoce"},"content":"   2. Test case `addmempts n/joseph mp/10000` \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":419,"author":{"gitId":"billyhoce"},"content":"      Expected: Joseph\u0027s membership points increase by 10000, and his membership tier should be upgraded to `PLATINUM`. His reward points should stay the same.","lastModifiedDate":"2024-04-15"},{"lineNumber":420,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":421,"author":{"gitId":"billyhoce"},"content":"   3. Test case `redeempts n/joseph p/100` \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":422,"author":{"gitId":"billyhoce"},"content":"      Expected: Joseph\u0027s reward points should decrease by 100. Membership points should stay the same","lastModifiedDate":"2024-04-15"},{"lineNumber":423,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":424,"author":{"gitId":"billyhoce"},"content":"   4. Test case `redeempts n/joseph p/10000` \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":425,"author":{"gitId":"billyhoce"},"content":"      Expected: An error message stating that joseph does not have enough reward points","lastModifiedDate":"2024-04-15"},{"lineNumber":426,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":427,"author":{"gitId":"billyhoce"},"content":"5. Deleting a Member","lastModifiedDate":"2024-04-15"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"kokerinks"},"content":"   1. Test case: `delmem 1`\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":430,"author":{"gitId":"billyhoce"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"billyhoce"},"content":"   2. Test case: `delmem 0`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":433,"author":{"gitId":"billyhoce"},"content":"      Expected: No person is deleted. Error details shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"billyhoce"},"content":"   3. Other incorrect delete commands to try: `delmem`, `delmem x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":436,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"billyhoce"},"content":"1. Saving user data","lastModifiedDate":"2024-04-15"},{"lineNumber":440,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":441,"author":{"gitId":"billyhoce"},"content":"   1. Assuming the previous steps have been done,","lastModifiedDate":"2024-04-15"},{"lineNumber":442,"author":{"gitId":"billyhoce"},"content":"   2. Close the application","lastModifiedDate":"2024-04-15"},{"lineNumber":443,"author":{"gitId":"billyhoce"},"content":"   3. Open the application","lastModifiedDate":"2024-04-15"},{"lineNumber":444,"author":{"gitId":"billyhoce"},"content":"   4. The newly added member `Joseph Joestar` and all his details should remain","lastModifiedDate":"2024-04-15"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"billyhoce"},"content":"2. Dealing with missing/corrupted data files","lastModifiedDate":"2024-04-15"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"kokerinks"},"content":"   1. Prerequisites:","lastModifiedDate":"2024-04-14"},{"lineNumber":449,"author":{"gitId":"kokerinks"},"content":"      1. Launch the application.","lastModifiedDate":"2024-04-14"},{"lineNumber":450,"author":{"gitId":"kokerinks"},"content":"      2. Enter the command `clear --force` into the command box.","lastModifiedDate":"2024-04-14"},{"lineNumber":451,"author":{"gitId":"kokerinks"},"content":"          WARNING: This will clear all existing data from the application which you will not get back!","lastModifiedDate":"2024-04-14"},{"lineNumber":452,"author":{"gitId":"kokerinks"},"content":"      3. Enter the command `seeddata` into the command box.","lastModifiedDate":"2024-04-14"},{"lineNumber":453,"author":{"gitId":"kokerinks"},"content":"      4. Exit the application.","lastModifiedDate":"2024-04-14"},{"lineNumber":454,"author":{"gitId":"kokerinks"},"content":"   ","lastModifiedDate":"2024-04-14"},{"lineNumber":455,"author":{"gitId":"kokerinks"},"content":"   2. From the same directory as the application, open the `data` directory, then `addressbook.json` in your preferred editor ","lastModifiedDate":"2024-04-14"},{"lineNumber":456,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":457,"author":{"gitId":"kokerinks"},"content":"   3. Remove line 8 (`\"points\" : \"0\",`) from the file.","lastModifiedDate":"2024-04-14"},{"lineNumber":458,"author":{"gitId":"billyhoce"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":459,"author":{"gitId":"kokerinks"},"content":"   4. Re-launch the application.  ","lastModifiedDate":"2024-04-14"},{"lineNumber":460,"author":{"gitId":"kokerinks"},"content":"      Expected: Application should open with no visible contacts and items","lastModifiedDate":"2024-04-14"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":462,"author":{"gitId":"kokerinks"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-14"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":464,"author":{"gitId":"kokerinks"},"content":"## **Appendix: Effort**","lastModifiedDate":"2024-04-14"},{"lineNumber":465,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":466,"author":{"gitId":"kokerinks"},"content":"- Our project expanded to include more than one entity type. Namely, we added the `Item` entity type, which stores the","lastModifiedDate":"2024-04-14"},{"lineNumber":467,"author":{"gitId":"kokerinks"},"content":"name and points per quantity for each item stored in the application.","lastModifiedDate":"2024-04-14"},{"lineNumber":468,"author":{"gitId":"kokerinks"},"content":"  ","lastModifiedDate":"2024-04-14"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"kokerinks"},"content":"- Multiple new fields were implemented to store additional information for each `Person` entity:","lastModifiedDate":"2024-04-14"},{"lineNumber":471,"author":{"gitId":"kokerinks"},"content":"    - `Points`: stores the redeemable points which the member currently has. (By Kinjal)","lastModifiedDate":"2024-04-14"},{"lineNumber":472,"author":{"gitId":"kokerinks"},"content":"    - `MembershipTier`: stores the current membership tier of the member. (By Khushi)","lastModifiedDate":"2024-04-14"},{"lineNumber":473,"author":{"gitId":"kokerinks"},"content":"      - Later repurposed to `MembershipPoints`, after we noticed it was easier for the application to instead keep track of the","lastModifiedDate":"2024-04-14"},{"lineNumber":474,"author":{"gitId":"kokerinks"},"content":"        cumulative points of the member. (By Kok Liang)","lastModifiedDate":"2024-04-14"},{"lineNumber":475,"author":{"gitId":"kokerinks"},"content":"    - `Orders`: stores the previous orders (as Strings) which were made by the member. (By Billy)","lastModifiedDate":"2024-04-14"},{"lineNumber":476,"author":{"gitId":"kokerinks"},"content":"      - Later enhanced to store `Item` entities.","lastModifiedDate":"2024-04-14"},{"lineNumber":477,"author":{"gitId":"kokerinks"},"content":"    - Each additional field required fixing existing code which used the `Person` entity. This includes:","lastModifiedDate":"2024-04-14"},{"lineNumber":478,"author":{"gitId":"kokerinks"},"content":"      - `Person` constructors","lastModifiedDate":"2024-04-14"},{"lineNumber":479,"author":{"gitId":"kokerinks"},"content":"      - All/most commands which involve members e.g. `addmem`, `editmem`","lastModifiedDate":"2024-04-14"},{"lineNumber":480,"author":{"gitId":"kokerinks"},"content":"      - Existing JSON storage files for testing","lastModifiedDate":"2024-04-14"},{"lineNumber":481,"author":{"gitId":"kokerinks"},"content":"    - Hence, adding these fields introduced additional levels of complexity to our application.","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"kab-dot":28,"kokerinks":55,"kinjalagarwal1810":1,"-":263,"billyhoce":134}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"title: SweetRewards User Guide","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"## Table of Contents","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"1. [Introduction](#1-introduction)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"   1.1 [Target Audience](#11-target-audience)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"   1.2 [Purpose of this Guide](#12-purpose-of-this-guide)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"   1.3 [Getting Started with SweetRewards](#13-getting-started-with-sweetrewards)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"   1.4 [Navigating this Guide](#14-navigating-this-guide)","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"2. [About SweetRewards](#2-about-sweetrewards)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"   2.1 [Understanding Membership Tiers and Points System](#21-understanding-membership-tiers-and-points-system)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"   2.2 [Navigating our Main Window](#22-navigating-our-main-window)","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"3. [Getting Started](#3-getting-started)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"4. [Features](#4-features)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.1 [Viewing help](#41-viewing-help--help)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.2 [Initializing program with seed data](#42-initializing-program-with-seed-data--seeddata)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.3 [Adding a Member](#43-adding-a-member--addmem)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.4 [Listing all members](#44-listing-all-members--list)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.5 [Adding a new Item to the Catalogue](#45-adding-an-item-to-the-catalogue--additem)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.6 [Deleting an Item from the Catalogue](#46-deleting-an-item-from-the-catalogue--delitem)\u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.7 [Adding Orders to a member](#47-adding-orders-to-a-member--addorder)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.8 [Adding points to a member](#48-adding-points--addpts)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.9 [Redeeming Points](#49-redeeming-points--redeempts)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.10 [Updating Membership Tiers](#410-adding-membership-points--addmempts)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.11 [Editing a member\u0027s details](#411-editing-a-member--edit)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.12 [Locating a member by name](#412-locating-members-by-name--find)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.13 [Deleting a member](#413-deleting-a-member--delmem)\u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.14 [Clearing all entries](#414-clearing-all-entries--clear)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.15 [Exiting the program](#415-exiting-the-program--exit)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"   4.16 [Saving the data](#416-saving-the-data)\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"5. [Example Tutorial](#5-example-tutorial)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"6. [Glossary](#6-glossary)\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"7. [FAQs](#7-faq)\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"8. [Troubleshooting](#8-troubleshooting)\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"9. [Command Summary](#9-command-summary)\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"10. [Planned Enhancements](#10-planned-enhancements)\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"# 1. Introduction","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"Welcome to the SweetRewards User Guide! This guide is your comprehensive manual to navigating and maximizing the SweetRewards application. [SweetRewards](#2-about-sweetrewards) is a dynamic desktop application designed for small bakery owners to **manage their loyalty program memberships** efficiently. By leveraging the robustness of a [Command Line Interface (CLI)](#6-glossary) while retaining the intuitive nature of a [Graphical User Interface (GUI)](#6-glossary), SweetRewards delivers an optimized experience for fast typers and GUI enthusiasts alike.","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"## 1.1 Target Audience","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"This guide is intended for **small to medium-sized bakery owners** or staff responsible for managing **customer relationships and loyalty programs**. We assume that users have a basic understanding of command-line interfaces and desktop applications but **do not require advanced technical skills**. SweetRewards is crafted to simplify your membership tracking, offering a seamless integration into your daily operations.","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"## 1.2 Purpose of this Guide","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"The purpose of this User Guide is to assist you in understanding and utilizing the SweetRewards application to its fullest potential. Whether you are looking to onboard new members, track orders, manage reward points or update [Membership Tiers](#6-glossary) this guide will provide step-by-step instructions to ensure a smooth experience.","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"## 1.3 Getting Started with SweetRewards","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"To begin using SweetRewards, ensure that your device meets the **software’s compatibility requirements**. Follow the installation instructions provided under [Getting Started](#3-getting-started). After installation, familiarize yourself with the GUI elements and practice basic CLI commands through the introductory tutorial.","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"There is also an additional more comprehensive [tutorial](#5-example-tutorial) for those who may need more guidance on how to use this app.","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"## 1.4 Navigating this Guide","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"This User Guide is structured to help you find information quickly and easily. Use the table of contents to navigate to specific sections. Throughout the guide, you’ll find tips, warnings, and best practices highlighted to draw your attention to important information. If you’re new to CLI, refer to the section on [CLI usage](#4-features) for an explanation of commands and syntax.","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"By following this guide, you’ll learn how to leverage SweetRewards effectively, ensuring that your bakery’s loyalty program runs smoothly and your customers remain happy and engaged. Let’s get started on making the most out of your SweetRewards experience!","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"Throughout the guide, you\u0027ll encounter various icons that signify different types of information. Use these icons as a guide to help focus your attention on key information as you read through the manual.","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #DBAE58; margin: 10px 0; padding: 10px; background-color: #FFF3E0; color: #886B00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"  💡 \u003cstrong\u003eTip:\u003c/strong\u003e This icon indicates a tip, suggestion, or piece of advice to help you use SweetRewards more effectively.","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e This icon alerts you to potential pitfalls or actions that could negatively impact your use of the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e This icon signifies key benefits and positive outcomes from using a feature within SweetRewards.","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D32D41; margin: 10px 0; padding: 10px; background-color: #FCE4EC; color: #A50016; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"  🚫 \u003cstrong\u003eProblem:\u003c/strong\u003e Identifies common challenges or issues you may encounter.","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #6AB187; margin: 10px 0; padding: 10px; background-color: #E0EFEB; color: #276749; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"  ✅ \u003cstrong\u003eSolution:\u003c/strong\u003e Provides answers or solutions to the problems presented.","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"# 2. About SweetRewards","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"SweetRewards is not just a contact management tool; it\u0027s your partner in cultivating **customer loyalty and enhancing your bakery\u0027s membership program**. With SweetRewards, you can:","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"* **Track your bakery\u0027s catalogue**: Keep a record of all your bakes goodies and the respective points a member can earn by purchasing one.","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"* **Track member information**: Keep a detailed record of each member, including their name, phone number, email, address, [allergens](#6-glossary), points, membership points, [membership tier](#6-glossary), and order history.","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"* **Manage orders and points**: Seamlessly add orders which automatically updates customers\u0027 points to reflect customer purchases and interactions.","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"* **Update Membership Tiers**: Automatically elevate members\u0027 tiers based on their membership points, unlocking new rewards and benefits aligned with each tier.","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"## 2.1 Understanding Membership Tiers and Points System","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"SweetRewards features a **dual-point system** designed to enhance customer engagement and loyalty: `Points` and `Membership Points`. Each member will also fall under a `Membership Tier` that is associated with benefits and rewards.","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"### Points vs. Membership Points","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"SweetRewards employs a nuanced points system to foster both immediate and long-term customer loyalty. Below is a comparative overview of the two types of points within the program, showcasing their distinct roles:","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"| Attribute | `Points`                                                               | `Membership points`                                                        |","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"|-----------|------------------------------------------------------------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"| Purpose   | Serve as currency within the loyalty program for immediate rewards     | Track long-term customer engagement and determine membership tier          |","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"| Earning   | Earned through purchases and specific interactions within the bakery   | Earned identically to Points but are cumulative and never decrease         |","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"| Redeeming | Can be redeemed for discounts, offers, or products                     | Not redeemable; solely influence tier status                               |","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"| Impact    | Affect immediate customer benefits and rewards                         | Determine the member\u0027s tier and long-term benefits within the program      |","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"| Commands  | `addorder` and `addpts` increases points; `redeempts` decreases points | Only increased by `addorder` and `addmempts`; unaffected by `redeempoints` |","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e While both types of points are earned through purchases, Points cater to immediate gratification by being redeemable for rewards. In contrast, Membership Points are designed to recognize and reward the cumulative loyalty of customers, influencing their progression through the Membership Tiers without direct redemption for goods or services.","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e Ensure that the total number of points/membership points a member has remains within the safe range of 0…2,000,000,000 so that the program does not malfunction.","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"kinjalagarwal1810"},"content":"### Membership Tiers: Criteria and Benefits","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"kinjalagarwal1810"},"content":"Members are classified into tiers based on their accumulated membership points. Each tier unlocks distinct benefits, rewarding members for their loyalty. These benefits can be defined by you to allow flexibility with what you have to offer.","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"kinjalagarwal1810"},"content":"| `Membership Tier`                                | Perks                                                                                                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"kinjalagarwal1810"},"content":"|--------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"kinjalagarwal1810"},"content":"| \u003cspan style\u003d\"color:#E4953C\"\u003e**Bronze**:\u003c/span\u003e   | - Entry-level for all new members.\u003cbr/\u003e - Offers basic rewards and incentives.                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"kinjalagarwal1810"},"content":"| \u003cspan style\u003d\"color:Grey\"\u003e**Silver**:\u003c/span\u003e      | - Requires members to accumulate a specified threshold of membership points.\u003cbr/\u003e  - Unlocks enhanced benefits and rewards. |","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"kinjalagarwal1810"},"content":"| \u003cspan style\u003d\"color:#B5A03D\"\u003e**Gold**:\u003c/span\u003e     | - A higher tier requiring more membership points. \u003cbr/\u003e  - Offers substantial rewards and exclusive offers.                 |","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"kinjalagarwal1810"},"content":"| \u003cspan style\u003d\"color:#584F3F\"\u003e**Platinum**:\u003c/span\u003e | - The pinnacle of the membership hierarchy. \u003cbr/\u003e - Members enjoy the best rewards and personalized services.               |","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"kinjalagarwal1810"},"content":"### Automatic Tier Updates","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"kinjalagarwal1810"},"content":"* Tiers are **updated automatically** as members reach the necessary membership points for each level.","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"kinjalagarwal1810"},"content":"* Ensures members are **rewarded seamlessly** for their loyalty and spending.","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #DBAE58; margin: 10px 0; padding: 10px; background-color: #FFF3E0; color: #886B00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"kinjalagarwal1810"},"content":"  💡 \u003cstrong\u003eTip:\u003c/strong\u003e In this current iteration, the name, number and point requirement for the tiers are still in development. Hence, instead, users can change the number of points given to their item to suit their use.","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e By maintaining and upgrading membership tiers, you foster a stronger relationship with your customers, encouraging them to return to your bakery. This system not only enhances customer loyalty but also drives sales by offering tangible rewards for continued patronage.","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"kinjalagarwal1810"},"content":"## 2.2 Navigating our Main Window","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"kinjalagarwal1810"},"content":"The main window of SweetRewards is divided into several panels for easy navigation and access:","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"kinjalagarwal1810"},"content":"![Uiannotated](images/Uiannotated.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":141,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"kinjalagarwal1810"},"content":"* **Menu Bar**: At the top, you\u0027ll find the File and Help options. Use these for quick access to closing the application and seeking help. ","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"kinjalagarwal1810"},"content":"* **Command Input**: This is the text field at the bottom of the GUI where you enter commands to interact with SweetRewards. ","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"kinjalagarwal1810"},"content":"* **Catalogue Panel**: Displays the list of items available in your bakery along with their corresponding points. ","lastModifiedDate":"2024-04-15"},{"lineNumber":145,"author":{"gitId":"kinjalagarwal1810"},"content":"* **Member List Panel**: Shows all the members of your loyalty program along with their details like contact number, membership tier, and accumulated points. ","lastModifiedDate":"2024-04-15"},{"lineNumber":146,"author":{"gitId":"kinjalagarwal1810"},"content":"* **Member Orders Panel**: When you select a member, this panel will show all their past orders including the date, items purchased, and the points earned from each order.","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"kinjalagarwal1810"},"content":"  * Update on Selection: The panel updates to show a member\u0027s orders only when a new member is selected from the Member List Panel. ","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"kinjalagarwal1810"},"content":"  * Re-Selection for Refresh: To view updated order information following a change (like a new order addition), you must re-select the member. ","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"kinjalagarwal1810"},"content":"  * Persistent Display: If a member is deleted or all data is cleared, the orders panel may still show the last viewed order history until a new member is clicked or the application is refreshed.","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"kinjalagarwal1810"},"content":"# 3. Getting Started","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"billyhoce"},"content":"2. Download the latest `sweetrewards.jar` from [here](https://github.com/AY2324S2-CS2103T-T13-4/tp/releases).","lastModifiedDate":"2024-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"kinjalagarwal1810"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for SweetRewards.","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"kinjalagarwal1810"},"content":"4. Double-click the `sweetrewards.jar` file to run the application. If the application does not start, see [here](#8-troubleshooting).","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"kab-dot"},"content":"5. A [GUI](#6-glossary) similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"billyhoce"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"billyhoce"},"content":"   * `addmem n/John Doe hp/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a member named `John Doe` to the address book.","lastModifiedDate":"2024-04-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"kinjalagarwal1810"},"content":"   * `addorder n/Alex i/Plain Waffle q/4` : Adds an order of 4 plain waffles to member Alex Yeoh","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":177,"author":{"gitId":"billyhoce"},"content":"   * `additem i/Pain Au Chocolat p/250` : Adds \"Pain Au Chocolat\" to the catalogue that awards 250 points to a member when purchased","lastModifiedDate":"2024-04-05"},{"lineNumber":178,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":179,"author":{"gitId":"kinjalagarwal1810"},"content":"   * `clear` : Deletes all contacts and all items in the catalogue. (enter `clear --force` for the confirmation)","lastModifiedDate":"2024-04-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"billyhoce"},"content":"7. Refer to the [Features](#4-features) below for details of each command.","lastModifiedDate":"2024-04-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #DBAE58; margin: 10px 0; padding: 10px; background-color: #FFF3E0; color: #886B00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"kinjalagarwal1810"},"content":"  💡 \u003cstrong\u003eTip:\u003c/strong\u003e If you would like more guidance in using the app do consider following our Example Tutorial below in Section 5!","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"kinjalagarwal1810"},"content":"[Link to Example Tutorial](#5-example-tutorial)","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"kinjalagarwal1810"},"content":"# 4. Features","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"kinjalagarwal1810"},"content":"- **Words in `UPPER_CASE`** are the parameters to be supplied by the user.","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"kinjalagarwal1810"},"content":"    - Example: In `add n/MEMBER_NAME`, `MEMBER_NAME` is a parameter that can be used as `add n/John Doe`.","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"kinjalagarwal1810"},"content":"- **Items in square brackets** are optional.","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"kinjalagarwal1810"},"content":"    - Example: `n/MEMBER_NAME [ag/ALLERGEN]` can be used as `n/John Doe ag/GF` or as `n/John Doe`.","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"kinjalagarwal1810"},"content":"- **Items followed by an ellipsis (`…`)** can be used multiple times, including zero times.","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"kinjalagarwal1810"},"content":"    - Example: `[ag/ALLERGEN]…` can be used as ` ` (i.e., 0 times), `ag/GF`, `ag/GF ag/LF`, etc.","lastModifiedDate":"2024-04-15"},{"lineNumber":205,"author":{"gitId":"kinjalagarwal1810"},"content":"- **Parameters can be in any order**.","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"kinjalagarwal1810"},"content":"    - Example: If the command specifies `n/MEMBER_NAME hp/MEMBER_PHONE`, using `hp/MEMBER_PHONE n/MEMBER_NAME` is also acceptable.","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"kinjalagarwal1810"},"content":"- **Repeat parameters** (Except for allergens) is not allowed and will result in an error.","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"kinjalagarwal1810"},"content":"- **Extraneous parameters for commands that do not take in parameters** (such as `help`, `list`, `exit`, and `clear`) will be ignored.","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"kinjalagarwal1810"},"content":"    - Example: If the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"kinjalagarwal1810"},"content":"- **When using a PDF version of this document**, be careful when copying and pasting commands that span multiple lines, as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"kinjalagarwal1810"},"content":"- **If there is a repeat parameter**, only last parameter will be taken","lastModifiedDate":"2024-04-08"},{"lineNumber":212,"author":{"gitId":"kab-dot"},"content":"  - Example: `delitem i/chocolate croissant i/kaya waffle` will only delete kaya waffle from the catalogue.","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"kinjalagarwal1810"},"content":"  - Exception: The `addmem` command will give an error if repeat parameters exist to help you make sure that you did not make a mistake!","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"kinjalagarwal1810"},"content":"- **For commands that accept partial names**, the system matches the input to the member whose name most closely resembles the provided partial name. If the partial name could refer to multiple members, the system will select the first member listed.","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"kinjalagarwal1810"},"content":"  - To minimize confusion and errors, it is strongly recommended to use unique, full names of members when issuing commands. This practice also helps prevent duplicating member entries with similar names.","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"kinjalagarwal1810"},"content":"  - Example: If there are members named `Betsy Crowead` and `Betsy Dredge`, and you issue a command for `Betsy`, the system will apply the command to the first `Betsy Crowe` listed in the member directory.","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"kinjalagarwal1810"},"content":"- Commands can only be in **English**","lastModifiedDate":"2024-04-08"},{"lineNumber":218,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.1 Viewing help : `help`","lastModifiedDate":"2024-04-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"kokerinks"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-03-01"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `help`","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Whenever you feel stuck or need a quick reminder on how to use a specific command, just type help to open up this User Guide. This ensures you\u0027re never left in the dark about how to manage your loyalty program effectively.","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #DBAE58; margin: 10px 0; padding: 10px; background-color: #FFF3E0; color: #886B00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"kinjalagarwal1810"},"content":"  💡 \u003cstrong\u003eTip:\u003c/strong\u003e Use the -c flag (help -c) to show you a list of all the commands available in this application without opening an external link!","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"kab-dot"},"content":"### 4.2 Initializing program with [Seed Data](#6-glossary) : `seeddata`","lastModifiedDate":"2024-04-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":238,"author":{"gitId":"kinjalagarwal1810"},"content":"Adds a set of pre-defined sample data into the application.","lastModifiedDate":"2024-04-08"},{"lineNumber":239,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":240,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `seeddata`","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"kokerinks"},"content":"* If there is existing data, it will retain the current data on top of the new sample data to be added.","lastModifiedDate":"2024-03-07"},{"lineNumber":242,"author":{"gitId":"kinjalagarwal1810"},"content":"* `seeddata` will only add sample members which do not exist in the application yet.","lastModifiedDate":"2024-04-08"},{"lineNumber":243,"author":{"gitId":"kokerinks"},"content":"* If all members in sample data already exists, it will display the following message:","lastModifiedDate":"2024-03-07"},{"lineNumber":244,"author":{"gitId":"kinjalagarwal1810"},"content":"  `Every member and items in catalogue from seed data already exist in the address book!`","lastModifiedDate":"2024-04-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e If you\u0027re new to SweetRewards, using seeddata can help you get started by populating your system with example members and transactions. This way, you can see exactly how SweetRewards functions without having to enter data from scratch.","lastModifiedDate":"2024-04-15"},{"lineNumber":248,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.3 Adding a member : `addmem`","lastModifiedDate":"2024-04-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"kinjalagarwal1810"},"content":"Adds a member to the loyalty program.","lastModifiedDate":"2024-04-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `addmem n/MEMBER_NAME hp/PHONE e/MEMBER_EMAIL a/MEMBER_ADDRESS [ag/ALLERGEN]…​`","lastModifiedDate":"2024-04-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"kinjalagarwal1810"},"content":"* `MEMBER_NAME` should only contain alphanumeric characters and spaces. Special characters are unfortunately not allowed for now.","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"kinjalagarwal1810"},"content":"  * `MEMBER_NAME` is regarded as unique if it differs in alphabets, numbers, or has a varying number of spaces between characters. It is case-sensitive.","lastModifiedDate":"2024-04-08"},{"lineNumber":258,"author":{"gitId":"kinjalagarwal1810"},"content":"* `PHONE` should only contain numbers, and it should be at least 3 digits long.","lastModifiedDate":"2024-04-08"},{"lineNumber":259,"author":{"gitId":"kinjalagarwal1810"},"content":"* `MEMBER_EMAIL` should be of the format local-part@domain and adhere to the following constraints:","lastModifiedDate":"2024-04-08"},{"lineNumber":260,"author":{"gitId":"kinjalagarwal1810"},"content":"  1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+_.-). The local-part may not start or end with any special characters.","lastModifiedDate":"2024-04-08"},{"lineNumber":261,"author":{"gitId":"kinjalagarwal1810"},"content":"  2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.","lastModifiedDate":"2024-04-08"},{"lineNumber":262,"author":{"gitId":"kinjalagarwal1810"},"content":"     The domain name must:","lastModifiedDate":"2024-04-08"},{"lineNumber":263,"author":{"gitId":"kinjalagarwal1810"},"content":"      - end with a domain label at least 2 characters long","lastModifiedDate":"2024-04-08"},{"lineNumber":264,"author":{"gitId":"kinjalagarwal1810"},"content":"      - have each domain label start and end with alphanumeric characters","lastModifiedDate":"2024-04-08"},{"lineNumber":265,"author":{"gitId":"kinjalagarwal1810"},"content":"      - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2024-04-08"},{"lineNumber":266,"author":{"gitId":"kinjalagarwal1810"},"content":"* `MEMBER_EMAIL` need not be unique for different members.","lastModifiedDate":"2024-04-08"},{"lineNumber":267,"author":{"gitId":"kab-dot"},"content":"* `ALLERGEN` names must be alphanumeric and doesn\u0027t accept spaces. Common [allergens](#6-glossary) that are universally recognised that you may use are","lastModifiedDate":"2024-04-14"},{"lineNumber":268,"author":{"gitId":"kinjalagarwal1810"},"content":"  - GF: Gluten-Free","lastModifiedDate":"2024-04-08"},{"lineNumber":269,"author":{"gitId":"kinjalagarwal1810"},"content":"  - LF: Lactose-Free","lastModifiedDate":"2024-04-08"},{"lineNumber":270,"author":{"gitId":"kinjalagarwal1810"},"content":"  - DF: Dairy-Free","lastModifiedDate":"2024-04-08"},{"lineNumber":271,"author":{"gitId":"kinjalagarwal1810"},"content":"  - EG: Egg-Free","lastModifiedDate":"2024-04-08"},{"lineNumber":272,"author":{"gitId":"kinjalagarwal1810"},"content":"  - NF: Nut-Free","lastModifiedDate":"2024-04-08"},{"lineNumber":273,"author":{"gitId":"kinjalagarwal1810"},"content":"  - PF: Peanut-Free","lastModifiedDate":"2024-04-08"},{"lineNumber":274,"author":{"gitId":"kinjalagarwal1810"},"content":"  - SF: Soy-Free","lastModifiedDate":"2024-04-08"},{"lineNumber":275,"author":{"gitId":"kinjalagarwal1810"},"content":"  - CF: Casein-Free","lastModifiedDate":"2024-04-08"},{"lineNumber":276,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e The purpose of including allergens is to allow you to keep track of the allergies and dietary requirements of your customers. This is so that you can warn your customers when they order an item that contains their allergens or take note of it when customising on order. Nevertheless, this is an optional field that you may omit if you find unnecessary.","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":279,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":280,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"billyhoce"},"content":"* `addmem n/John Doe a/John street, block 123, #01-01 hp/98765432 e/johnd@example.com `","lastModifiedDate":"2024-04-05"},{"lineNumber":282,"author":{"gitId":"billyhoce"},"content":"* `addmem n/Betsy Crowe a/Newton Street hp/1234567 e/betsycrowe@example.com ag/GF `","lastModifiedDate":"2024-04-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Grow your bakery\u0027s community and keep track of your customers\u0027 preferences and purchases by adding them as members. Use addmem to easily enroll new customers into your loyalty program, helping you personalize their experience and encourage repeat business.","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":289,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e Ensure `MEMBER_NAME` is unique, preferably the full name, if not this might cause trouble in the future when using other commands like `addorder`.","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":291,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":292,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.4 Listing all members : `list`","lastModifiedDate":"2024-04-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"kinjalagarwal1810"},"content":"Shows a list of all members in the loyalty program.","lastModifiedDate":"2024-03-26"},{"lineNumber":295,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":296,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `list`","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":299,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Stay on top of your customer management by using list to view all your loyalty program members at a glance. This can help you quickly access customer information and make informed decisions on rewards and promotions.","lastModifiedDate":"2024-04-15"},{"lineNumber":300,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":301,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":302,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.5 Adding an Item to the Catalogue : `additem`","lastModifiedDate":"2024-04-08"},{"lineNumber":303,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":304,"author":{"gitId":"kinjalagarwal1810"},"content":"Adds an item along with its corresponding points to the catalogue.","lastModifiedDate":"2024-04-08"},{"lineNumber":305,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":306,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `additem i/ITEM_NAME p/POINTS_PER_UNIT`","lastModifiedDate":"2024-04-15"},{"lineNumber":307,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":308,"author":{"gitId":"billyhoce"},"content":"* `ITEM_NAME` represents the alphabetical name of the item. Numbers and special characters are unfortunately not allowed for now.","lastModifiedDate":"2024-04-15"},{"lineNumber":309,"author":{"gitId":"kinjalagarwal1810"},"content":"* `POINTS_PER_UNIT` represent the number of points a member earns upon purchasing the item. It must be a positive integer 1, 2, 3, …","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":311,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"kinjalagarwal1810"},"content":"* `additem i/Chocolate Cake p/50` Adds `Chocolate Cake` with `50` points to the catalogue.","lastModifiedDate":"2024-04-08"},{"lineNumber":313,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":314,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":315,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Enhance your loyalty program\u0027s rewards by adding new items to the catalogue. This allows you to keep your offerings fresh and enticing, encouraging more purchases and participation from members.","lastModifiedDate":"2024-04-15"},{"lineNumber":316,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":317,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":319,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e You are strongly recommended to only use points less than 10000 to ensure the total points/membership points a member has remains within the safe range of 0…2,000,000,000.","lastModifiedDate":"2024-04-15"},{"lineNumber":320,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":321,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":322,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.6 Deleting an Item from the Catalogue : `delitem`","lastModifiedDate":"2024-04-08"},{"lineNumber":323,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":324,"author":{"gitId":"kinjalagarwal1810"},"content":"Removes an item and its corresponding points from the catalogue.","lastModifiedDate":"2024-04-08"},{"lineNumber":325,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":326,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `delitem i/ITEM_NAME`","lastModifiedDate":"2024-04-15"},{"lineNumber":327,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":328,"author":{"gitId":"kinjalagarwal1810"},"content":"* `ITEM_NAME` is the identifier of an existing item to be removed from the catalogue.","lastModifiedDate":"2024-04-08"},{"lineNumber":329,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":330,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Keep your rewards program relevant and streamlined by removing outdated or less popular items from your catalogue.","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":333,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":334,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":335,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e Deleting an item from the catalogue will not delete the item from a member\u0027s order history. This is so that the member\u0027s order history and points is not affected if an item is discontinued. As such they are still rewarded for their previous purchases.","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":337,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":338,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":339,"author":{"gitId":"billyhoce"},"content":"* `delitem i/Chocolate Cake` Removes `Chocolate Cake` from the catalogue.","lastModifiedDate":"2024-04-05"},{"lineNumber":340,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":341,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.7 Adding orders to a member: `addorder`","lastModifiedDate":"2024-04-08"},{"lineNumber":342,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":343,"author":{"gitId":"kinjalagarwal1810"},"content":"Adds an order for a specified item to an existing member in the loyalty program, automatically updating the member\u0027s current points and membership points based on the item\u0027s points.","lastModifiedDate":"2024-04-03"},{"lineNumber":344,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":345,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `addorder n/MEMBER_NAME i/ITEM_NAME [q/QUANTITY_PURCHASED]`","lastModifiedDate":"2024-04-15"},{"lineNumber":346,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":347,"author":{"gitId":"kinjalagarwal1810"},"content":"* `ITEM_NAME` will be checked in the catalogue; if it exists, the corresponding item points will be added to the member\u0027s current points and membership points.","lastModifiedDate":"2024-04-08"},{"lineNumber":348,"author":{"gitId":"kinjalagarwal1810"},"content":"* `QUANTITY_PURCHASED` is optional and must be a positive integer; if not specified, it defaults to 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":349,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":350,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":351,"author":{"gitId":"kab-dot"},"content":"* `addorder n/John Doe i/Chocolate Cake q/2` Adds `2` orders of `Chocolate Cake` to `John Doe`, updating points accordingly.","lastModifiedDate":"2024-04-04"},{"lineNumber":352,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":353,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":354,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Streamline the process of tracking purchases and rewarding members by using addorder to add their orders directly into the system. This automatically adjusts their points according to the purchase, fostering a more engaging loyalty experience.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":355,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":357,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":358,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e You are strongly recommended to only use quantities less than 2,000,000,000 and ensure the total points/membership points a member has remains within the safe range of 0…2,000,000,000.","lastModifiedDate":"2024-04-15"},{"lineNumber":359,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":360,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":361,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.8 Adding points: `addpts`","lastModifiedDate":"2024-04-08"},{"lineNumber":362,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":363,"author":{"gitId":"kinjalagarwal1810"},"content":"Manually adds points to a member\u0027s account within the loyalty program.","lastModifiedDate":"2024-04-03"},{"lineNumber":364,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":365,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `addpts n/MEMBER_NAME p/POINTS`","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":367,"author":{"gitId":"kinjalagarwal1810"},"content":"* Adds the corresponding number of points for a member based on their name to the current points they have.","lastModifiedDate":"2024-03-26"},{"lineNumber":368,"author":{"gitId":"kinjalagarwal1810"},"content":"* `POINTS` must be a positive integer 1, 2, 3, …","lastModifiedDate":"2024-04-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":370,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":371,"author":{"gitId":"billyhoce"},"content":"* `addpts n/John Doe p/50` Adds `50` points to the points `John Doe` initially had","lastModifiedDate":"2024-04-05"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":373,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":374,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Encourage repeat business and reward customer loyalty by using `addpts` to add reward points to members\u0027 accounts. This helps keep your customers engaged and appreciative of the value they get from shopping at your bakery.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":375,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":377,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #DBAE58; margin: 10px 0; padding: 10px; background-color: #FFF3E0; color: #886B00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":378,"author":{"gitId":"kokerinks"},"content":"  💡 \u003cstrong\u003eTip:\u003c/strong\u003e Consider using the `addpts` function to manually award extra points for activities that reflect customer loyalty beyond direct purchases. This includes rewarding members for social media mentions, participation in surveys, or as compensation for any service mishaps. It\u0027s a versatile tool that allows you to quickly acknowledge and incentivise a wide range of valuable customer interactions, keeping your loyalty program flexible and responsive to your business needs.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":379,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":382,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e Using the `addpts` command will ONLY increase the `REWARD POINTS` field, `MEMBERSHIP_POINTS` field will not be affected.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":385,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":386,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e Ensure that the total number of points a member has remains within the safe range of 0…2,000,000,000 so that the program does not malfunction.","lastModifiedDate":"2024-04-15"},{"lineNumber":387,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":388,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":389,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.9 Redeeming Points: `redeempts`","lastModifiedDate":"2024-04-08"},{"lineNumber":390,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":391,"author":{"gitId":"kinjalagarwal1810"},"content":"Allows members to redeem points from their current points tally, without affecting their cumulative membership points.","lastModifiedDate":"2024-04-03"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":393,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `redeempts n/MEMBER_NAME p/POINTS`","lastModifiedDate":"2024-04-15"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":395,"author":{"gitId":"kinjalagarwal1810"},"content":"* Subtracts the specified number of points from the member\u0027s current points tally.","lastModifiedDate":"2024-04-03"},{"lineNumber":396,"author":{"gitId":"kinjalagarwal1810"},"content":"* `POINTS` must be a positive integer 1, 2, 3, … up to the maximum number of points the member currently has.","lastModifiedDate":"2024-04-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":398,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":399,"author":{"gitId":"kinjalagarwal1810"},"content":"* `redeempts n/John Doe p/100` Subtracts `100` points from `John Doe`\u0027s current points.","lastModifiedDate":"2024-04-08"},{"lineNumber":400,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":401,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":402,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Provide members the flexibility to use their earned points for rewards, enhancing the perceived value of your loyalty program.","lastModifiedDate":"2024-04-15"},{"lineNumber":403,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":404,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":405,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.10 Adding Membership Points: `addmempts`","lastModifiedDate":"2024-04-08"},{"lineNumber":406,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":407,"author":{"gitId":"billyhoce"},"content":"Manually adds the membership points of a member in the loyalty program, without affecting the reward points.","lastModifiedDate":"2024-04-05"},{"lineNumber":408,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":409,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `addmempts n/MEMBER_NAME mp/POINT_TO_ADDS`","lastModifiedDate":"2024-04-15"},{"lineNumber":410,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":411,"author":{"gitId":"kinjalagarwal1810"},"content":"* `POINTS` must be a positive integer 1, 2, 3, …","lastModifiedDate":"2024-04-08"},{"lineNumber":412,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":413,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":414,"author":{"gitId":"kab-dot"},"content":"* `addmempts n/John Doe mp/` adds 100 `membership points` to `John Doe`","lastModifiedDate":"2024-04-14"},{"lineNumber":415,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":416,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #DBAE58; margin: 10px 0; padding: 10px; background-color: #FFF3E0; color: #886B00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":417,"author":{"gitId":"kinjalagarwal1810"},"content":"  💡 \u003cstrong\u003eTip:\u003c/strong\u003e Use this command to manually adjust membership points in scenarios where the total points from ordering might not fully capture a member\u0027s loyalty or contributions. This can include exceptional circumstances such as rewarding significant engagement that isn\u0027t directly tied to purchases, like brand advocacy or correcting tier placements.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":418,"author":{"gitId":"kab-dot"},"content":"This flexibility ensures every member\u0027s loyalty is accurately recognised and rewarded.\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":419,"author":{"gitId":"kab-dot"},"content":"In the case of similar names like `Betsy Crowead` and `Betsy Croweas`, when adding order to `Betsy Crowe`, the order would be added to the member who was added first in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":420,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":422,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":423,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e Ensure that the total number of membership points a member has remains within the safe range of 0…2,000,000,000 so that the program does not malfunction.","lastModifiedDate":"2024-04-15"},{"lineNumber":424,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":426,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.11 Editing a member : `edit`","lastModifiedDate":"2024-04-08"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"kinjalagarwal1810"},"content":"Edits an existing member in the loyalty program.","lastModifiedDate":"2024-03-26"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `edit INDEX [n/MEMBER_NAME] [hp/MEMBER_PHONE] [e/MEMBER_EMAIL] [a/MEMBER_ADDRESS]","lastModifiedDate":"2024-04-15"},{"lineNumber":431,"author":{"gitId":"kinjalagarwal1810"},"content":"[ag/ALLERGENS] [p/POINTS] [mp/MEMBERSHIP_POINTS]…​`","lastModifiedDate":"2024-04-08"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"kinjalagarwal1810"},"content":"* Edits the member at the specified `INDEX`. The index refers to the index number shown in the displayed member list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-26"},{"lineNumber":434,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":437,"author":{"gitId":"kinjalagarwal1810"},"content":"* When editing [allergens](#6-glossary), the existing allergens of the member will be removed i.e. adding of allergens is not cumulative.","lastModifiedDate":"2024-04-15"},{"lineNumber":438,"author":{"gitId":"kinjalagarwal1810"},"content":"* You can remove all the member’s allergens by typing `ag/` without specifying any allergens after it.","lastModifiedDate":"2024-04-15"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":441,"author":{"gitId":"kinjalagarwal1810"},"content":"*  `edit 1 hp/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st member to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-26"},{"lineNumber":442,"author":{"gitId":"kab-dot"},"content":"*  `edit 2 n/Betsy Crower ag/` Edits the name of the 2nd member to be `Betsy Crower` and clears all existing [allergens](#6-glossary).","lastModifiedDate":"2024-04-14"},{"lineNumber":443,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":444,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":445,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Keep your customer records up-to-date with the edit command. Whether a member moves to a new address or changes their phone number, you can easily update their profile, ensuring effective communication and personalized service.","lastModifiedDate":"2024-04-15"},{"lineNumber":446,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":447,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":448,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #DBAE58; margin: 10px 0; padding: 10px; background-color: #FFF3E0; color: #886B00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":449,"author":{"gitId":"kinjalagarwal1810"},"content":"  💡 \u003cstrong\u003eTip:\u003c/strong\u003e You can also use this command if you accidentally make an error when updating details of a member.","lastModifiedDate":"2024-04-15"},{"lineNumber":450,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":451,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":452,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":453,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e Ensure that the total number of points/membership points a member has remains within the safe range of 0…2,000,000,000 so that the program does not malfunction.","lastModifiedDate":"2024-04-15"},{"lineNumber":454,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":456,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.12 Locating members by name : `find`","lastModifiedDate":"2024-04-08"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"kinjalagarwal1810"},"content":"Finds members whose names contain any of the given keywords.","lastModifiedDate":"2024-03-26"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-04-15"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":462,"author":{"gitId":"kinjalagarwal1810"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2024-04-15"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"kinjalagarwal1810"},"content":"* Members matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-26"},{"lineNumber":467,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":470,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Quickly locate a member\u0027s details using the find command, perfect for when you need to access a customer\u0027s loyalty information during a transaction or when providing personalized customer service.","lastModifiedDate":"2024-04-15"},{"lineNumber":471,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":472,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":473,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #DBAE58; margin: 10px 0; padding: 10px; background-color: #FFF3E0; color: #886B00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":474,"author":{"gitId":"kinjalagarwal1810"},"content":"  💡 \u003cstrong\u003eTip:\u003c/strong\u003e Use partial names or keywords with the `find` command to quickly locate members.","lastModifiedDate":"2024-04-15"},{"lineNumber":475,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":476,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":477,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":478,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":481,"author":{"gitId":"-"},"content":"![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.13 Deleting a member : `delmem`","lastModifiedDate":"2024-04-08"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":485,"author":{"gitId":"kinjalagarwal1810"},"content":"Deletes the specified member from the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `delmem INDEX`","lastModifiedDate":"2024-04-15"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"kinjalagarwal1810"},"content":"* Deletes the member at the specified `INDEX`.","lastModifiedDate":"2024-03-26"},{"lineNumber":490,"author":{"gitId":"kinjalagarwal1810"},"content":"* The index refers to the index number shown in the displayed member list.","lastModifiedDate":"2024-03-26"},{"lineNumber":491,"author":{"gitId":"kinjalagarwal1810"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2024-04-08"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":494,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Maintain a clean and updated member list by using delete to remove profiles that are no longer active or relevant. This helps streamline your loyalty program and keep your data accurate.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":495,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":496,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":497,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":498,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e Be cautious when using the delmem command as it is irreversible. Always double-check the member index.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":499,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":501,"author":{"gitId":"kinjalagarwal1810"},"content":"**Examples**:","lastModifiedDate":"2024-04-15"},{"lineNumber":502,"author":{"gitId":"billyhoce"},"content":"* `list` followed by `delmem 2` deletes the 2nd member in the address book.","lastModifiedDate":"2024-04-05"},{"lineNumber":503,"author":{"gitId":"billyhoce"},"content":"* `find Betsy` followed by `delmem 1` deletes the 1st member in the results of the `find` command.","lastModifiedDate":"2024-04-05"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.14 Clearing all entries : `clear`","lastModifiedDate":"2024-04-08"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"kokerinks"},"content":"Clears all entries from the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `clear`","lastModifiedDate":"2024-04-15"},{"lineNumber":510,"author":{"gitId":"kokerinks"},"content":"* Deletes all members, including:","lastModifiedDate":"2024-03-07"},{"lineNumber":511,"author":{"gitId":"kinjalagarwal1810"},"content":"  * Members added by you","lastModifiedDate":"2024-03-26"},{"lineNumber":512,"author":{"gitId":"kab-dot"},"content":"  * [Seed Data](#6-glossary) added from `seeddata` command","lastModifiedDate":"2024-04-14"},{"lineNumber":513,"author":{"gitId":"kinjalagarwal1810"},"content":"* You will be prompted to verify the clear command.","lastModifiedDate":"2024-03-26"},{"lineNumber":514,"author":{"gitId":"kinjalagarwal1810"},"content":"* To bypass the verification prompt, you can follow `clear` with `--force`. This will clear the address book without additional prompting. (`clear --force`)","lastModifiedDate":"2024-04-08"},{"lineNumber":515,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":516,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #D1478C; margin: 10px 0; padding: 10px; background-color: #FDE4EF; color: #910D47; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"kinjalagarwal1810"},"content":"  🧁 \u003cstrong\u003eBenefit:\u003c/strong\u003e Start afresh or declutter your system by using clear to remove all existing data. This is particularly useful when you want to reboot your loyalty program or clean out outdated information.","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":520,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cdiv style\u003d\"border: 1px solid #FFA500; margin: 10px 0; padding: 10px; background-color: #FFE8B2; color: #CC6C00; border-radius: 5px;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":521,"author":{"gitId":"kinjalagarwal1810"},"content":"  ⚠️ \u003cstrong\u003eWarning:\u003c/strong\u003e Using clear will permanently remove all members and their information. Ensure to back up data before proceeding.","lastModifiedDate":"2024-04-15"},{"lineNumber":522,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":523,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":524,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.15 Exiting the program : `exit`","lastModifiedDate":"2024-04-08"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"kinjalagarwal1810"},"content":"**Format**: `exit`","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"kinjalagarwal1810"},"content":"### 4.16 Saving the data","lastModifiedDate":"2024-04-08"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"kinjalagarwal1810"},"content":"SweetRewards data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-04-08"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"kinjalagarwal1810"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-26"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":536,"author":{"gitId":"kab-dot"},"content":"# 5. Example Tutorial","lastModifiedDate":"2024-04-14"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":538,"author":{"gitId":"kinjalagarwal1810"},"content":"Since SweetRewards has a wide array of functions and commands, it could be overwhelming for first-time users…","lastModifiedDate":"2024-04-15"},{"lineNumber":539,"author":{"gitId":"kokerinks"},"content":"So, we came up with a short tutorial on how we can add a member, items etc. with additional annotations. \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":540,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":541,"author":{"gitId":"kinjalagarwal1810"},"content":"**1. Adding a Member** \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":542,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":543,"author":{"gitId":"kab-dot"},"content":"![adding member](images/addmem.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":544,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":545,"author":{"gitId":"kinjalagarwal1810"},"content":"**2. Adding items** \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":546,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":547,"author":{"gitId":"kab-dot"},"content":"![adding items](images/additem.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":548,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":549,"author":{"gitId":"kinjalagarwal1810"},"content":"**3. Adding Orders** \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":550,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":551,"author":{"gitId":"kab-dot"},"content":"![adding orders](images/addorders.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":553,"author":{"gitId":"kinjalagarwal1810"},"content":"**4. Adding Membership Points** \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":555,"author":{"gitId":"kab-dot"},"content":"![adding mempts](images/addmempts.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":556,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":557,"author":{"gitId":"kinjalagarwal1810"},"content":"**5. Redeeming Reward Points** \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":558,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":559,"author":{"gitId":"kab-dot"},"content":"![redeempts](images/redeempts.png) ","lastModifiedDate":"2024-04-14"},{"lineNumber":560,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":561,"author":{"gitId":"kinjalagarwal1810"},"content":"**6. Deleting Items** \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":562,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":563,"author":{"gitId":"kab-dot"},"content":"![deleting items](images/delitem.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":564,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":565,"author":{"gitId":"kab-dot"},"content":"This is how a potential bakery could use SweetRewards in their daily operations!","lastModifiedDate":"2024-04-14"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":567,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-14"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":569,"author":{"gitId":"kab-dot"},"content":"# 6. Glossary","lastModifiedDate":"2024-04-14"},{"lineNumber":570,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":571,"author":{"gitId":"kinjalagarwal1810"},"content":"**CLI (Command Line Interface)**: An interface that allows users to interact directly with the system by typing commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":572,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":573,"author":{"gitId":"kinjalagarwal1810"},"content":"**GUI (Graphical User Interface)**: A visual way for users to interact with the application through graphical elements such as buttons and icons.","lastModifiedDate":"2024-04-15"},{"lineNumber":574,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":575,"author":{"gitId":"kinjalagarwal1810"},"content":"**JSON (JavaScript Object Notation)**: A format for structuring data, used here for saving and loading user data from a file.","lastModifiedDate":"2024-04-15"},{"lineNumber":576,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":577,"author":{"gitId":"kinjalagarwal1810"},"content":"**Membership Tiers**: Designated levels within the loyalty program offering different benefits, determined by the amount of points a member has accumulated.","lastModifiedDate":"2024-04-15"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":579,"author":{"gitId":"kinjalagarwal1810"},"content":"**Seed Data**: Preloaded data used to demonstrate the application\u0027s capabilities without needing to enter new data manually.","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"kinjalagarwal1810"},"content":"**Allergen**: Substances that can cause an allergic reaction. In the context of SweetRewards, allergens that customers have, for the baker to take note when making an order.","lastModifiedDate":"2024-04-15"},{"lineNumber":582,"author":{"gitId":"kinjalagarwal1810"},"content":" ","lastModifiedDate":"2024-04-15"},{"lineNumber":583,"author":{"gitId":"kokerinks"},"content":"**Jar File**: A compressed format for distributing bundled Java applications and libraries.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":584,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":585,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":586,"author":{"gitId":"kinjalagarwal1810"},"content":"---------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-08"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"kab-dot"},"content":"# 7. FAQ","lastModifiedDate":"2024-04-14"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"kinjalagarwal1810"},"content":"**Q: How do I transfer my data to another Computer?\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":591,"author":{"gitId":"kinjalagarwal1810"},"content":"**A**: Install SweetRewards on the other computer and copy the data file from your original installation directory to the new one. This will replace the empty data file created during the new installation.","lastModifiedDate":"2024-04-15"},{"lineNumber":592,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":593,"author":{"gitId":"kinjalagarwal1810"},"content":"**Q: How do I manually add points to a member\u0027s account?\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":594,"author":{"gitId":"kinjalagarwal1810"},"content":"**A**: Use the addpts command with the member\u0027s name and the desired amount of points. For instance: addpts n/John Doe p/50 adds 50 points to John Doe\u0027s account, useful for promotional points or correcting errors.","lastModifiedDate":"2024-04-15"},{"lineNumber":595,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":596,"author":{"gitId":"kinjalagarwal1810"},"content":"**Q: How can I upgrade a member\u0027s tier manually?\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":597,"author":{"gitId":"kinjalagarwal1810"},"content":"**A**: Employ the addmempts command with the member\u0027s name and the points you want to add. For example, addmempts n/John Doe mp/400 manually awards John Doe 400 points. The membership tier of the member will be determined by the number of points they have according to the membership tier table","lastModifiedDate":"2024-04-15"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"kinjalagarwal1810"},"content":"**Q: Is it possible to remove a member from the loyalty program?\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":600,"author":{"gitId":"kinjalagarwal1810"},"content":"**A**: Yes, execute the delete command with the index number of the member in the displayed list. E.g., delmem 3 removes the third member in the list, used for cleaning up duplicate entries or removing inactive accounts.","lastModifiedDate":"2024-04-15"},{"lineNumber":601,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":602,"author":{"gitId":"kinjalagarwal1810"},"content":"**Q: How do membership points influence tier levels?\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":603,"author":{"gitId":"kinjalagarwal1810"},"content":"**A**: Membership tiers are determined by the total accumulated membership points. Each tier requires reaching a specific points threshold, which is automatically tracked by the system. Check the \"Understanding Membership Tiers and Points System\" section for detailed tier requirements.","lastModifiedDate":"2024-04-15"},{"lineNumber":604,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":605,"author":{"gitId":"kinjalagarwal1810"},"content":"**Q: How do I handle points for cancelled orders?\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":606,"author":{"gitId":"kinjalagarwal1810"},"content":"**A**: For cancelled, use the `redeempoints` command to deduct the equivalent points from the member\u0027s account, keeping their points balance accurate with their actual purchases.","lastModifiedDate":"2024-04-15"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":608,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"kab-dot"},"content":"# 8. Troubleshooting","lastModifiedDate":"2024-04-14"},{"lineNumber":611,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":612,"author":{"gitId":"kinjalagarwal1810"},"content":"Facing issues with SweetRewards? Here are some common problems and how to resolve them.","lastModifiedDate":"2024-03-26"},{"lineNumber":613,"author":{"gitId":"kinjalagarwal1810"},"content":"## Technical Issues","lastModifiedDate":"2024-04-03"},{"lineNumber":614,"author":{"gitId":"kinjalagarwal1810"},"content":"**1. Application won\u0027t start\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":615,"author":{"gitId":"kinjalagarwal1810"},"content":"🚫 \u003cspan style\u003d\"color:#D32D41\"\u003e**Problem**:\u003c/span\u003e Double-clicking the [jar file](#6-glossary) doesn’t open SweetRewards.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":616,"author":{"gitId":"kinjalagarwal1810"},"content":"✅ \u003cspan style\u003d\"color:#6AB187\"\u003e**Solution**:\u003c/span\u003e Verify that Java 11 or higher is installed. Open a command prompt, navigate to the application\u0027s directory, and type in `java -jar sweetrewards-v1.2.jar` (Note the version number might differ, use the one that is seen in the version of SweetRewards that you have downloaded) and press enter. If issues persist, re-download the [jar file](#6-glossary) to rule out corruption.","lastModifiedDate":"2024-04-15"},{"lineNumber":617,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":618,"author":{"gitId":"kinjalagarwal1810"},"content":"**2. [GUI](#6-glossary) opens off-screen\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":619,"author":{"gitId":"kinjalagarwal1810"},"content":"🚫 \u003cspan style\u003d\"color:#D32D41\"\u003e**Problem**:\u003c/span\u003e  SweetRewards starts off the visible screen area when using multiple displays.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":620,"author":{"gitId":"kinjalagarwal1810"},"content":"✅ \u003cspan style\u003d\"color:#6AB187\"\u003e**Solution**:\u003c/span\u003e  Locate and delete preferences.json in the application\u0027s folder to reset window positioning, then restart the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":621,"author":{"gitId":"kinjalagarwal1810"},"content":"## Operational Issues","lastModifiedDate":"2024-04-03"},{"lineNumber":622,"author":{"gitId":"kinjalagarwal1810"},"content":"**1. Incorrect Points Allocation\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":623,"author":{"gitId":"kinjalagarwal1810"},"content":"🚫 \u003cspan style\u003d\"color:#D32D41\"\u003e**Problem**:\u003c/span\u003e Points were mistakenly added to the wrong member.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":624,"author":{"gitId":"kinjalagarwal1810"},"content":"✅ \u003cspan style\u003d\"color:#6AB187\"\u003e**Solution**:\u003c/span\u003e Use the edit command to adjust the points for both involved members. Replace the newly updated (wrong) number of points with the initial (correct) number of points and add the points for the new member again. For example, edit 2 p/50 to replace the wrongly updated points and addpts 3 p/50 to add points to the correct member.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":625,"author":{"gitId":"kab-dot"},"content":"You could also refer to the [FAQ, Question 2](#7-faq)","lastModifiedDate":"2024-04-14"},{"lineNumber":626,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":627,"author":{"gitId":"kinjalagarwal1810"},"content":"**2. Incorrect Member Information Entered\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":628,"author":{"gitId":"kinjalagarwal1810"},"content":"🚫 \u003cspan style\u003d\"color:#D32D41\"\u003e**Problem**:\u003c/span\u003e Incorrect information (e.g., phone number or email) was entered for a member.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":629,"author":{"gitId":"kinjalagarwal1810"},"content":"✅ \u003cspan style\u003d\"color:#6AB187\"\u003e**Solution**:\u003c/span\u003e Correct the mistake by using the `edit` command to adjust points for both the affected and intended members, ensuring accuracy in the loyalty program.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":631,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":632,"author":{"gitId":"kinjalagarwal1810"},"content":"**3. Orders Not Reflecting in Member\u0027s History\u003cbr\u003e**","lastModifiedDate":"2024-04-15"},{"lineNumber":633,"author":{"gitId":"kinjalagarwal1810"},"content":"🚫 \u003cspan style\u003d\"color:#D32D41\"\u003e**Problem**:\u003c/span\u003e  Newly added orders are not reflected in a member\u0027s history.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":634,"author":{"gitId":"kinjalagarwal1810"},"content":"✅ \u003cspan style\u003d\"color:#6AB187\"\u003e**Solution**:\u003c/span\u003e Verify that `addorder` was used correctly, including the correct member name and order details. This ensures all transactions are accurately recorded.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":635,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":636,"author":{"gitId":"kinjalagarwal1810"},"content":"📧 **Contact Us**: If you\u0027ve gone through the troubleshooting steps above and are still experiencing issues, please email us at support@sweetrewardsbakery.com with a detailed description of the problem, and we will get back to you as soon as possible. Your satisfaction and experience with SweetRewards are of the utmost importance to us.","lastModifiedDate":"2024-04-03"},{"lineNumber":637,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":638,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":640,"author":{"gitId":"kab-dot"},"content":"# 9. Command summary","lastModifiedDate":"2024-04-14"},{"lineNumber":641,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":642,"author":{"gitId":"kinjalagarwal1810"},"content":"| Command                                                                            | Format                                                                                 | Examples                                                                                      |","lastModifiedDate":"2024-04-03"},{"lineNumber":643,"author":{"gitId":"billyhoce"},"content":"|------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-05"},{"lineNumber":644,"author":{"gitId":"billyhoce"},"content":"| **[Add new member](#43-adding-a-member--addmem)**                                  | `addmem n/MEMBER_NAME hp/MEMBER_PHONE e/MEMBER_EMAIL a/MEMBER_ADDRESS [ag/ALLERGEN]…​` | `addmem n/James Ho hp/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 ag/GF ag/LF` |","lastModifiedDate":"2024-04-05"},{"lineNumber":645,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Add Item to Catalogue](#45-adding-an-item-to-the-catalogue--additem)**          | `additem i/ITEM_NAME p/POINTS_PER_UNIT`                                                | `additem i/Chocolate Cake p/50`                                                               |","lastModifiedDate":"2024-04-08"},{"lineNumber":646,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Delete Item from Catalogue](#46-deleting-an-item-from-the-catalogue--delitem)** | `delitem i/ITEM_NAME`                                                                  | `delitem i/Chocolate Cake`                                                                    |","lastModifiedDate":"2024-04-08"},{"lineNumber":647,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Add Order](#47-adding-orders-to-a-member--addorder)**                           | `addorder n/MEMBER_NAME i/ITEM_NAME [q/QUANTITY_PURCHASED]`                            | `addorder n/John Doe i/Chocolate Cake q/2`                                                    |","lastModifiedDate":"2024-04-03"},{"lineNumber":648,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Add Reward Points](#48-adding-points--addpts)**                                 | `addpts n/MEMBER_NAME p/POINTS`                                                        | `addpts n/John Doe p/50`                                                                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":649,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Redeem Points](#49-redeeming-points--redeempts)**                               | `redeempts n/MEMBER_NAME p/POINTS`                                                     | `redeempts n/John Doe p/50`                                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":650,"author":{"gitId":"kab-dot"},"content":"| **[Add Membership Points](#410-adding-membership-points--addmempts)**              | `addmempts n/MEMBER_NAME mp/MEMBERSHIP_POINTS`                                         | `addmempts n/John Doe ms/T2`                                                                  |","lastModifiedDate":"2024-04-14"},{"lineNumber":651,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Clear](#414-clearing-all-entries--clear)**                                      | `clear`                                                                                | `clear`                                                                                       |","lastModifiedDate":"2024-04-03"},{"lineNumber":652,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Delete member](#413-deleting-a-member--delmem)**                                | `delmem INDEX`                                                                         | `delmem 3`                                                                                    |","lastModifiedDate":"2024-04-08"},{"lineNumber":653,"author":{"gitId":"kab-dot"},"content":"| **[Seed data](#42-initializing-program-with-seed-data--seeddata)**                 | `seeddata`                                                                             | `seeddata`                                                                                    |","lastModifiedDate":"2024-04-14"},{"lineNumber":654,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Edit](#411-editing-a-member--edit)**                                            | `edit INDEX [n/MEMBER_NAME] [hp/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [ag/ALLERGEN]…​`   | `edit 2 n/James Lee e/jameslee@example.com`                                                   |","lastModifiedDate":"2024-04-08"},{"lineNumber":655,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Find](#412-locating-members-by-name--find)**                                    | `find KEYWORD [MORE_KEYWORDS]`                                                         | `find James Jake`                                                                             |","lastModifiedDate":"2024-04-03"},{"lineNumber":656,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[List](#44-listing-all-members--list)**                                          | `list`                                                                                 | `list`                                                                                        |","lastModifiedDate":"2024-04-03"},{"lineNumber":657,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Help](#41-viewing-help--help)**                                                 | `help`                                                                                 | `help`                                                                                        |","lastModifiedDate":"2024-04-03"},{"lineNumber":658,"author":{"gitId":"kinjalagarwal1810"},"content":"| **[Exit](#415-exiting-the-program--exit)**                                         | `exit`                                                                                 | `exit`                                                                                        |","lastModifiedDate":"2024-04-08"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":660,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-14"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":662,"author":{"gitId":"kab-dot"},"content":"# 10. Planned enhancements","lastModifiedDate":"2024-04-14"},{"lineNumber":663,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":664,"author":{"gitId":"kab-dot"},"content":"We understand some of our features and commands might still not be adequate for some bakeries.\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":665,"author":{"gitId":"kab-dot"},"content":"Not to worry! We have a comprehensive list of planned enhancements we hope to include in our future iterations which include: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":666,"author":{"gitId":"kinjalagarwal1810"},"content":"1. **Allow special characters in member names**: Currently, member names can only contain alphanumeric characters and spaces. This might cause problems when users want to add members that have special characters in their names such as Tan Ye-Ming, John or Kumaren s/o Ramasamy. Some special characters to be added includes apostrophes \u0027, brackets (), hyphens -, slashes / and periods ..","lastModifiedDate":"2024-04-15"},{"lineNumber":667,"author":{"gitId":"kinjalagarwal1810"},"content":"2. **Allow numbers and special characters in item names**: Currently, item names only accept alphabetical characters. This prevents use cases such as items with quantities or special characters (E.g. Chocolate-Chip Cookies 100g) from being entered. We should allow alphanumeric and special characters.","lastModifiedDate":"2024-04-15"},{"lineNumber":668,"author":{"gitId":"kinjalagarwal1810"},"content":"3. **Have order panel of GUI update when orders are updated**: Currently, the order panel of the GUI updates only when a person card is clicked, so when users add an order to a person or clears all data using the clear --force command, it does not show the updated orders until a person card is clicked. To fix this, either use an ObservableList to store the orders of each Person, or have the addorder and clear command force the order display to update.","lastModifiedDate":"2024-04-15"},{"lineNumber":669,"author":{"gitId":"kinjalagarwal1810"},"content":"4. **Add a delete order command**: Currently, if a user accidentally adds a wrong order, the only solution is to delete the member using delmem and add the member back using addmem. This is a lot of trouble cause by a simple mistake. As such, we should have a command that allows deletion of orders, which likely works off indexing the orders of a person. For example delorder n/John 2 deletes the second order of John 2. Of course to complement this feature, the index of orders should be displayed in the GUI. Points awarded in the deleted order should also be revoked.","lastModifiedDate":"2024-04-15"},{"lineNumber":670,"author":{"gitId":"kinjalagarwal1810"},"content":"5. **Allow horizontal scrolling of GUI Person Card**: Currently the person card of the GUI does not allow horizontal scrolling if the details exceed the horizontal width of the UI. This causes extra-long inputs such as a 50 character long name to be not fully visible. This would allow for extra-long inputs for the name, phone number, email address, address, and allergens of added members.","lastModifiedDate":"2024-04-15"},{"lineNumber":671,"author":{"gitId":"kinjalagarwal1810"},"content":"6. **Make `invalid person error` for `redeempts` more specific**: Currently the error message when a person cannot be found is The person index provided is invalid which is wrong because we are not using an indexing system. It should be changed to The member \u003cUSER-ENTERED NAME\u003e cannot be found","lastModifiedDate":"2024-04-15"},{"lineNumber":672,"author":{"gitId":"kinjalagarwal1810"},"content":"7. **Make `invalid points error` for `additem` more specific**: Currently when adding an item with invalid points (E.g. additem i/Cookies p/aa), the error message shown is the Invalid command format! message, which is too general. It should be made more specific, stating the specific error of invalid points (E.g. Invalid points per unit! Points per unit should a positive integer!).","lastModifiedDate":"2024-04-15"},{"lineNumber":673,"author":{"gitId":"kinjalagarwal1810"},"content":"8. **Add index-based selection for member selection**: Currently in our addorder, addpts, addmempts, redeempts commands, we select the member based on the first member in the list whose name contains the entered string. This might prove as an issue when there are two people with the same or similar names like Wan Lei and Matthew Ang Wan Lei. If the latter is closer to the top of the list (added earlier), there will be no way to select Wan Lei. To prevent this, indexing selection for these commands should be added (E.g. addorder 3 i/Cookies would add the Cookies order to the third person in the current filtered list). This does not get rid of the current name selection, and merely introduces an alternative to member selection.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"kab-dot":38,"kinjalagarwal1810":477,"kokerinks":8,"-":121,"billyhoce":29}},{"path":"docs/diagrams/AddOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"@startuml","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"!include style.puml","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"skinparam ParticipantPadding 0","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"participant \":AddOrderCommandParser\" as AddOrderCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"participant \"a:AddOrderCommand\" as AddOrderCommand LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"participant \"alice:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"[-\u003e AddOrderCommandParser : parse(\\n\"n/Alice \\ni/Cookies\")","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"activate AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"create AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"AddOrderCommandParser -\u003e AddOrderCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"activate AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"AddOrderCommand --\u003e AddOrderCommandParser : a","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"deactivate AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"[\u003c-- AddOrderCommandParser : a","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"deactivate AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"\u003c-[hidden]- AddOrderCommandParser","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"destroy AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"[-\u003e AddOrderCommand : execute(m)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"activate AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"AddOrderCommand -\u003e Model","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"activate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"Model --\u003e AddOrderCommand : alice","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"deactivate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"AddOrderCommand -\u003e Model","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"Model --\u003e AddOrderCommand : cookies","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"alt If \"alice\" or \"cookies\" not found","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"    [\u003c-- AddOrderCommand : commandException","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"else","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"    AddOrderCommand -\u003e Person : addOrder(new order(cookies))","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"    activate Person","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"    Person --\u003e AddOrderCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"    deactivate Person","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"    AddOrderCommand -\u003e Person : addPoints(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"    activate Person","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"    Person --\u003e AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"    deactivate Person","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"    create CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"    AddOrderCommand -\u003e CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"    activate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"    CommandResult --\u003e AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"    deactivate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"    [\u003c-- AddOrderCommand : r","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"end","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"@enduml","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"billyhoce":72}},{"path":"docs/diagrams/AddPointsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"skinparam ParticipantPadding 0","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"participant \":AddPointsCommandParser\" as AddPointsCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"participant \"p:Points\" as Points LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"participant \"a:AddPointsCommand\" as AddPointsCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"participant \"alice:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"[-\u003e AddPointsCommandParser : parse(\\n\"n/Alice \\np/50\")","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"activate AddPointsCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"create Points","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"AddPointsCommandParser -\u003e Points","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"activate Points","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"Points --\u003e AddPointsCommandParser : p","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"deactivate Points","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"create AddPointsCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"AddPointsCommandParser -\u003e AddPointsCommand : AddPointsCommand(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"activate AddPointsCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"AddPointsCommand --\u003e AddPointsCommandParser : a","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"deactivate AddPointsCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"[\u003c-- AddPointsCommandParser : a","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"deactivate AddPointsCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"[\u003c-[hidden]- AddPointsCommandParser","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"destroy AddPointsCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"[-\u003e AddPointsCommand : execute(m)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"activate AddPointsCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"AddPointsCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"Model --\u003e AddPointsCommand : fpl","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"alt \"Alice\" matches name in fpl","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"    AddPointsCommand -\u003e Person : addPoints(p)","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"activate Person","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"Person --\u003e AddPointsCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"deactivate Person","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"AddPointsCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"CommandResult --\u003e AddPointsCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"[\u003c-- AddPointsCommand : r","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"else","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"    [\u003c-- AddPointsCommand : commandException","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"end","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"kinjalagarwal1810":61,"billyhoce":8}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"AddressBook *-right-\u003e \"1\" Catalogue","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"Catalogue -right-\u003e \"*\" Item","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e \"*\" Allergen","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e Membership","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e Points","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"Person *-up-\u003e \"*\" Order","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"Order *-up-\u003e \"1\" Item","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kokerinks":8,"-":16}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"[-\u003e LogicManager : execute(\"delmem 1\")","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delmem 1\")","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":68,"billyhoce":2}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"Class Catalogue","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"Class Membership","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"Class Points","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"Class Allergen","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"Class Order","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"Class Item","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"AddressBook *--\u003e \"1\" Catalogue","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"Catalogue --\u003e \"*\" Item","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e Membership","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e Points","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e \"*\" Allergen","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e \"*\" Order","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"Order *--\u003e \"1\" Item","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kokerinks":14,"-":53}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"Class JsonAdaptedItem","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"Class JsonAdaptedOrder","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"Class JsonAdaptedAllergen","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedItem","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedAllergen","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedOrder","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kokerinks":6,"-":41}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPersonSelectionListener\" as PersonSelectionListener","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"Class CataloguePanel","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"Class PersonOrdersPanel","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"MainWindow .up.|\u003e PersonSelectionListener","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"MainWindow *-down-\u003e \"1\" CataloguePanel","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"MainWindow *-down-\u003e \"1\" PersonOrdersPanel","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"PersonListPanel -up-\u003e \"1\" PersonSelectionListener","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"ResultDisplay ---|\u003e UiPart","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"CommandBox ---|\u003e UiPart","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"PersonListPanel ---|\u003e UiPart","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"PersonCard ---|\u003e UiPart","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"StatusBarFooter ---|\u003e UiPart","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"HelpWindow ---|\u003e UiPart","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"CataloguePanel ---|\u003e UiPart","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"PersonOrdersPanel ---|\u003e UiPart","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"PersonCard ...\u003e Model","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"CataloguePanel ...\u003e Model","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"PersonOrdersPanel ...\u003e Model","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":53,"billyhoce":18}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"    BoxFontSize 20","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":78,"billyhoce":1}},{"path":"docs/team/billyho.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"layout: page","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"* **Project management**:","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"  * User Guide:","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"* **Community**:","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"* **Tools**:","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"billyhoce":46}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":185,"billyhoce":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"    /** Returns an unmodifiable view of the catalogue */","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"    ObservableList\u003cItem\u003e getCatalogue();","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":50,"billyhoce":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"    public ObservableList\u003cItem\u003e getCatalogue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"        return model.getCatalogue();","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":88,"billyhoce":6}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command. Type \u0027help -c\u0027 to see the list of commands.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"The specified person is not found.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"                .append(person.getAddress());","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"        if (person.getAllergens().isEmpty()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"            builder.append(\"; Allergens: \");","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"            person.getAllergens().forEach(builder::append);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kokerinks":7,"kinjalagarwal1810":1,"-":46}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGENS;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    public static final String COMMAND_WORD \u003d \"addmem\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"            + PREFIX_NAME + \"MEMBER_NAME \"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"            + PREFIX_PHONE + \"MEMBER_PHONE \"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"            + PREFIX_EMAIL + \"MEMBER_EMAIL \"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"            + PREFIX_ADDRESS + \"MEMBER_ADDRESS \"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"            + \"[\" + PREFIX_POINTS + \"POINTS] \"","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \"[\" + PREFIX_ALLERGENS + \"ALLERGENS]...\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"            + PREFIX_POINTS + \"100 \"","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"            + PREFIX_ALLERGENS + \"friends \"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"            + PREFIX_ALLERGENS + \"owesMoney \";","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kokerinks":6,"kinjalagarwal1810":7,"-":74}},{"path":"src/main/java/seedu/address/logic/commands/AddItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":" * Adds an item to the application\u0027s item catalogue.","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":" * This command allows users to add new items, including their names and associated points,","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":" * to the catalogue. Each item must have a unique name. If an attempt is made to add an item","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":" * with a name that already exists in the catalogue, the command will not be executed, and","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":" * an error message will be shown to the user.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":" * Usage example: {@code addItem i/Croissant p/50} - This adds a new item named \"Croissant\"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":" * with 50 points to the catalogue.","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"public class AddItemCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"    public static final String COMMAND_WORD \u003d \"additem\";","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    public static final String INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \";","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an item to the catalogue. \\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"            + PREFIX_ITEM + \"ITEM_NAME \"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"            + PREFIX_POINTS + \"POINTS_PER_UNIT\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"            + PREFIX_ITEM + \"chocolate cake \"","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"            + PREFIX_POINTS + \"50\";","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New item added: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"This item already exists in the catalogue.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    private final Item toAdd;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"     * Creates an AddItemCommand to add the specified {@code Item}","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"    public AddItemCommand(Item item) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"        requireNonNull(item);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"        toAdd \u003d item;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"        if (model.hasItem(toAdd.getName())) {","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"        model.addItem(toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"                || (other instanceof AddItemCommand // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"                \u0026\u0026 toAdd.equals(((AddItemCommand) other).toAdd));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kab-dot":62,"kokerinks":3}},{"path":"src/main/java/seedu/address/logic/commands/AddMemPointsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMSHIP_PTS;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":" * Adds membership points for a person in the address book.","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"public class AddMemPointsCommand extends Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    public static final String COMMAND_WORD \u003d \"addmempts\";","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    public static final String INVALID_COMMAND_FORMAT \u003d \"Invalid command format.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Points to add must be a positive integer.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"            + \": Add membership points to the person identified. \"","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"            + \"May upgrade the member\u0027s tier after adding points.\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"            + \"Parameters: n/MEMBER_NAME \" + PREFIX_MEMSHIP_PTS + \"POINTS_TO_ADD\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Alice \"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"            + PREFIX_MEMSHIP_PTS + \"100\";","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_ADD_MEMBERSHIP_SUCCESS \u003d \"Added %1$d membership point(s) to Person: %2$s\";","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"    private final Name name;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    private final int pointsToAdd;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"     * @param name of the person in the filtered person list to edit the remark","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"     * @param pointsToAdd of the person to be updated to","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"    public AddMemPointsCommand(Name name, int pointsToAdd) {","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        requireAllNonNull(name, pointsToAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"        this.pointsToAdd \u003d pointsToAdd;","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        Optional\u003cPerson\u003e personOptional \u003d lastShownList.stream()","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"                .filter(person -\u003e person.getName().fullName.toLowerCase().contains(this.name.fullName.toLowerCase()))","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"                .findFirst();","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        if (personOptional.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"            throw new CommandException(","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"                    Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"        Person personToEdit \u003d personOptional.get();","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(),","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"                personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"                personToEdit.getAddress(), personToEdit.getMembershipPoints().addPoints(pointsToAdd),","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"                personToEdit.getAllergens(), personToEdit.getPoints(), personToEdit.getOrders());","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"        return String.format(MESSAGE_ADD_MEMBERSHIP_SUCCESS, pointsToAdd, personToEdit.getName());","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"kab-dot"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"        if (!(other instanceof AddMemPointsCommand)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"kab-dot"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"kab-dot"},"content":"        // state check","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"        AddMemPointsCommand e \u003d (AddMemPointsCommand) other;","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"kab-dot"},"content":"        return name.equals(e.name)","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"                \u0026\u0026 pointsToAdd \u003d\u003d e.pointsToAdd;","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kab-dot":70,"kokerinks":22,"kinjalagarwal1810":2}},{"path":"src/main/java/seedu/address/logic/commands/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":" * Changes the order of an existing person in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"    public static final String COMMAND_WORD \u003d \"addorder\";","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"            + \": Adds an order to the order list of the person identified by the given name.\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"            + \"Parameters: n/MEMBER_NAME i/ITEM_NAME [q/QUANTITY]\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"            + \"NOTE: If quantity is not specified, it will default to 1.\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Alex Yeoh i/Chocolate Chip Cookies q/3\";","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_ADD_ORDER_SUCCESS \u003d \"Added order to Person: %1$s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_ITEM_NOT_FOUND \u003d \"Item not found in the inventory\";","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"    public final Name name;","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"    public final String itemName;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"    public final int quantity;","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"    public final LocalDateTime orderDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"     * @param name of the person to add the order to","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"     * @param itemName name of item ordered","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"     * @param quantity of specified item ordered","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"    public AddOrderCommand(Name name, String itemName, int quantity) {","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"        requireAllNonNull(name, itemName, quantity);","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"        this.orderDateTime \u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"     * @param name of the person to add the order to","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"     * @param itemName name of item ordered","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"     * @param quantity of specified item ordered","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"     * @param orderDateTime of the order","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"    public AddOrderCommand(Name name, String itemName,","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"                           int quantity, LocalDateTime orderDateTime) {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"        requireAllNonNull(name, itemName, quantity, orderDateTime);","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"        this.orderDateTime \u003d orderDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"        Optional\u003cPerson\u003e personOptional \u003d lastShownList.stream()","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"                .filter(person -\u003e person.getName().fullName.toLowerCase().contains(this.name.fullName.toLowerCase()))","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"                .findFirst();","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"        if (personOptional.isEmpty()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"        Person personToUpdate \u003d personOptional.get();","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        //Find matching item in catalogue","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"        AddressBook addressBook \u003d (AddressBook) model.getAddressBook();","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"        Item item \u003d addressBook.findItem(itemName);","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"        if (isNull(item)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"            throw new CommandException(MESSAGE_ITEM_NOT_FOUND);","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"        if (orderDateTime !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"            personToUpdate.addOrders(new Order(item, quantity, orderDateTime));","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"            personToUpdate.addOrders(new Order(item, quantity));","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"        personToUpdate.addPoints(quantity * item.getPoints());","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"billyhoce"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"billyhoce"},"content":"        return new CommandResult(generateSuccessMessage(personToUpdate));","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"billyhoce"},"content":"     * the order is added to or removed from {@code personToUpdate}.","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"billyhoce"},"content":"    static String generateSuccessMessage(Person personToUpdate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"        return String.format(MESSAGE_ADD_ORDER_SUCCESS, personToUpdate.getName());","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"billyhoce"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"billyhoce"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"billyhoce"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"billyhoce"},"content":"        if (!(other instanceof AddOrderCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"billyhoce"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"billyhoce"},"content":"        AddOrderCommand e \u003d (AddOrderCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"billyhoce"},"content":"        return name.equals(e.name)","lastModifiedDate":"2024-04-05"},{"lineNumber":128,"author":{"gitId":"billyhoce"},"content":"                \u0026\u0026 itemName.equals(e.itemName) \u0026\u0026 (quantity \u003d\u003d e.quantity);","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"kokerinks"},"content":"        return \"AddOrderCommand{\"","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"billyhoce"},"content":"                + \"personNamePredicate\u003d\" + name","lastModifiedDate":"2024-04-05"},{"lineNumber":135,"author":{"gitId":"kokerinks"},"content":"                + \", itemName\u003d\u0027\" + itemName + \u0027\\\u0027\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"kokerinks"},"content":"                + \", quantity\u003d\" + quantity","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"kokerinks"},"content":"                + \", orderDateTime\u003d\" + orderDateTime","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"kokerinks"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kokerinks":43,"billyhoce":97}},{"path":"src/main/java/seedu/address/logic/commands/AddPointsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":" * Adds points to an existing person in the loyalty program.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddPointsCommand extends Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    public static final String COMMAND_WORD \u003d \"addpts\";","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Points added should be greater than 0.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"            + \": Adds points to the person identified. \\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"            + \"Parameters: \" + PREFIX_NAME + \"NAME \" + PREFIX_POINTS + \"POINTS \\n\"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"John Doe \" + PREFIX_POINTS + \"40\";","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_ADDPOINTS_SUCCESS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            \"Added %1$s point(s) to %2$s\";","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Name name;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Points points;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs an AddPointsCommand to add the specified {@code Points}","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     * to the person identified by {@code Name}.","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param name of the person in the list to edit the points","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param points to be added to the persons current points","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    public AddPointsCommand(Name name, Points points) {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireAllNonNull(name, points);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.points \u003d points;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        Optional\u003cPerson\u003e personOptional \u003d lastShownList.stream()","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"                .filter(person -\u003e person.getName().fullName.toLowerCase().contains(this.name.fullName.toLowerCase()))","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"                .findFirst();","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (personOptional.isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new CommandException(","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"                    Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person personToEdit \u003d personOptional.get();","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points newPoints \u003d new Points(Integer.toString(","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"                personToEdit.getPoints().getValue() + this.points.getValue()));","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(),","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"                personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"                personToEdit.getAddress(), personToEdit.getMembershipPoints(),","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"                personToEdit.getAllergens(), newPoints, personToEdit.getOrders());","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!(other instanceof AddPointsCommand)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand e \u003d (AddPointsCommand) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"        return name.equals(e.name)","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"                \u0026\u0026 points.equals(e.points);","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"    private String generateSuccessMessage(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"        return String.format(","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"                MESSAGE_ADDPOINTS_SUCCESS, this.points.value,","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"                person.getName());","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kab-dot":1,"kinjalagarwal1810":87,"kokerinks":8}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_CONFIRM \u003d \"Are you sure you want to clear the address book? \\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"            + \"Use `clear --force` to confirm clearing of the address book.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    private final boolean isForced;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"    public ClearCommand() {","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"        isForced \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public ClearCommand(boolean isForced) {","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        this.isForced \u003d isForced;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"        if (!(isForced)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"            return new CommandResult(MESSAGE_CONFIRM);","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"                || (other instanceof ClearCommand // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"                \u0026\u0026 isForced \u003d\u003d ((ClearCommand) other).isForced); // state check","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kokerinks":20,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"    public static final String COMMAND_WORD \u003d \"delmem\";","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kokerinks":2,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DeleteItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":" * Deletes an item by name from the item catalogue.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":" * If the item doesn\u0027t exist, an error is displayed.","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":" * Usage: {@code delitem i/ITEM_NAME}.","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"public class DeleteItemCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"    public static final String COMMAND_WORD \u003d \"delitem\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"            + \": Deletes the item with the given name in the catalogue.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"            + \"Parameters: i/ITEM_NAME\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/donut\";","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    public static final String MESSAGE_DELETE_ITEM_SUCCESS \u003d \"Deleted Item: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"    public static final String MESSAGE_ITEM_NOT_FOUND \u003d \"Item not found in the catalogue.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"    private final String itemName;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"    public DeleteItemCommand(String itemName) {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"        if (!model.hasItem(itemName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"            throw new CommandException(MESSAGE_ITEM_NOT_FOUND);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        Item itemRemoved \u003d model.removeItem(itemName);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ITEM_SUCCESS, itemName));","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"                || (other instanceof DeleteItemCommand // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"                \u0026\u0026 itemName.equals(((DeleteItemCommand) other).itemName)); // state check","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kab-dot":48,"kokerinks":2,"billyhoce":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGENS;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMSHIP_PTS;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.MembershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"            + \"NOTE: Orders cannot be edited this way.\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \"[\" + PREFIX_NAME + \"MEMBER_NAME] \"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \"[\" + PREFIX_PHONE + \"MEMBER_PHONE] \"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \"[\" + PREFIX_EMAIL + \"MEMBER_EMAIL] \"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"            + \"[\" + PREFIX_ADDRESS + \"MEMBER_ADDRESS] \\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"            + \"\\t\\t\\t[\" + PREFIX_ALLERGENS + \"ALLERGENS] \"","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"            + \"[\" + PREFIX_POINTS + \"POINTS] \"","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"            + \"[\" + PREFIX_MEMSHIP_PTS + \"MEMBERSHIP_POINTS]...\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\\n\";","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"billyhoce"},"content":"     * edited with {@code editPersonDescriptor}. Orders of {@code personToEdit} is copied","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"billyhoce"},"content":"     * over to the returned {@code Person}.","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"        MembershipPoints updatedMembershipPoints \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"                editPersonDescriptor.getMembershipPoints().orElse(personToEdit.getMembershipPoints());","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"kinjalagarwal1810"},"content":"        Set\u003cAllergen\u003e updatedAllergens \u003d editPersonDescriptor.getAllergens().orElse(personToEdit.getAllergens());","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points updatedPoints \u003d editPersonDescriptor.getPoints().orElse(personToEdit.getPoints());","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"        ArrayList\u003cOrder\u003e updatedOrders \u003d editPersonDescriptor.getOrders().orElse(personToEdit.getOrders());","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedMembershipPoints,","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"kinjalagarwal1810"},"content":"                updatedAllergens, updatedPoints, updatedOrders);","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"kinjalagarwal1810"},"content":"        private Set\u003cAllergen\u003e allergens;","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"kinjalagarwal1810"},"content":"        private Points points;","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"billyhoce"},"content":"        private ArrayList\u003cOrder\u003e orders;","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"kokerinks"},"content":"        private MembershipPoints membershipPoints;","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"kinjalagarwal1810"},"content":"            setAllergens(toCopy.allergens);","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"kinjalagarwal1810"},"content":"            setPoints(toCopy.points);","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"kokerinks"},"content":"            setMembershipPoints(toCopy.membershipPoints);","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"kokerinks"},"content":"            setOrders(toCopy.orders);","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"kokerinks"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, allergens, points, membershipPoints);","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"kinjalagarwal1810"},"content":"         * Sets {@code allergens} to this object\u0027s {@code allergens}.","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"kinjalagarwal1810"},"content":"         * A defensive copy of {@code allergens} is used internally.","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"kinjalagarwal1810"},"content":"        public void setAllergens(Set\u003cAllergen\u003e allergens) {","lastModifiedDate":"2024-03-26"},{"lineNumber":221,"author":{"gitId":"kinjalagarwal1810"},"content":"            this.allergens \u003d (allergens !\u003d null) ? new HashSet\u003c\u003e(allergens) : null;","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"kinjalagarwal1810"},"content":"         * Returns an unmodifiable allergen set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"kinjalagarwal1810"},"content":"         * Returns {@code Optional#empty()} if {@code allergens} is null.","lastModifiedDate":"2024-03-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"kinjalagarwal1810"},"content":"        public Optional\u003cSet\u003cAllergen\u003e\u003e getAllergens() {","lastModifiedDate":"2024-03-26"},{"lineNumber":230,"author":{"gitId":"kinjalagarwal1810"},"content":"            return (allergens !\u003d null) ? Optional.of(Collections.unmodifiableSet(allergens)) : Optional.empty();","lastModifiedDate":"2024-03-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"kinjalagarwal1810"},"content":"        public void setPoints(Points points) {","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"kinjalagarwal1810"},"content":"            this.points \u003d points;","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"kinjalagarwal1810"},"content":"        public Optional\u003cPoints\u003e getPoints() {","lastModifiedDate":"2024-03-11"},{"lineNumber":238,"author":{"gitId":"kinjalagarwal1810"},"content":"            return Optional.ofNullable(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"billyhoce"},"content":"        /**","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"billyhoce"},"content":"         * Sets {@code orders} to this object\u0027s {@code orders}.","lastModifiedDate":"2024-03-16"},{"lineNumber":243,"author":{"gitId":"billyhoce"},"content":"         * A defensive copy of {@code orders} is used internally.","lastModifiedDate":"2024-03-16"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-03-16"},{"lineNumber":245,"author":{"gitId":"billyhoce"},"content":"        public void setOrders(ArrayList\u003cOrder\u003e orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":246,"author":{"gitId":"billyhoce"},"content":"            this.orders \u003d (orders !\u003d null) ? new ArrayList\u003c\u003e(orders) : null;","lastModifiedDate":"2024-03-16"},{"lineNumber":247,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":249,"author":{"gitId":"billyhoce"},"content":"        /**","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"billyhoce"},"content":"         * Returns an order ArrayList","lastModifiedDate":"2024-03-16"},{"lineNumber":251,"author":{"gitId":"billyhoce"},"content":"         * Returns {@code Optional#empty()} if {@code ArrayList} is null.","lastModifiedDate":"2024-03-16"},{"lineNumber":252,"author":{"gitId":"billyhoce"},"content":"         */","lastModifiedDate":"2024-03-16"},{"lineNumber":253,"author":{"gitId":"billyhoce"},"content":"        public Optional\u003cArrayList\u003cOrder\u003e\u003e getOrders() {","lastModifiedDate":"2024-03-16"},{"lineNumber":254,"author":{"gitId":"billyhoce"},"content":"            return (orders !\u003d null) ? Optional.of(orders) : Optional.empty();","lastModifiedDate":"2024-03-16"},{"lineNumber":255,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":256,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":257,"author":{"gitId":"kokerinks"},"content":"        public void setMembershipPoints(MembershipPoints membershipPoints) {","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"kokerinks"},"content":"            this.membershipPoints \u003d membershipPoints;","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":260,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":261,"author":{"gitId":"kokerinks"},"content":"        public Optional\u003cMembershipPoints\u003e getMembershipPoints() {","lastModifiedDate":"2024-03-30"},{"lineNumber":262,"author":{"gitId":"kokerinks"},"content":"            return Optional.ofNullable(membershipPoints);","lastModifiedDate":"2024-03-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":281,"author":{"gitId":"kinjalagarwal1810"},"content":"                    \u0026\u0026 Objects.equals(allergens, otherEditPersonDescriptor.allergens)","lastModifiedDate":"2024-03-26"},{"lineNumber":282,"author":{"gitId":"kinjalagarwal1810"},"content":"                    \u0026\u0026 Objects.equals(points, otherEditPersonDescriptor.points);","lastModifiedDate":"2024-03-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":292,"author":{"gitId":"kinjalagarwal1810"},"content":"                    .add(\"allergens\", allergens)","lastModifiedDate":"2024-03-26"},{"lineNumber":293,"author":{"gitId":"kinjalagarwal1810"},"content":"                    .add(\"points\", points)","lastModifiedDate":"2024-03-11"},{"lineNumber":294,"author":{"gitId":"kokerinks"},"content":"                    .add(\"membershipPoints\", membershipPoints)","lastModifiedDate":"2024-03-30"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kinjalagarwal1810":35,"kokerinks":23,"-":220,"billyhoce":21}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays all persons whose names contain ANY of \"","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"            + \"the specified keywords (case-insensitive)\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_NO_PERSONS_FOUND \u003d \"No persons found! Showing all persons instead.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"            model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"            return new CommandResult(MESSAGE_NO_PERSONS_FOUND);","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kokerinks":8,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"            + \"Parameters: [--commands/-c]\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    public static final String INVALID_FLAG_MESSAGE \u003d \"The flag `%s` is invalid.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    public static final String COMMAND_LIST \u003d \"Command List \" + \"\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"            + AddCommand.COMMAND_WORD + \" : Add a member\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"            + AddItemCommand.COMMAND_WORD + \" : Add item\" + \"\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"            + AddMemPointsCommand.COMMAND_WORD + \" : Add membership points\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"            + AddOrderCommand.COMMAND_WORD + \" : Add order\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"            + AddPointsCommand.COMMAND_WORD + \" : Add redemption points\" + \"\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"            + ClearCommand.COMMAND_WORD + \" : Clear all members\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"            + DeleteCommand.COMMAND_WORD + \" : Delete a member\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"            + DeleteItemCommand.COMMAND_WORD + \" : Delete item\" + \"\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"            + EditCommand.COMMAND_WORD + \" : Edit member details\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"            + ExitCommand.COMMAND_WORD + \" : Exit the program\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"            + FindCommand.COMMAND_WORD + \" : Find members\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"            + HelpCommand.COMMAND_WORD + \" : Access user guide\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"            + ListCommand.COMMAND_WORD + \" : List all members\" + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"            + RedeemPointsCommand.COMMAND_WORD + \" : Redeem points\" + \"\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"            + SeedDataCommand.COMMAND_WORD + \" : Seed data\";","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    private String helpType;","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        this.helpType \u003d \"\";","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"    public HelpCommand(String helpType) {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"        this.helpType \u003d helpType;","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"        switch (helpType) {","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"        case \"commands\":","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"            return new CommandResult(COMMAND_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"        default:","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"                || (other instanceof HelpCommand // instanceof handles nulls","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"                \u0026\u0026 helpType.equals(((HelpCommand) other).helpType)); // state check","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"kab-dot":11,"kokerinks":29,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/RedeemPointsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":" * Redeems points from an existing person in the loyalty program.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"public class RedeemPointsCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"    public static final String COMMAND_WORD \u003d \"redeempts\";","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Points to redeem should be greater than 0.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"            + \": Redeems points from the person identified. \\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \"Parameters: \" + PREFIX_NAME + \"NAME \" + PREFIX_POINTS + \"POINTS \\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"John Doe \" + PREFIX_POINTS + \"30\";","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_REDEEMPOINTS_SUCCESS \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            \"Redeemed %1$s points from %2$s\";","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_INSUFFICIENT_POINTS \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"            \"%s has insufficient points (%s pts) to redeem.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Name name;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Points pointsToRedeem;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a RedeemPointsCommand to redeem the specified {@code Points}","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     * from the person identified by {@code Name}.","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param name of the person in the list to redeem the points from","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param pointsToRedeem to be subtracted from the person\u0027s current points","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    public RedeemPointsCommand(Name name, Points pointsToRedeem) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireAllNonNull(name, pointsToRedeem);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.pointsToRedeem \u003d pointsToRedeem;","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        Optional\u003cPerson\u003e personOptional \u003d lastShownList.stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"                .filter(person -\u003e person.getName().fullName.toLowerCase().contains(this.name.fullName.toLowerCase()))","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"                .findFirst();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (personOptional.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person personToEdit \u003d personOptional.get();","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        int currentPointsValue \u003d personToEdit.getPoints().getValue();","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"        int pointsToRedeemValue \u003d this.pointsToRedeem.getValue();","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (currentPointsValue \u003c pointsToRedeemValue) {","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"            throw new CommandException(","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"                    String.format(MESSAGE_INSUFFICIENT_POINTS, personToEdit.getName(), currentPointsValue));","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points newPoints \u003d new Points(Integer.toString(currentPointsValue - pointsToRedeemValue));","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"                personToEdit.getEmail(), personToEdit.getAddress(),","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"                personToEdit.getMembershipPoints(), personToEdit.getAllergens(),","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"                newPoints, personToEdit.getOrders());","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson, pointsToRedeemValue));","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!(other instanceof RedeemPointsCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"        RedeemPointsCommand e \u003d (RedeemPointsCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"        return name.equals(e.name) \u0026\u0026 pointsToRedeem.equals(e.pointsToRedeem);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"    private String generateSuccessMessage(Person person, int pointsToRedeem) {","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"        return String.format(MESSAGE_REDEEMPOINTS_SUCCESS, pointsToRedeem, person.getName());","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"kab-dot":1,"kinjalagarwal1810":95,"kokerinks":5}},{"path":"src/main/java/seedu/address/logic/commands/SeedDataCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":" * Seed the address book with sample data.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"public class SeedDataCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    public static final String COMMAND_WORD \u003d \"seeddata\";","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_SUCCESS \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"            \"Added new members and catalogue from seed data into the address book successfully!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_FAILURE \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"            \"Every member and items in catalogue from seed data already exist in the address book!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    private static final Person[] samplePersons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"    private static final Item[] sampleCatalogue \u003d SampleDataUtil.getSampleCatalogue();","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"        AddressBook addressBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"        boolean hasAdded \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"        for (Person person : samplePersons) {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"            if (!addressBook.hasPerson(person)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"                model.addPerson(person);","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"                hasAdded \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"        for (Item item : sampleCatalogue) {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"            if (!addressBook.hasItem(item.getName())) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"                model.addItem(item);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"                hasAdded \u003d true;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"        if (hasAdded) {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"kokerinks":34,"billyhoce":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGENS;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.MembershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"                        PREFIX_ALLERGENS, PREFIX_POINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS)","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"                PREFIX_POINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"        MembershipPoints membership \u003d new MembershipPoints();","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"        Set\u003cAllergen\u003e allergenList \u003d ParserUtil.parseAllergens(argMultimap.getAllValues(PREFIX_ALLERGENS));","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Default to \"0\" if points are not provided","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points points \u003d argMultimap.getValue(PREFIX_POINTS).isPresent()","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"                ? ParserUtil.parsePoints(argMultimap.getValue(PREFIX_POINTS).get())","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"                : new Points(\"0\");","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"        ArrayList\u003cOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person person \u003d new Person(name, phone, email, address, membership, allergenList, points, orders);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kinjalagarwal1810":15,"kokerinks":4,"-":54,"billyhoce":1}},{"path":"src/main/java/seedu/address/logic/parser/AddItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.AddItemCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":" * Parses input arguments and creates a new AddItemCommand object.","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":" * Input format: {@code additem i/ITEM_NAME p/POINTS}, where ITEM_NAME is the name of the item to be added","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":" * and POINTS is the number of points associated with the item.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"public class AddItemCommandParser implements Parser\u003cAddItemCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"     * Parses the given {@code String} of arguments in the context of the AddItemCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"     * and returns an AddItemCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"    public AddItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ITEM, PREFIX_POINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ITEM, PREFIX_POINTS)","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddItemCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"        String itemName \u003d argMultimap.getValue(PREFIX_ITEM).orElse(\"\");","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"        if (!Item.isValidItemName(itemName) || itemName.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"            throw new ParseException(Item.MESSAGE_CONSTRAINTS + \"\\n\" + AddItemCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"        int points;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"            points \u003d ParserUtil.parseMemPointsToAdd(argMultimap.getValue(PREFIX_POINTS).orElse(\"\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"            throw new ParseException(AddItemCommand.INVALID_COMMAND_FORMAT","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"                    + \"\\n\" + AddItemCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        Item item \u003d new Item(itemName, points);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"        return new AddItemCommand(item);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"     * Returns true if all the prefixes contain non-empty {@code Optional} values in the given","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kab-dot":58,"billyhoce":1}},{"path":"src/main/java/seedu/address/logic/parser/AddMemPointsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMSHIP_PTS;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.AddMemPointsCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":" * Parses input arguments and creates a new {@code MembershipPoints Command} object","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"public class AddMemPointsCommandParser implements Parser\u003cAddMemPointsCommand\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public AddMemPointsCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MEMSHIP_PTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_MEMSHIP_PTS)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(String.format(AddMemPointsCommand.INVALID_COMMAND_FORMAT","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"                    + \"\\n\" + AddMemPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        Name name;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).orElse(\"\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"            new ParseException(Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemPointsCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemPointsCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        int pointsToAdd;","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"            pointsToAdd \u003d ParserUtil.parseMemPointsToAdd(argMultimap.getValue(PREFIX_MEMSHIP_PTS).orElse(\"\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(AddMemPointsCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"        return new AddMemPointsCommand(name, pointsToAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"kab-dot":6,"kokerinks":47}},{"path":"src/main/java/seedu/address/logic/parser/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QTY;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":" * Parses input arguments and creates a new AddOrderCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"public class AddOrderCommandParser implements Parser\u003cAddOrderCommand\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderCommand","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"     * and returns a AddOrderCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"                PREFIX_NAME, PREFIX_ITEM, PREFIX_QTY);","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ITEM)","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).orElse(\"\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"        // Item name should not be empty","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"        String trimmedItemName \u003d argMultimap.getValue(PREFIX_ITEM).get().trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        if (!Order.isValidItems(trimmedItemName)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(Order.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"        int quantity;","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"            // if quantity not specified, default to 1","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"            quantity \u003d argMultimap.getValue(PREFIX_QTY).isPresent()","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"                    ? Integer.parseInt(argMultimap.getValue(PREFIX_QTY).get())","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"                    : 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"            throw new ParseException(Order.MESSAGE_INVALID_QUANTITY);","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"        // Quantity should be a positive integer","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"        if (quantity \u003c\u003d 0) {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(Order.MESSAGE_INVALID_QUANTITY);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"        return new AddOrderCommand(name, trimmedItemName, quantity);","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kab-dot":6,"kokerinks":8,"billyhoce":52}},{"path":"src/main/java/seedu/address/logic/parser/AddPointsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.AddPointsCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":" * Parses input arguments and creates a new {@code AddPointsCommand} object.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddPointsCommandParser implements Parser\u003cAddPointsCommand\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddPointsCommand}","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     * and returns an {@code AddPointsCommand} object for execution.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    public AddPointsCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_POINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_POINTS)","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points points \u003d ParserUtil.parsePoints(argMultimap.getValue(PREFIX_POINTS).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        if (points.value \u003d\u003d 0) {","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(AddPointsCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new AddPointsCommand(name, points);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns true if all the given prefixes are present in the given ArgumentMultimap and not empty.","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"            Optional\u003cString\u003e value \u003d argumentMultimap.getValue(prefix);","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (!value.isPresent() || value.get().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"                return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":55,"kokerinks":3}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.AddItemCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.AddMemPointsCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddPointsCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.DeleteItemCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.RedeemPointsCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.SeedDataCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"        case SeedDataCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"            return new SeedDataCommand();","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"        case AddMemPointsCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"            return new AddMemPointsCommandParser().parse(arguments);","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"        case AddPointsCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new AddPointsCommandParser().parse(arguments);","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"kab-dot"},"content":"        case AddItemCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"kab-dot"},"content":"            return new AddItemCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"kab-dot"},"content":"        case DeleteItemCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"kab-dot"},"content":"            return new DeleteItemCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"        case RedeemPointsCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new RedeemPointsCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kab-dot":9,"kokerinks":9,"kinjalagarwal1810":7,"-":85,"billyhoce":5}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":" * Parses input arguments and creates a new ClearCommand object","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"     * and returns a ClearCommand object for execution.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"        if (args.contains(\" --force\")) {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"            return new ClearCommand(true);","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"        return new ClearCommand(false);","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"kokerinks":22}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"hp/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    public static final Prefix PREFIX_MEMSHIP_PTS \u003d new Prefix(\"mp/\");","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final Prefix PREFIX_ALLERGENS \u003d new Prefix(\"ag/\");","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final Prefix PREFIX_POINTS \u003d new Prefix(\"p/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    public static final Prefix PREFIX_ITEM \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    public static final Prefix PREFIX_QTY \u003d new Prefix(\"q/\");","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kinjalagarwal1810":3,"kokerinks":1,"-":13,"billyhoce":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.DeleteItemCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":" * Parses input arguments and creates a new DeleteItemCommand object.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":" * Input format: {@code delitem i/ITEM_NAME}, where ITEM_NAME is the name of the item to be deleted.","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"public class DeleteItemCommandParser implements Parser\u003cDeleteItemCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"    public DeleteItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ITEM);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"        if (!argMultimap.getValue(PREFIX_ITEM).isPresent() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteItemCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"        String itemName \u003d argMultimap.getValue(PREFIX_ITEM).get();","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"        return new DeleteItemCommand(itemName);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kab-dot":30}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGENS;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMSHIP_PTS;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"                        PREFIX_ALLERGENS, PREFIX_POINTS, PREFIX_MEMSHIP_PTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"                PREFIX_POINTS, PREFIX_MEMSHIP_PTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"        if (argMultimap.getValue(PREFIX_POINTS).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"            editPersonDescriptor.setPoints(ParserUtil.parsePoints(argMultimap.getValue(PREFIX_POINTS).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"        if (argMultimap.getValue(PREFIX_MEMSHIP_PTS).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"            editPersonDescriptor.setMembershipPoints(","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"                    ParserUtil.parseMembershipPoints(argMultimap.getValue(PREFIX_MEMSHIP_PTS).get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        parseAllergensForEdit(argMultimap.getAllValues(PREFIX_ALLERGENS))","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"                .ifPresent(editPersonDescriptor::setAllergens);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses {@code Collection\u003cString\u003e allergens} into a {@code Set\u003cAllergen\u003e} if {@code allergens} is non-empty.","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"     * If {@code allergens} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"     * {@code Set\u003cAllergen\u003e} containing zero allergens.","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Optional\u003cSet\u003cAllergen\u003e\u003e parseAllergensForEdit(Collection\u003cString\u003e allergens) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert allergens !\u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (allergens.isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"        Collection\u003cString\u003e allergenSet \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"                allergens.size() \u003d\u003d 1 \u0026\u0026 allergens.contains(\"\") ? Collections.emptySet() : allergens;","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"        return Optional.of(ParserUtil.parseAllergens(allergenSet));","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kinjalagarwal1810":15,"kokerinks":11,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":" * Parses input arguments and creates a new HelpCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand.","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"     * @param args the user input string","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"     * @return the parsed HelpCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"        args \u003d args.trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"        String[] argsList \u003d args.split(\" \");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"        String commandType \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"        for (String arg : argsList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"            switch (arg) {","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"            case \"--commands\":","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"            case \"-c\":","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"                commandType \u003d \"commands\";","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"                break;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"            default:","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"                throw new ParseException(String.format(HelpCommand.INVALID_FLAG_MESSAGE, arg) + \"\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"                        + HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"        return new HelpCommand(commandType);","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"kokerinks":37}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.AddMemPointsCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.MembershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_INVALID_POINTS \u003d \"Points should be a non-negative integer.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"     * Parses a {@code String membershipPts} into a {@code MembershipPoints}.","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"kab-dot"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"     * @throws ParseException if the given {@code membershipPts} is invalid.","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"    public static int parseMemPointsToAdd(String pointsToAdd) throws ParseException {","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(pointsToAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"        int parsedPointsToAdd;","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"            parsedPointsToAdd \u003d Integer.parseInt(pointsToAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(AddMemPointsCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"        if (!MembershipPoints.isValidMembershipPoints(parsedPointsToAdd)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(AddMemPointsCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"        return parsedPointsToAdd;","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses a {@code String allergen} into a {@code Allergen}.","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws ParseException if the given {@code allergen} is invalid.","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static Allergen parseAllergen(String allergen) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(allergen);","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"kinjalagarwal1810"},"content":"        String trimmedAllergen \u003d allergen.trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!Allergen.isValidAllergenName(trimmedAllergen)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new ParseException(Allergen.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new Allergen(trimmedAllergen);","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses {@code Collection\u003cString\u003e allergens} into a {@code Set\u003cAllergen\u003e}.","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static Set\u003cAllergen\u003e parseAllergens(Collection\u003cString\u003e allergens) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(allergens);","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Set\u003cAllergen\u003e allergenSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"kinjalagarwal1810"},"content":"        for (String allergenName : allergens) {","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"kinjalagarwal1810"},"content":"            allergenSet.add(parseAllergen(allergenName));","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"kinjalagarwal1810"},"content":"        return allergenSet;","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":153,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses a {@code String points} into a {@code Points}.","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws ParseException if the given {@code points} is invalid (not a non-negative integer).","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static Points parsePoints(String points) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"kinjalagarwal1810"},"content":"        String trimmedPoints \u003d points.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!Points.isValidPoints(trimmedPoints)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new ParseException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new Points(trimmedPoints);","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"kokerinks"},"content":"     * Parses a {@code String membershipPoints} into a {@code MembershipPoints}.","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"kokerinks"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"kokerinks"},"content":"     * @throws ParseException if the given {@code membershipPoints} is invalid (not a non-negative integer).","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"kokerinks"},"content":"    public static MembershipPoints parseMembershipPoints(String membershipPoints) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(membershipPoints);","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"kokerinks"},"content":"        String trimmedMembershipPoints \u003d membershipPoints.trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"kokerinks"},"content":"        int membershipPointsInt;","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"kokerinks"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"kokerinks"},"content":"            membershipPointsInt \u003d Integer.parseInt(trimmedMembershipPoints);","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"kokerinks"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(MESSAGE_INVALID_POINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"kokerinks"},"content":"        if (!MembershipPoints.isValidMembershipPoints(membershipPointsInt)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":184,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(MESSAGE_INVALID_POINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":185,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":186,"author":{"gitId":"kokerinks"},"content":"        return new MembershipPoints(trimmedMembershipPoints);","lastModifiedDate":"2024-03-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":188,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kab-dot":7,"kokerinks":37,"kinjalagarwal1810":27,"-":117,"billyhoce":1}},{"path":"src/main/java/seedu/address/logic/parser/RedeemPointsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.RedeemPointsCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":" * Parses input arguments and creates a new RedeemPointsCommand object.","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"public class RedeemPointsCommandParser implements Parser\u003cRedeemPointsCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the given {@code String} of arguments in the context of the RedeemPointsCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     * and returns a RedeemPointsCommand object for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    public RedeemPointsCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_POINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_POINTS)","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedeemPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points points \u003d ParserUtil.parsePoints(argMultimap.getValue(PREFIX_POINTS).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (points.value \u003c\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new ParseException(RedeemPointsCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new RedeemPointsCommand(name, points);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"            Optional\u003cString\u003e value \u003d argumentMultimap.getValue(prefix);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (!value.isPresent() || value.get().isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"                return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"        return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"kinjalagarwal1810":58}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Catalogue;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"    private final Catalogue catalogue;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"        catalogue \u003d new Catalogue();","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"        this.catalogue.setItems(items);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"        setItems(newData.getItemList());","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"    public Item findItem(String name) {","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"        return catalogue.findItem(name);","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"    public boolean addItem(Item item) {","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"        return catalogue.addItem(item);","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"     * Removes an item with a given {@code name} from the catalogue.","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"    public Item removeItem(String name) {","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"billyhoce"},"content":"        return catalogue.removeItem(name);","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"     * Returns true if an item with the same name as {@code item} exists in the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"kokerinks"},"content":"    public boolean hasItem(String name) {","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"billyhoce"},"content":"        return catalogue.hasItem(name);","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"kokerinks"},"content":"                .add(\"catalogue\", catalogue)","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":146,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"kokerinks"},"content":"    public ObservableList\u003cItem\u003e getItemList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"billyhoce"},"content":"        return catalogue.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"billyhoce"},"content":"        return persons.equals(otherAddressBook.persons) \u0026\u0026 catalogue.equals(otherAddressBook.catalogue);","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"billyhoce"},"content":"        return Objects.hash(persons, catalogue);","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kokerinks":33,"-":127,"billyhoce":11}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"    /** Returns an unmodifiable view of the catalogue */","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"    ObservableList\u003cItem\u003e getCatalogue();","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"     * Searches the address book for an item with the given name.","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"     * @param name of the item to search for.","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"     * @return Item with the given name.","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"    Item findItem(String name);","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"     * Adds an item to the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"     * @param item to be added.","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"     * @return true if the item was added successfully.","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"    boolean addItem(Item item);","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"billyhoce"},"content":"     * Removes an {@code Item} from the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"     * @param name of the item to be removed.","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"billyhoce"},"content":"     * @return {@code Item} that was removed","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"    Item removeItem(String name);","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"kab-dot"},"content":"     * Returns true if an item with the same name as {@code item} exists in the catalogue.","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"kab-dot"},"content":"    boolean hasItem(String itemName);","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kab-dot":5,"kokerinks":21,"-":87,"billyhoce":5}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"billyhoce"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Catalogue Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"billyhoce"},"content":"    public ObservableList\u003cItem\u003e getCatalogue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"billyhoce"},"content":"        return addressBook.getItemList();","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"kab-dot"},"content":"    public boolean hasItem(String itemName) {","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"kab-dot"},"content":"        requireNonNull(itemName);","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"billyhoce"},"content":"        return addressBook.hasItem(itemName);","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"kokerinks"},"content":"    public Item findItem(String item) {","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"kokerinks"},"content":"        return addressBook.findItem(item);","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"kokerinks"},"content":"    public boolean addItem(Item item) {","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"kokerinks"},"content":"        return addressBook.addItem(item);","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"kokerinks"},"content":"    public Item removeItem(String name) {","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"kab-dot"},"content":"        return addressBook.removeItem(name);","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"%s %s %s\", addressBook, userPrefs, filteredPersons);","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kab-dot":5,"kokerinks":18,"-":148,"billyhoce":9}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     * Returns an unmodifiable view of the items list.","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"     * This list will not contain any duplicate items.","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    ObservableList\u003cItem\u003e getItemList();","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kokerinks":7,"-":17}},{"path":"src/main/java/seedu/address/model/allergen/Allergen.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.model.allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a Allergen in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidAllergenName(String)}","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Allergen {","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Allergens names should be alphanumeric\";","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public final String allergenName;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a {@code Allergen}.","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param allergenName A valid allergen name.","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Allergen(String allergenName) {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(allergenName);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        checkArgument(isValidAllergenName(allergenName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.allergenName \u003d allergenName;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns true if a given string is a valid allergen name.","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static boolean isValidAllergenName(String test) {","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!(other instanceof Allergen)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        Allergen otherAllergen \u003d (Allergen) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        return allergenName.equals(otherAllergen.allergenName);","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        return allergenName.hashCode();","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \u0027[\u0027 + allergenName + \u0027]\u0027;","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"kinjalagarwal1810":62}},{"path":"src/main/java/seedu/address/model/item/Catalogue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.model.item;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":" * A list of items that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":" * A item is considered unique by comparing using {@code Item#isSameItem(Item)}. As such, adding and updating of","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":" * items uses Item#isSameItem(Item) for equality to ensure that the item being added or updated is","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":" * unique in terms of identity in the Catalogue.","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":" *","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":" *","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":" * @see Item#isSameItem(Item)","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"public class Catalogue implements Iterable\u003cItem\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"    private final ObservableList\u003cItem\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    private final ObservableList\u003cItem\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    public Catalogue() {}","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"     * Returns false if the list contains an item with the same name.","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    public boolean addItem(Item newItem) {","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        for (Item item: internalList) {","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"            if (item.isSameItem(newItem)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"                return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"        internalList.add(newItem);","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"     * Returns if this catalogue contains an item matching the name of the given string","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"    public boolean hasItem(String name) {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"        for (Item item: internalList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"            String itemName \u003d item.getName().toLowerCase();","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"            if (itemName.equals(name.toLowerCase())) {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"                return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"        return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"     * Returns a clone of the item in this catalogue that has a name matching the given String","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"    public Item findItem(String name) {","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"        name \u003d name.toLowerCase();","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"        for (Item item: internalList) {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"            String itemName \u003d item.getName();","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"            if (itemName.equalsIgnoreCase(name)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"                return item.clone();","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"        return null;","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"     * Removes the item in this {@code Catalogue} with name matching the given String","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"     * @return {@code Item} removed from the catalogue, or {@code null} if no items were removed","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"    public Item removeItem(String name) {","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"        for (Item item: internalList) {","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"            if (item.getName().equalsIgnoreCase(name)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"                internalList.remove(item);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"                return item;","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"        return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"kokerinks"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"kokerinks"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"kokerinks"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"        internalList.setAll(items);","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"    public void setItems(Catalogue replacement) {","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"    public Iterator\u003cItem\u003e iterator() {","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"billyhoce"},"content":"     * Returns an unmodifiable view of the item list.","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"billyhoce"},"content":"     * This list will not contain any duplicate items.","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"billyhoce"},"content":"     * @return an unmodifiable view of the items list.","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"    public ObservableList\u003cItem\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"     * Returns true if the list contains only unique items.","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"    public boolean itemsAreUnique(List\u003cItem\u003e items) {","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"                if (items.get(i).getName().equals(items.get(j).getName())) {","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"                    return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"        return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"kokerinks"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"kokerinks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"kokerinks"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"kokerinks"},"content":"                || (other instanceof Catalogue // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"kokerinks"},"content":"                \u0026\u0026 internalList.equals(((Catalogue) other).internalList));","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"kokerinks"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"kokerinks"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"kokerinks":116,"billyhoce":27}},{"path":"src/main/java/seedu/address/model/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.model.item;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":" * Represents an Item in the catalogue.","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"public class Item implements Cloneable {","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"            \"Item names should contain alphabets and spaces, and cannot be blank.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"    public static final String ITEM_NAME_VALIDATION_REGEX \u003d \"^[a-zA-Z][a-zA-Z\\\\s]*$\";","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    private String name;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    private int points;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"     * Creates a new item with the given name and points.","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    public Item(String newName, int newPoints) {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        name \u003d newName;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"        points \u003d newPoints;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public String getName() {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        return name;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    public int getPoints() {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"        return points;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"    public Item clone() {","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        return new Item(name, points);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    public boolean isSameItem(Item otherItem) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        return otherItem !\u003d null \u0026\u0026 otherItem.getName().equals(name);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        return name + \" (\" + points + \" points)\";","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"                || (other instanceof Item // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"                \u0026\u0026 name.equals(((Item) other).name)","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"                \u0026\u0026 points \u003d\u003d ((Item) other).points); // state check","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"     * Returns true if a given string is a valid item name.","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"    public static boolean isValidItemName(String test) {","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"        return test.matches(ITEM_NAME_VALIDATION_REGEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"        //combine both names and points, then hash","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"        String hashString \u003d String.format(\"%s%d\", name, points);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"        return hashString.hashCode();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"kab-dot":8,"kokerinks":56}},{"path":"src/main/java/seedu/address/model/item/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":" * Signals that the operation will result in duplicate Items (Items are considered duplicates if they have the same","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":" * identity).","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"kokerinks":11}},{"path":"src/main/java/seedu/address/model/person/MembershipPoints.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":" * Represents a Person\u0027s membership tier and points in the address book.","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"public class MembershipPoints {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"     * Represents the tiers and the minimum points required to reach them, from highest to lowest.","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    public static final String[][] TIERS \u003d {","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"            {\"PLATINUM\", \"10000\"},","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"            {\"GOLD\", \"5000\"},","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"            {\"SILVER\", \"2000\"},","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"            {\"BRONZE\", \"0\"},","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    };","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"     * The total amount of points accumulated by a member.","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    public final int value;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    public MembershipPoints() {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"        this.value \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"     * Creates a MembershipPoints object with the specified points.","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"     * @param newPoints The points to be set.","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    public MembershipPoints(int newPoints) {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(newPoints);","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"        this.value \u003d newPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"     * Creates a MembershipPoints object with the specified points given as a string.","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"     * @param points The points to be set.","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"    public MembershipPoints(String points) {","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(points);","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"        checkArgument(isValidMembershipPoints(Integer.parseInt(points)), \"Points should be a non-negative integer.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"        this.value \u003d Integer.parseInt(points);","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"     * Calculates the tier of the membership based on {@code expPoints}.","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"     * @return The tier of the member.","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"    public String getTier() {","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"        for (int i \u003d 0; i \u003c TIERS.length - 1; i++) {","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"            if (value \u003e\u003d Integer.parseInt(TIERS[i][1])) {","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"                return TIERS[i][0];","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"        return TIERS[TIERS.length - 1][0];","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"     * Adds points to the current points.","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"     * @param pointsToBeAdded","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"     * @return The new MembershipPoints object with the added points.","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"    public MembershipPoints addPoints(int pointsToBeAdded) {","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"        MembershipPoints newMembershipPoints \u003d new MembershipPoints(this.value + pointsToBeAdded);","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"        return newMembershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"     * Checks if the points {@code test} are valid.","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"     * @param test The points to be tested.","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"    public static boolean isValidMembershipPoints(int test) {","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(test);","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"%s (%d pts)\", getTier(), value);","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"kokerinks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"            return true;","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"        if (!(other instanceof MembershipPoints)) { // instanceof handles nulls","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"            return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"        MembershipPoints otherMembershipPoints \u003d (MembershipPoints) other;","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"        return value \u003d\u003d otherMembershipPoints.value;","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"        Integer expPoints \u003d this.value;","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"        return expPoints.hashCode();","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"kokerinks":106}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kokerinks":1,"-":66}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Set\u003cAllergen\u003e allergens \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"    private final ArrayList\u003cOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"    // Points and Membership Points can be updated by {@code addPoints} method only","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"    private Points points;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    private MembershipPoints membershipPoints;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"    public Person(Name name, Phone phone, Email email, Address address, MembershipPoints membershipPoints,","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"                  Set\u003cAllergen\u003e allergens, Points points, ArrayList\u003cOrder\u003e orders) {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireAllNonNull(name, phone, email, address, membershipPoints, allergens, points, orders);","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"        this.membershipPoints \u003d membershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.allergens.addAll(allergens);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.points \u003d points;","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"    public MembershipPoints getMembershipPoints() {","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"        return membershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns an immutable allergen set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Set\u003cAllergen\u003e getAllergens() {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"        return Collections.unmodifiableSet(allergens);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Points getPoints() {","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"        return points;","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"     * Returns a copy of the orders of this Person","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"    public ArrayList\u003cOrder\u003e getOrders() {","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"        ArrayList\u003cOrder\u003e copy \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        for (Order order : orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"            copy.add(order.clone());","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"        return copy;","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"     * Adds an Order to the list of orders of this Person","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"    public void addOrders(Order order) {","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"        this.orders.add(order);","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"     * Adds points to the current points and membership points.","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"    public void addPoints(int pointsToAdd) {","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"        this.points \u003d this.points.addPoints(pointsToAdd);","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"        this.membershipPoints \u003d this.membershipPoints.addPoints(pointsToAdd);","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"kokerinks"},"content":"                \u0026\u0026 membershipPoints.equals(otherPerson.membershipPoints)","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"kinjalagarwal1810"},"content":"                \u0026\u0026 allergens.equals(otherPerson.allergens)","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"billyhoce"},"content":"                \u0026\u0026 points.equals(otherPerson.points)","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"billyhoce"},"content":"                \u0026\u0026 orders.equals(otherPerson.orders);","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"kinjalagarwal1810"},"content":"        return Objects.hash(name, phone, email, address, membershipPoints, allergens, points, orders);","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"kokerinks"},"content":"                .add(\"membership\", membershipPoints)","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"kinjalagarwal1810"},"content":"                .add(\"allergens\", allergens)","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"kokerinks"},"content":"                .add(\"points\", points)","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"billyhoce"},"content":"                .add(\"orders\", orders)","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kab-dot":2,"kinjalagarwal1810":17,"kokerinks":16,"-":109,"billyhoce":24}},{"path":"src/main/java/seedu/address/model/person/Points.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public final class Points {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"            \"Points should be a non-negative integer.\";","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public final int value;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a {@code Points} object.","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param points A valid points string.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Points(final String points) {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        checkArgument(isValidPoints(points), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.value \u003d Integer.parseInt(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"     * Constructs a {@code Points} object.","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"     * @param points A valid points integer.","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    public Points(final int points) {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        this.value \u003d points;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns true if a given string is a valid points amount.","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param test The string to test.","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return true if the string represents a non-negative integer.","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static boolean isValidPoints(String test) {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"            int value \u003d Integer.parseInt(test);","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"            return value \u003e\u003d 0; // Points must be non-negative","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"            return false; // The string was not an integer.","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"    public Points addPoints(int pointsToAdd) {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"        return new Points(this.value + pointsToAdd);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        return Integer.toString(value);","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the integer value of points.","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The integer value of the points.","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    public int getValue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.value;","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean equals(final Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!(other instanceof Points)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points otherPoints \u003d (Points) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.value \u003d\u003d otherPoints.value;","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"        return Integer.hashCode(value);","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":75,"kokerinks":13}},{"path":"src/main/java/seedu/address/model/person/orders/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.model.person.orders;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.model.item.Item.ITEM_NAME_VALIDATION_REGEX;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":" * Represents an order made by a Person","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"public class Order implements Cloneable {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Item name should not be blank\";","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_INVALID_QUANTITY \u003d \"Quantity should be a positive integer\";","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_INVALID_DATETIME \u003d \"Order DateTime is invalid\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"    public final Item item;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    public final int quantity;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"    public final LocalDateTime orderDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"     * Constructs an {@code Order}.","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"     * @param item A valid order","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"    public Order(Item item, int quantity) {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(item);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"        this.item \u003d item;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"        this.orderDateTime \u003d LocalDateTime.now().withNano(0);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"     * Constructs an {@code Order} with a specific {@code LocalDateTime} ordered. Time is rounded down to the second","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"     * @param item A valid order","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"     * @param quantity The quantity of this order","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"     * @param orderDateTime The time of this order","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"    public Order(Item item, int quantity, LocalDateTime orderDateTime) {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(item);","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(orderDateTime);","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"        this.item \u003d item;","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        this.orderDateTime \u003d orderDateTime.withNano(0);","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"        assert(quantity \u003e 0);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"     * Returns true if a given string is a valid item.","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"    public static boolean isValidItems(String test) {","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"        return test.matches(ITEM_NAME_VALIDATION_REGEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"    public String getDateTime() {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"        return orderDateTime.toString().replace(\"T\", \"\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"    public String getItemName() {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"        return item.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"    public int getQuantity() {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"        return quantity;","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"    public int getItemPoints() {","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"        return item.getPoints();","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"        return orderDateTime.toString() + \" \" + item + \" x\" + quantity;","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"    public Order clone() {","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"        return new Order(item, quantity, orderDateTime);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"        return item.equals(otherOrder.item) \u0026\u0026 (quantity \u003d\u003d otherOrder.quantity)","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"                \u0026\u0026 orderDateTime.equals(otherOrder.orderDateTime);","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kokerinks":14,"billyhoce":86}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.MembershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"            new Person(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"                    new Phone(\"87438807\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"                    new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"                    new MembershipPoints(\"450\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"                    getAllergenSet(\"LF\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"                    new Points(\"450\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"                    getOrderArrayList(\"Plain Waffle|150|3|2007-12-03T10:15:30\")),","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"            new Person(","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"                    new Name(\"Bernice Yu\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"                    new Phone(\"99272758\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"                    new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"                    new MembershipPoints(\"1400\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"                    getAllergenSet(\"TN\", \"LF\"), new Points(\"1400\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"                    getOrderArrayList(\"Blueberry Muffin|200|5|2012-03-21T07:45:01\",","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"                            \"Strawberry Muffin|200|2|2014-12-11T13:01:02\")),","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"            new Person(","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"                    new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"                    new Phone(\"93210283\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"                    new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"                    new MembershipPoints(\"300\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"                    getAllergenSet(\"EG\"), new Points(\"300\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"                    getOrderArrayList(\"Chocolate Chip Cookies|300|1|2024-01-01T07:00:00\")),","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"            new Person(","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"                    new Name(\"David Li\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"                    new Phone(\"91031282\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"                    new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"                    new MembershipPoints(\"0\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"                    getAllergenSet(\"PN\"), new Points(\"0\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"                    getOrderArrayList()),","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"            new Person(","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"                    new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"                    new Phone(\"92492021\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"                    new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"                    new MembershipPoints(\"1500\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"                    getAllergenSet(\"V\"), new Points(\"1500\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"                    getOrderArrayList(\"Chocolate Croissant|250|6|2023-06-30T23:23:23\")),","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"            new Person(","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"                    new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"                    new Phone(\"92624417\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"                    new Email(\"royb@example.com\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"                    new MembershipPoints(\"650\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"                    getAllergenSet(\"TN\"), new Points(\"650\"),","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"                    getOrderArrayList(\"Chocolate Waffle|250|1|2023-01-01T13:13:13\",","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"                            \"Cheese Waffle|200|1|2023-01-02T14:14:14\",","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"                            \"Kaya Waffle|200|1|2023-01-03T15:15:15\"))","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"    public static Item[] getSampleCatalogue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"        return new Item[] {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"            new Item(\"Chocolate Croissant\", 250),","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"            new Item(\"Blueberry Muffin\", 200),","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"            new Item(\"Strawberry Muffin\", 200),","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"            new Item(\"Chocolate Muffin\", 100),","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"            new Item(\"Chocolate Chip Cookies\", 300),","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"            new Item(\"Plain Waffle\", 150),","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"            new Item(\"Chocolate Waffle\", 250),","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"            new Item(\"Kaya Waffle\", 200),","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"            new Item(\"Cheese Waffle\", 200),","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"billyhoce"},"content":"        for (Item sampleItem : getSampleCatalogue()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"billyhoce"},"content":"            sampleAb.addItem(sampleItem);","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a allergen set containing the list of strings given.","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":110,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static Set\u003cAllergen\u003e getAllergenSet(String... strings) {","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"kinjalagarwal1810"},"content":"                .map(Allergen::new)","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"billyhoce"},"content":"     * Returns a order arraylist containing the list of orders represented by the list of strings given","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"billyhoce"},"content":"     * @param strings in the format of \"ORDER_ITEMS@ORDER_DATETIME\", where ORDER_ITEMS is any non-empty string,","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"billyhoce"},"content":"     *      * and ORDER_DATETIME is a string that can be parsed by {@code LocalDateTime.parse()}","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"billyhoce"},"content":"    public static ArrayList\u003cOrder\u003e getOrderArrayList(String... strings) {","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"billyhoce"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"billyhoce"},"content":"                .map(str -\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"                    String[] parts \u003d str.split(\"\\\\|\");","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"                    Item newItem \u003d new Item(parts[0], Integer.parseInt(parts[1]));","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"kokerinks"},"content":"                    int newQty \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"kokerinks"},"content":"                    return new Order(newItem, newQty, LocalDateTime.parse(parts[3]));","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"billyhoce"},"content":"                })","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"billyhoce"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kinjalagarwal1810":5,"kokerinks":7,"-":41,"billyhoce":79}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAllergen.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" * Jackson-friendly version of {@link Allergen}.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"class JsonAdaptedAllergen {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    public JsonAdaptedAllergen(String tagName) {","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    public JsonAdaptedAllergen(Allergen source) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        tagName \u003d source.allergenName;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Allergen toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!Allergen.isValidAllergenName(tagName)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new IllegalValueException(Allergen.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new Allergen(tagName);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kinjalagarwal1810":10,"-":38}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":" * JSON-friendly version of {@link Item}.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"public class JsonAdaptedItem {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    private final String name;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    private final String points;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"     * Constructs a {@code JsonAdaptedItem} with the given {@code name} and {@code points}.","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    public JsonAdaptedItem(@JsonProperty(\"name\") String name, @JsonProperty(\"points\") String points) {","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(points);","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        this.points \u003d points;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"     * Converts a given {@code Item} into this class for Jackson use.","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"    public JsonAdaptedItem(Item source) {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(source);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        name \u003d source.getName();","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"        points \u003d String.valueOf(source.getPoints());","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"     * Converts this Jackson-friendly adapted item object into the model\u0027s {@code Item} object.","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"    public Item toModelType() {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        return new Item(name, Integer.parseInt(points));","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"kokerinks":42}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"class JsonAdaptedOrder {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    private final String itemName;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    private final String itemPoints;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    private final String quantity;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"    private final String orderDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given {@code items} and {@code orderDateTime}.","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"itemName\") String itemName,","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"                            @JsonProperty(\"itemPoints\") String itemPoints,","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"                            @JsonProperty(\"quantity\") String quantity,","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"                            @JsonProperty(\"orderDateTime\") String orderDateTime) {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(itemName);","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(itemPoints);","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(orderDateTime);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        this.itemPoints \u003d itemPoints;","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"        this.orderDateTime \u003d orderDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(source);","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"        this.itemName \u003d source.item.getName();","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"        this.itemPoints \u003d String.valueOf(source.item.getPoints());","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"        this.quantity \u003d String.valueOf(source.quantity);","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"        this.orderDateTime \u003d source.orderDateTime.toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"     * Converts this Jackson-friendly adapted order object into the model\u0027s {@code Order} object.","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"        if (!Order.isValidItems(itemName)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"            throw new IllegalValueException(Order.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"            LocalDateTime modelOrderDateTime \u003d LocalDateTime.parse(orderDateTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"            int modelQuantity \u003d Integer.parseInt(quantity);","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"            Item modelItem \u003d new Item(itemName, Integer.parseInt(itemPoints));","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"            return new Order(modelItem, modelQuantity, modelOrderDateTime);","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"            throw new IllegalValueException(Order.MESSAGE_INVALID_DATETIME);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"            throw new IllegalValueException(Order.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"kokerinks":29,"billyhoce":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.AddMemPointsCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.MembershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    private final String membershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final List\u003cJsonAdaptedAllergen\u003e allergens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final String points;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"                             @JsonProperty(\"membershipPts\") String membershipPts,","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"                             @JsonProperty(\"allergens\") List\u003cJsonAdaptedAllergen\u003e allergens,","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"                             @JsonProperty(\"points\") String points,","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"                             @JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"        this.membershipPoints \u003d membershipPts;","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (allergens !\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"            this.allergens.addAll(allergens);","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.points \u003d points;","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"        if (orders !\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"            this.orders.addAll(orders);","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"        membershipPoints \u003d String.valueOf(source.getMembershipPoints().value);","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"        allergens.addAll(source.getAllergens().stream()","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"                .map(JsonAdaptedAllergen::new)","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"        points \u003d String.valueOf(source.getPoints().getValue());","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"        orders.addAll(source.getOrders().stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"                .map(JsonAdaptedOrder::new)","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"        final List\u003cAllergen\u003e personAllergens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"        for (JsonAdaptedAllergen allergen : allergens) {","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"            personAllergens.add(allergen.toModelType());","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"        final List\u003cOrder\u003e personOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"        for (JsonAdaptedOrder order : orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"            personOrders.add(order.toModelType());","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"kokerinks"},"content":"        if (membershipPoints \u003d\u003d null) {","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"kab-dot"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"kokerinks"},"content":"                    MembershipPoints.class.getSimpleName()));","lastModifiedDate":"2024-03-23"},{"lineNumber":134,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"kokerinks"},"content":"        int parsedMembershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"kokerinks"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"kokerinks"},"content":"            parsedMembershipPoints \u003d Integer.parseInt(membershipPoints);","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"kokerinks"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"kokerinks"},"content":"            throw new IllegalValueException(AddMemPointsCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"kokerinks"},"content":"        if (!MembershipPoints.isValidMembershipPoints(parsedMembershipPoints)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"kokerinks"},"content":"            throw new IllegalValueException(AddMemPointsCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":146,"author":{"gitId":"kokerinks"},"content":"        final MembershipPoints modelMembershipPoints \u003d new MembershipPoints(parsedMembershipPoints);","lastModifiedDate":"2024-03-23"},{"lineNumber":147,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (points \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Points.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!Points.isValidPoints(points)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new IllegalValueException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Points modelPoints \u003d new Points(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":157,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Set\u003cAllergen\u003e modelAllergens \u003d new HashSet\u003c\u003e(personAllergens);","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"billyhoce"},"content":"        final ArrayList\u003cOrder\u003e modelOrders \u003d new ArrayList\u003c\u003e(personOrders);","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"kokerinks"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelMembershipPoints,","lastModifiedDate":"2024-03-23"},{"lineNumber":160,"author":{"gitId":"kinjalagarwal1810"},"content":"                modelAllergens, modelPoints, modelOrders);","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kab-dot":3,"kokerinks":22,"kinjalagarwal1810":26,"-":101,"billyhoce":11}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"Items list contains duplicate item(s).\";","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    private final List\u003cJsonAdaptedItem\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons ,","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"                                       @JsonProperty(\"items\") List\u003cJsonAdaptedItem\u003e items) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"        this.items.addAll(items);","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"        items.addAll(source.getItemList().stream().map(JsonAdaptedItem::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"        for (JsonAdaptedItem jsonAdaptedItem : items) {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"            Item item \u003d jsonAdaptedItem.toModelType();","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"            if (addressBook.hasItem(item.getName())) {","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"            addressBook.addItem(jsonAdaptedItem.toModelType());","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kokerinks":15,"-":59}},{"path":"src/main/java/seedu/address/ui/CataloguePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":" * The Catalogue Panel. Contains a TableView that displays","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":" * the {@code Catalogue} in this {@code AddressBook}","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"public class CataloguePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    private static final String FXML \u003d \"CataloguePanel.fxml\";","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    private VBox container;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"    private Label catalogueTitle;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"    private TableView\u003cItem\u003e itemTableView;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"    private TableColumn\u003cItem, String\u003e nameColumn;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"    private TableColumn\u003cItem, Integer\u003e pointsColumn;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"     * Creates a {@code CataloguePanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    public CataloguePanel(ObservableList\u003cItem\u003e itemList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"        super(FXML);","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"        nameColumn.setCellValueFactory(new PropertyValueFactory\u003cItem, String\u003e(\"name\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"        pointsColumn.setCellValueFactory(new PropertyValueFactory\u003cItem, Integer\u003e(\"points\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"        itemTableView.setItems(itemList);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"        itemTableView.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"billyhoce":41}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t13-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"billyhoce":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"public class MainWindow extends UiPart\u003cStage\u003e implements PersonSelectionListener {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    private static final Image BACKGROUND_IMAGE \u003d new Image(\"images/breadyBackground.png\");","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"    private PersonOrdersPanel personOrdersPanel;","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"    private CataloguePanel cataloguePanel;","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"    private StackPane root;","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"    private VBox personOrdersPanelPlaceholder;","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"    private VBox cataloguePanelPlaceholder;","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"    private VBox centerPortionPlaceholder;","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"    private VBox container;","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"billyhoce"},"content":"        personListPanel.setPersonSelectionListener(this);","lastModifiedDate":"2024-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"billyhoce"},"content":"        personOrdersPanel \u003d new PersonOrdersPanel();","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"billyhoce"},"content":"        personOrdersPanelPlaceholder.getChildren().add(personOrdersPanel.getRoot());","lastModifiedDate":"2024-03-23"},{"lineNumber":146,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"billyhoce"},"content":"        cataloguePanel \u003d new CataloguePanel(logic.getCatalogue());","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"billyhoce"},"content":"        cataloguePanelPlaceholder.getChildren().add(cataloguePanel.getRoot());","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":222,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":223,"author":{"gitId":"billyhoce"},"content":"    public void onPersonSelected(Person selectedPerson) {","lastModifiedDate":"2024-03-23"},{"lineNumber":224,"author":{"gitId":"billyhoce"},"content":"        // Update PersonOrdersPanel with details of the selected person","lastModifiedDate":"2024-03-23"},{"lineNumber":225,"author":{"gitId":"billyhoce"},"content":"        personOrdersPanel.updatePersonDetails(selectedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":226,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":194,"billyhoce":33}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"    private Label membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"    private FlowPane allergens;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Label points;","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"        phone.setText(\"Contact no.: \\t\" + person.getPhone().value);","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"        address.setText(\"Home Addr.: \\t\" + person.getAddress().value);","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"        email.setText(\"Email Addr.: \\t\" + person.getEmail().value);","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"        membership.setText(\"Membership Tier: \\t\" + person.getMembershipPoints().toString());","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        person.getAllergens().stream()","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"                .sorted(Comparator.comparing(allergen -\u003e allergen.allergenName))","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"                .forEach(allergen -\u003e allergens.getChildren().add(new Label(allergen.allergenName)));","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"        points.setText(\"Reward Pts: \\t\" + String.valueOf(person.getPoints().value));","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kab-dot":2,"kinjalagarwal1810":2,"kokerinks":4,"-":52,"billyhoce":5}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    private PersonSelectionListener personSelectionListener;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"        // Add event handler to handle clicks on PersonCards","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"        personListView.setOnMouseClicked(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"            @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"                // Get the selected item from the ListView","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"                Person selectedPerson \u003d personListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"                if (selectedPerson !\u003d null) {","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"                    handlePersonCardClick(selectedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"        });","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"     * Sets the {@code PersonSelectionListener} whom will listen to when","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"     * a {@code PersonCard} is clicked in this {@code personListPanel}","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"    public void setPersonSelectionListener(PersonSelectionListener listener) {","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        this.personSelectionListener \u003d listener;","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"     * Inform the {@code personSelectionListener} that a {@code Person} has been selected","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"     * @param selectedPerson {@code Person} that has been selected","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"    private void handlePersonCardClick(Person selectedPerson) {","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"        // Notify the listener that a person is selected","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"        if (personSelectionListener !\u003d null) {","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"            personSelectionListener.onPersonSelected(selectedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":49,"billyhoce":35}},{"path":"src/main/java/seedu/address/ui/PersonOrdersPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":" * The Orders Panel. Contains a title and a TableView that displays","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":" * orders made by the selected {@code Person} in the {@code PersonListPanel}","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"public class PersonOrdersPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    private static final String FXML \u003d \"PersonOrdersPanel.fxml\";","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    private Person person;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"    private VBox container;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"    private Label orderTitle;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"    private TableView\u003cOrder\u003e orderTableView;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    private TableColumn\u003cOrder, String\u003e dateTimeColumn;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"    private TableColumn\u003cOrder, String\u003e itemNameColumn;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    private TableColumn\u003cOrder, Integer\u003e quantityColumn;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"    private TableColumn\u003cOrder, Integer\u003e pointsColumn;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"     * Creates a {@code PersonOrdersPanel} with the given {@code Person}.","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"    public PersonOrdersPanel() {","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"        super(FXML);","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"     * Update this {@code PersonOrdersPanel} to reflect the orders of the given {@code Person}","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"     * @param selectedPerson","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"    public void updatePersonDetails(Person selectedPerson) {","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"        orderTitle.setText(selectedPerson.getName().toString() + \" Orders\");","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        dateTimeColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"dateTime\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"        itemNameColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"itemName\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"        quantityColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"quantity\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"        pointsColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"itemPoints\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"        orderTableView.setItems(FXCollections.observableArrayList(selectedPerson.getOrders()));","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"        orderTableView.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"billyhoce":59}},{"path":"src/main/java/seedu/address/ui/PersonSelectionListener.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":" * This interface represents a listener for person selection events.","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":" * Implementing classes can be notified when a person is selected.","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"public interface PersonSelectionListener {","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"     * Called when a person is selected.","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"     * @param selectedPerson The selected person","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    void onPersonSelected(Person selectedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"billyhoce":17}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    private static final String STARTING_MESSAGE \u003d \"Welcome to SweetRewards!\" + \"\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"            + \"- Type \u0027help --commands\u0027 to see the list of commands available.\" + \"\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"            + \"- Type \u0027help\u0027 to view the user guide online.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"     * Creates a {@code ResultDisplay} with the given {@code String}.","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"        resultDisplay.setText(STARTING_MESSAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kokerinks":8,"-":28}},{"path":"src/main/resources/view/CataloguePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"\u003cVBox fx:id\u003d\"container\" prefHeight\u003d\"400.0\" prefWidth\u003d\"293.0\" VBox.vgrow\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"      \u003cAnchorPane maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"206.0\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"            \u003cLabel fx:id\u003d\"catalogueTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"74.0\" layoutY\u003d\"7.0\" text\u003d\"Catalogue\" textAlignment\u003d\"CENTER\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"               \u003cfont\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"                  \u003cFont name\u003d\"Bodoni MT Black\" size\u003d\"29.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"      \u003cAnchorPane prefHeight\u003d\"505.0\" prefWidth\u003d\"206.0\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"            \u003cTableView fx:id\u003d\"itemTableView\" layoutX\u003d\"3.0\" layoutY\u003d\"7.0\" prefHeight\u003d\"344.0\" prefWidth\u003d\"201.0\" AnchorPane.bottomAnchor\u003d\"15.0\" AnchorPane.leftAnchor\u003d\"15.0\" AnchorPane.rightAnchor\u003d\"15.0\" AnchorPane.topAnchor\u003d\"15.0\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"               \u003ccolumns\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"                  \u003cTableColumn fx:id\u003d\"nameColumn\" minWidth\u003d\"50.0\" prefWidth\u003d\"300.0\" text\u003d\"Item\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"                  \u003cTableColumn fx:id\u003d\"pointsColumn\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" text\u003d\"Points\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"               \u003c/columns\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"            \u003c/TableView\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"   \u003c/children\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"billyhoce":31}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"  \u003cTextField styleClass\u003d\"command-field\" fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"kokerinks":1,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":".root {","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"    /* Use these to easily change color of the components */","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"    -fx-primary-color: rgba(0, 0, 0, 0);","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"    -fx-secondary-color: #432004;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"    -fx-terminal-color: #000000;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"    -fx-contacts-color-odd: #351700;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"    -fx-contacts-color-even: #7E2D00;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    /* Feel free to change other properties/colors below as well \u003d) */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: rgba(0, 0, 0, 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":".table-view {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":".table-view .column-header-background .filler {","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":".table-view .column-header-background{","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: transparent","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":".table-view .column-resize-line {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":".table-view .column-header {","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: -fx-secondary-color;","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"    -fx-border-width: 0 0 0 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"    -fx-border-color: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":".table-view .corner {","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":".table-view .column-header .label{","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":".table-view .table-cell{","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"    -fx-padding: 2 0 2 10px;","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"    -fx-text-background-color: -fx-secondary-color;","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":".table-row-cell: hover {","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #93f9b911;","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"    -fx-text-color: red;","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":".table-row-cell: selected {","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #93f9b911;","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"    -fx-text-background-color: red;","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":".table-row-cell: odd{","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"    -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"    -fx-padding: 0.0em;","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":".table-row-cell: even{","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"    -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"    -fx-padding: 0.0em;","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-contacts-color-even;","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-contacts-color-odd;","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #D16F04;","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"billyhoce"},"content":"    -fx-border-color: black;","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"billyhoce"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":168,"author":{"gitId":"kokerinks"},"content":"     -fx-background-color: -fx-terminal-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"kokerinks"},"content":"     -fx-font-family: \"Courier New\";","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":173,"author":{"gitId":"kokerinks"},"content":"     -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"kokerinks"},"content":"     -fx-border-color: derive(-fx-primary-color, 10%);","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":195,"author":{"gitId":"billyhoce"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"kokerinks"},"content":"    -fx-border-color: derive(-fx-primary-color, 25%);","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"billyhoce"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"kokerinks"},"content":"    -fx-border-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":217,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #fbc27b;","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"billyhoce"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"billyhoce"},"content":"    -fx-font-family: \"Bodoni MT Black\";","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"billyhoce"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"billyhoce"},"content":".menu-item:focused {","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"billyhoce"},"content":"     -fx-background-color: #ffd08f;","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"billyhoce"},"content":".menu:hover{","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #ffd08f;","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"billyhoce"},"content":".menu:showing{","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #ffd08f;","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: -fx-secondary-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #ffd08f;","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"kokerinks"},"content":"  -fx-text-fill: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #ffd08f;","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #ffd08f;","lastModifiedDate":"2024-04-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 25%);","lastModifiedDate":"2024-03-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-03"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: -fx-secondary-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"kokerinks"},"content":"    -fx-font-family: \"Inconsolata\";","lastModifiedDate":"2024-03-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":377,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":383,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: transparent, -fx-terminal-color, transparent, -fx-terminal-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":387,"author":{"gitId":"billyhoce"},"content":"#allergens {","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"billyhoce"},"content":"#allergens .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":393,"author":{"gitId":"billyhoce"},"content":"    -fx-text-fill: -fx-secondary-color;","lastModifiedDate":"2024-04-04"},{"lineNumber":394,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: #ffd08f;","lastModifiedDate":"2024-04-04"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":400,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":401,"author":{"gitId":"billyhoce"},"content":"#container {","lastModifiedDate":"2024-04-03"},{"lineNumber":402,"author":{"gitId":"billyhoce"},"content":"    -fx-background-color: rgba(255, 255, 255, 0.7);","lastModifiedDate":"2024-04-03"},{"lineNumber":403,"author":{"gitId":"billyhoce"},"content":"    -fx-border-color: black;","lastModifiedDate":"2024-04-03"},{"lineNumber":404,"author":{"gitId":"billyhoce"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2024-04-03"},{"lineNumber":405,"author":{"gitId":"billyhoce"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2024-04-03"},{"lineNumber":406,"author":{"gitId":"billyhoce"},"content":"    -fx-background-radius: 20px;","lastModifiedDate":"2024-04-03"},{"lineNumber":407,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":408,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":409,"author":{"gitId":"billyhoce"},"content":"#catalogueTitle, #orderTitle {","lastModifiedDate":"2024-04-03"},{"lineNumber":410,"author":{"gitId":"billyhoce"},"content":"    -fx-font-family: \"Bodoni MT Black\";","lastModifiedDate":"2024-04-03"},{"lineNumber":411,"author":{"gitId":"billyhoce"},"content":"    -fx-font-size: 25px;","lastModifiedDate":"2024-04-03"},{"lineNumber":412,"author":{"gitId":"billyhoce"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-03"},{"lineNumber":413,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kokerinks":32,"-":284,"billyhoce":97}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"SweetRewards\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"         \u003cStackPane fx:id\u003d\"root\" style\u003d\"-fx-background-image: url(\u0027images/breadyBackground.png\u0027); -fx-background-repeat: repeat; -fx-background-size: cover;\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"               \u003cSplitPane dividerPositions\u003d\"0.21762589928057555, 0.8435251798561151\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"                  \u003citems\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"                     \u003cVBox fx:id\u003d\"cataloguePanelPlaceholder\" alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"                           \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"10.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"                     \u003cVBox fx:id\u003d\"centerPortionPlaceholder\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"                                    \u003cVBox fx:id\u003d\"container\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"                                      \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"                              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"                                      \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"                              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"                                      \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"                              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                                      \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"                                 \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"                           \u003cInsets bottom\u003d\"20.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"                     \u003cVBox fx:id\u003d\"personOrdersPanelPlaceholder\" alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"                           \u003cInsets bottom\u003d\"20.0\" left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"                        \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"                  \u003c/items\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"               \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"         \u003c/StackPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":45,"billyhoce":36}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"      \u003cFlowPane fx:id\u003d\"allergens\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"      \u003cLabel fx:id\u003d\"points\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$points\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"      \u003cLabel fx:id\u003d\"membership\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$membership\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kab-dot":1,"kinjalagarwal1810":2,"-":35}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"\u003cVBox style\u003d\"-fx-border-color: black; -fx-border-width: 2;\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"billyhoce":1}},{"path":"src/main/resources/view/PersonOrdersPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"\u003cVBox fx:id\u003d\"container\" prefWidth\u003d\"322.0\" VBox.vgrow\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"    \u003cAnchorPane maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"322.0\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"            \u003cLabel fx:id\u003d\"orderTitle\" alignment\u003d\"CENTER\" layoutX\u003d\"14.0\" layoutY\u003d\"-2.0\" text\u003d\"Click on a member to start\" textAlignment\u003d\"CENTER\" textFill\u003d\"#6b6868\" wrapText\u003d\"true\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"               \u003cfont\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"                  \u003cFont name\u003d\"Bodoni MT Black\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"               \u003c/font\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefWidth\u003d\"252.0\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"            \u003cTableView fx:id\u003d\"orderTableView\" prefWidth\u003d\"301.0\" AnchorPane.bottomAnchor\u003d\"15.0\" AnchorPane.leftAnchor\u003d\"15.0\" AnchorPane.rightAnchor\u003d\"15.0\" AnchorPane.topAnchor\u003d\"15.0\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"              \u003ccolumns\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"                \u003cTableColumn fx:id\u003d\"dateTimeColumn\" minWidth\u003d\"60.0\" prefWidth\u003d\"60.0\" text\u003d\"Date/Time\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"                \u003cTableColumn fx:id\u003d\"itemNameColumn\" prefWidth\u003d\"75.0\" text\u003d\"Item\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"                  \u003cTableColumn fx:id\u003d\"quantityColumn\" minWidth\u003d\"30.0\" prefWidth\u003d\"30.0\" text\u003d\"Qty\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"                  \u003cTableColumn fx:id\u003d\"pointsColumn\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" text\u003d\"Points\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"              \u003c/columns\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"            \u003c/TableView\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"   \u003c/children\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"billyhoce":34}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POINTS_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"        String deleteCommand \u003d DeleteCommand.COMMAND_WORD + \" 9\";","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"kokerinks"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + POINTS_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"kokerinks"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withAllergens().withMembershipPoints(\"0\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kokerinks":5,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"billyhoce"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"billyhoce"},"content":"        public ObservableList\u003cItem\u003e getCatalogue() {","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"billyhoce"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"kokerinks"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"kokerinks"},"content":"        public Item findItem(String name) {","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"kokerinks"},"content":"            return new Item(name, 10);","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"kokerinks"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"kokerinks"},"content":"        public boolean addItem(Item item) {","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"kokerinks"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"kokerinks"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"kab-dot"},"content":"        public boolean hasItem(String itemName) {","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"kab-dot"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"kokerinks"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":186,"author":{"gitId":"kokerinks"},"content":"        public Item removeItem(String name) {","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"kokerinks"},"content":"            return new Item(name, 10);","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kab-dot":7,"kokerinks":16,"-":204,"billyhoce":7}},{"path":"src/test/java/seedu/address/logic/commands/AddItemCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"public class AddItemCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"    public void execute_itemAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"        Item validItem \u003d new Item(\"Bagel\", 5);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"        expectedModel.addItem(validItem);","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"        assertCommandSuccess(new AddItemCommand(validItem), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"                String.format(AddItemCommand.MESSAGE_SUCCESS, validItem), expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"    public void execute_duplicateItem_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"        Item duplicateItem \u003d new Item(\"Croissant\", 10);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"        model.addItem(duplicateItem);","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"        AddItemCommand addItemCommand \u003d new AddItemCommand(duplicateItem);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"        assertCommandFailure(addItemCommand, model, AddItemCommand.MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"        Item apple \u003d new Item(\"Apple\", 5);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"        Item banana \u003d new Item(\"Banana\", 3);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"        AddItemCommand addAppleCommand \u003d new AddItemCommand(apple);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"        AddItemCommand addBananaCommand \u003d new AddItemCommand(banana);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        assertTrue(addAppleCommand.equals(addAppleCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"        // same Item -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"        AddItemCommand addAppleCommandCopy \u003d new AddItemCommand(apple);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"        assertTrue(addAppleCommand.equals(addAppleCommandCopy));","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"        assertFalse(addAppleCommand.equals(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"        assertFalse(addAppleCommand.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"        assertFalse(addAppleCommand.equals(addBananaCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kab-dot":59,"billyhoce":3}},{"path":"src/test/java/seedu/address/logic/commands/AddMemPointsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"public class AddMemPointsCommandTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    private static final int POINTS_TO_ADD_STUB \u003d 10;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withMembershipPoints(\"10\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"        AddMemPointsCommand addMemPointsCommand \u003d new AddMemPointsCommand(firstPerson.getName(), POINTS_TO_ADD_STUB);","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d String.format(AddMemPointsCommand.MESSAGE_ADD_MEMBERSHIP_SUCCESS, POINTS_TO_ADD_STUB,","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"                editedPerson.getName());","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"        System.out.println(expectedModel);","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(addMemPointsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"    public void execute_invalidPersonNameUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"        Name invalidName \u003d new Name(\"Invalid Name\");","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"        AddMemPointsCommand addMemPointsCommand \u003d new AddMemPointsCommand(invalidName, POINTS_TO_ADD_STUB);","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"        assertCommandFailure(addMemPointsCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"kokerinks":45}},{"path":"src/test/java/seedu/address/logic/commands/AddOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.commands.AddOrderCommand.MESSAGE_ITEM_NOT_FOUND;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"public class AddOrderCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    public void constructor_nullName_throwsNullPointerException() {","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"                new AddOrderCommand(null, \"itemName\", 1));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"    public void constructor_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"                new AddOrderCommand(new Name(\"test\"), null, 0));","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"    public void execute_nameMatchesPersonInFilteredPersonList_success() {","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"        String itemName \u003d \"Kaya Toast\";","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"        int points \u003d 200;","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"        model.addItem(new Item(itemName, points));","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"        Name name \u003d new Name(\"benson\");","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"        int quantity \u003d 3;","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime orderDateTime \u003d LocalDateTime.parse(\"2024-01-01T07:00:00\");","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"        AddOrderCommand addOrderToSecondTypicalPerson \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"                new AddOrderCommand(name, itemName, quantity, orderDateTime);","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"        Person bensonWithAddedOrder \u003d new PersonBuilder(BENSON).withOrders(","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"                // existing orders","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"                \"Cookies|100|5|2012-03-21T07:45:01\",","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"                \"Cupcake|150|2|2014-12-11T13:01:02\",","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"                // new order","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"                String.format(\"%s|%d|%d|%s\", itemName, points, quantity, orderDateTime))","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"                // existing 10 points + 200 * 3 quantity","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"                .withMembershipPoints(\"610\")","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"                .withPoints(\"670\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"        expectedModel.addItem(new Item(itemName, points));","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"        expectedModel.setPerson(BENSON, bensonWithAddedOrder);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"        assertCommandSuccess(addOrderToSecondTypicalPerson, model,","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"                \"Added order to Person: Benson Meier\", expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"    public void execute_nameDoesNotMatchAnyPersonInFilteredPersonList_throwsCommandException() {","lastModifiedDate":"2024-04-05"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"        Name name \u003d new Name(\"nobodyShouldMatchThis\");","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"        String itemName \u003d \"Kaya Toast\";","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"        int quantity \u003d 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime orderDateTime \u003d LocalDateTime.parse(\"2024-01-01T07:00:00\");","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"        AddOrderCommand addOrderToSecondTypicalPerson \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"                new AddOrderCommand(name, itemName, quantity, orderDateTime);","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_PERSON_NOT_FOUND, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"                addOrderToSecondTypicalPerson.execute(model));","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"    public void execute_itemNotInAddressBook_throwsCommandException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"        String itemName \u003d \"Non-existent Item\";","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"        int quantity \u003d 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime orderDateTime \u003d LocalDateTime.parse(\"2024-01-01T07:00:00\");","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"        AddOrderCommand addOrderToSecondTypicalPerson \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"billyhoce"},"content":"                new AddOrderCommand(ALICE.getName(), itemName, quantity, orderDateTime);","lastModifiedDate":"2024-04-05"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"        assertThrows(CommandException.class, MESSAGE_ITEM_NOT_FOUND, () -\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"                addOrderToSecondTypicalPerson.execute(model));","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"    public void generateSuccessMessage_properPersonPassedIn_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"billyhoce"},"content":"        Person personPassedIn \u003d ALICE;","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"billyhoce"},"content":"        String expectedMessage \u003d \"Added order to Person: Alice Pauline\";","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"billyhoce"},"content":"        assertEquals(AddOrderCommand.generateSuccessMessage(personPassedIn), expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"        Name johnny1 \u003d new Name(\"Johnny\");","lastModifiedDate":"2024-04-05"},{"lineNumber":117,"author":{"gitId":"billyhoce"},"content":"        Name johnny2 \u003d new Name(\"Johnny\");","lastModifiedDate":"2024-04-05"},{"lineNumber":118,"author":{"gitId":"billyhoce"},"content":"        Name walker \u003d new Name(\"Walker\");","lastModifiedDate":"2024-04-05"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"        String itemName1 \u003d \"Kaya Toast\";","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"        int quantity1 \u003d 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime orderDateTime1 \u003d LocalDateTime.parse(\"2024-01-01T07:00:00\");","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"        String itemName2 \u003d \"Kaya Toast\";","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"        int quantity2 \u003d 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime orderDateTime2 \u003d LocalDateTime.parse(\"2024-01-01T07:00:00\");","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"kokerinks"},"content":"        String itemName3 \u003d \"Cookies\";","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"kokerinks"},"content":"        int quantity3 \u003d 5;","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime orderDateTime3 \u003d LocalDateTime.parse(\"2012-03-21T07:45:01\");","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"kokerinks"},"content":"        AddOrderCommand addJohnnyKayatoastCommand1 \u003d new AddOrderCommand(johnny1, itemName1, quantity1, orderDateTime1);","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"kokerinks"},"content":"        AddOrderCommand addJohnnyKayatoastCommand2 \u003d new AddOrderCommand(johnny2, itemName2, quantity2, orderDateTime2);","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"kokerinks"},"content":"        AddOrderCommand addJohnnyCookiesCommand \u003d new AddOrderCommand(johnny1, itemName3, quantity3, orderDateTime3);","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"kokerinks"},"content":"        AddOrderCommand addWalkerCookiesCommand \u003d new AddOrderCommand(walker, itemName3, quantity3, orderDateTime3);","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"billyhoce"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"billyhoce"},"content":"        assertTrue(addJohnnyKayatoastCommand1.equals(addJohnnyKayatoastCommand1));","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"billyhoce"},"content":"        // same items and orderDateTime -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"billyhoce"},"content":"        assertTrue(addJohnnyKayatoastCommand1.equals(addJohnnyKayatoastCommand2));","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"billyhoce"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"billyhoce"},"content":"        assertFalse(addJohnnyKayatoastCommand1.equals(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"billyhoce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"billyhoce"},"content":"        assertFalse(addJohnnyKayatoastCommand1.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"billyhoce"},"content":"        // different personNamePredicate -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"billyhoce"},"content":"        assertFalse(addJohnnyCookiesCommand.equals(addWalkerCookiesCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"billyhoce"},"content":"        // different items -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"billyhoce"},"content":"        assertFalse(addJohnnyKayatoastCommand1.equals(addJohnnyCookiesCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kokerinks":55,"billyhoce":100}},{"path":"src/test/java/seedu/address/logic/commands/AddPointsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddPointsCommand.","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddPointsCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String POINTS_STUB \u003d \"20\";","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute_addPointsUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        Integer newPoints \u003d Integer.parseInt(POINTS_STUB) + firstPerson.getPoints().getValue();","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withPoints(Integer.toString(newPoints)).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand addPointsCommand \u003d new AddPointsCommand(firstPerson.getName(), new Points(POINTS_STUB));","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        String expectedMessage \u003d String.format(AddPointsCommand.MESSAGE_ADDPOINTS_SUCCESS, POINTS_STUB,","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"                firstPerson.getName());","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertCommandSuccess(addPointsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute_invalidPersonNameUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name outOfBoundName \u003d new Name(\"Nonexistent Name\");","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand addPointsCommand \u003d new AddPointsCommand(outOfBoundName, new Points(POINTS_STUB));","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"        assertCommandFailure(addPointsCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Name firstPersonName \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getName();","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        final AddPointsCommand standardCommand \u003d new AddPointsCommand(firstPersonName, new Points(POINTS_STUB));","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand commandWithSameValues \u003d new AddPointsCommand(firstPersonName, new Points(POINTS_STUB));","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name secondPersonName \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()).getName();","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(new AddPointsCommand(secondPersonName, new Points(POINTS_STUB))));","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different points -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(new AddPointsCommand(firstPersonName, new Points(\"30\"))));","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":75,"kokerinks":3,"billyhoce":3}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    public void execute_withoutForce_success() {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_CONFIRM, expectedModel);","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new ClearCommand(true), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new ClearCommand(true), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kokerinks":9,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGENS;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMSHIP_PTS;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"    public static final String VALID_MSHIP_AMY \u003d \"0\";","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"    public static final String VALID_MSHIP_BOB \u003d \"0\";","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String VALID_ALLERGEN_GF \u003d \"GF\";","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String VALID_ALLERGEN_LF \u003d \"LF\";","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String VALID_POINTS_AMY \u003d \"50\";","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String VALID_POINTS_BOB \u003d \"75\";","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"    public static final String VALID_ORDER_COOKIES \u003d \"Cookies\";","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"    public static final String MEMBERSHIPPOINTS_DESC_AMY \u003d \" \" + PREFIX_MEMSHIP_PTS + VALID_MSHIP_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"    public static final String MEMBERSHIPPOINTS_DESC_BOB \u003d \" \" + PREFIX_MEMSHIP_PTS + VALID_MSHIP_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String ALLERGEN_DESC_LF \u003d \" \" + PREFIX_ALLERGENS + VALID_ALLERGEN_LF;","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String ALLERGEN_DESC_GF \u003d \" \" + PREFIX_ALLERGENS + VALID_ALLERGEN_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String POINTS_DESC_AMY \u003d \" \" + PREFIX_POINTS + VALID_POINTS_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String POINTS_DESC_BOB \u003d \" \" + PREFIX_POINTS + VALID_POINTS_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"    public static final String ORDER_ITEM_COOKIES \u003d \" \" + PREFIX_ITEM + VALID_ORDER_COOKIES;","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String INVALID_ALLERGEN_DESC \u003d \" \" + PREFIX_ALLERGENS + \"TN*\"; // \u0027*\u0027 not allowed in allergens","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String INVALID_POINTS_DESC \u003d \" \" + PREFIX_POINTS + \"-20\"; // negative int not allows in points","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"                .withAllergens(VALID_ALLERGEN_LF).withPoints(VALID_POINTS_AMY).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"                .withAllergens(VALID_ALLERGEN_GF, VALID_ALLERGEN_LF).withPoints(VALID_POINTS_BOB).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kinjalagarwal1810":14,"kokerinks":5,"-":118,"billyhoce":3}},{"path":"src/test/java/seedu/address/logic/commands/DeleteItemCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"public class DeleteItemCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    private Model model;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"    public void execute_validItemName_deleteSuccessful() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"        Item validItem \u003d new Item(\"Bagel\", 5);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"        model.addItem(validItem);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"        expectedModel.removeItem(validItem.getName());","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"        assertCommandSuccess(new DeleteItemCommand(validItem.getName()), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"                String.format(DeleteItemCommand.MESSAGE_DELETE_ITEM_SUCCESS, validItem.getName()), expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"    public void execute_invalidItemName_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"        DeleteItemCommand deleteItemCommand \u003d new DeleteItemCommand(\"NonexistentItem\");","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"        assertCommandFailure(deleteItemCommand, model, DeleteItemCommand.MESSAGE_ITEM_NOT_FOUND);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"        DeleteItemCommand deleteBagelCommand \u003d new DeleteItemCommand(\"Bagel\");","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        DeleteItemCommand deleteCroissantCommand \u003d new DeleteItemCommand(\"Croissant\");","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"        assertTrue(deleteBagelCommand.equals(deleteBagelCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        DeleteItemCommand deleteBagelCommandCopy \u003d new DeleteItemCommand(\"Bagel\");","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"        assertTrue(deleteBagelCommand.equals(deleteBagelCommandCopy));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"        assertFalse(deleteBagelCommand.equals(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"        assertFalse(deleteBagelCommand.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"        assertFalse(deleteBagelCommand.equals(deleteCroissantCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kab-dot":61,"kokerinks":1,"billyhoce":2}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"                .withAllergens(VALID_ALLERGEN_GF).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"                .withPhone(VALID_PHONE_BOB).withAllergens(VALID_ALLERGEN_GF).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kinjalagarwal1810":3,"-":179,"billyhoce":2}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different allergens -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAllergens(VALID_ALLERGEN_GF).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", allergens\u003d\"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"                + editPersonDescriptor.getAllergens().orElse(null) + \", points\u003d\"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"                + editPersonDescriptor.getPoints().orElse(null) + \", membershipPoints\u003d\"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"                + editPersonDescriptor.getMembershipPoints().orElse(null) + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kinjalagarwal1810":5,"kokerinks":2,"-":66}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d FindCommand.MESSAGE_NO_PERSONS_FOUND;","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kokerinks":2,"-":88}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    public void execute_helpCommands_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpCommand.COMMAND_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new HelpCommand(\"commands\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kokerinks":6,"-":20}},{"path":"src/test/java/seedu/address/logic/commands/RedeemPointsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RedeemPointsCommand.","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"public class RedeemPointsCommandTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String POINTS_TO_REDEEM \u003d \"10\";","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute_redeemPointsUnfilteredList_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        Integer newPoints \u003d firstPerson.getPoints().getValue() - Integer.parseInt(POINTS_TO_REDEEM);","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withPoints(Integer.toString(newPoints)).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        RedeemPointsCommand redeemPointsCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"                new RedeemPointsCommand(firstPerson.getName(), new Points(POINTS_TO_REDEEM));","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        String expectedMessage \u003d String.format(RedeemPointsCommand.MESSAGE_REDEEMPOINTS_SUCCESS, POINTS_TO_REDEEM,","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"                firstPerson.getName());","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertCommandSuccess(redeemPointsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute_invalidPersonNameUnfilteredList_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name outOfBoundName \u003d new Name(\"Nonexistent Name\");","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        RedeemPointsCommand redeemPointsCommand \u003d new RedeemPointsCommand(outOfBoundName, new Points(POINTS_TO_REDEEM));","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertCommandFailure(redeemPointsCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void equals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Name firstPersonName \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getName();","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        final RedeemPointsCommand standardCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"                new RedeemPointsCommand(firstPersonName, new Points(POINTS_TO_REDEEM));","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"        RedeemPointsCommand commandWithSameValues \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"                new RedeemPointsCommand(firstPersonName, new Points(POINTS_TO_REDEEM));","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name secondPersonName \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()).getName();","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(new RedeemPointsCommand(secondPersonName, new Points(POINTS_TO_REDEEM))));","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different points -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(new RedeemPointsCommand(firstPersonName, new Points(\"20\"))));","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"kinjalagarwal1810":84}},{"path":"src/test/java/seedu/address/logic/commands/SeedDataCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"public class SeedDataCommandTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    private static final Person[] samplePersons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    private static final Item[] sampleCatalogue \u003d SampleDataUtil.getSampleCatalogue();","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"        for (Person person: samplePersons) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"            expectedModel.addPerson(person);","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"        for (Item item : sampleCatalogue) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"            expectedModel.addItem(item);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new SeedDataCommand(), model, SeedDataCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    public void execute_addressBookWithSomeContacts_success() {","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"        model.addPerson(samplePersons[0]);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"        model.addPerson(samplePersons[1]);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"        model.addPerson(samplePersons[3]);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"        model.addItem(sampleCatalogue[0]);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"        model.addItem(sampleCatalogue[1]);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"        model.addItem(sampleCatalogue[3]);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"        // pre-existing contacts","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"        expectedModel.addPerson(samplePersons[0]);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"        expectedModel.addPerson(samplePersons[1]);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"        expectedModel.addPerson(samplePersons[3]);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"        // pre-existing items","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        expectedModel.addItem(sampleCatalogue[0]);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"        expectedModel.addItem(sampleCatalogue[1]);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"        expectedModel.addItem(sampleCatalogue[3]);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"        // new contacts added","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"        for (int i \u003d 0; i \u003c samplePersons.length; i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"            if (i !\u003d 0 \u0026\u0026 i !\u003d 1 \u0026\u0026 i !\u003d 3) {","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"                expectedModel.addPerson(samplePersons[i]);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"        // new items added","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"        for (int i \u003d 0; i \u003c sampleCatalogue.length; i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"            if (i !\u003d 0 \u0026\u0026 i !\u003d 1 \u0026\u0026 i !\u003d 3) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"                expectedModel.addItem(sampleCatalogue[i]);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new SeedDataCommand(), model, SeedDataCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"    public void execute_addressBookWithAllContactsNoCatalogue_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"        for (Person person: samplePersons) {","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"            model.addPerson(person);","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"        for (Person person: samplePersons) {","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"            expectedModel.addPerson(person);","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"        for (Item item : sampleCatalogue) {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"            expectedModel.addItem(item);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        //Command should succeed as catalogue has not been added","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"        assertCommandSuccess(new SeedDataCommand(), model, SeedDataCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"    public void execute_addressBookWithAllContactsAndCatalogue_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"        for (Person person: samplePersons) {","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"            model.addPerson(person);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"        for (Item item : sampleCatalogue) {","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"billyhoce"},"content":"            model.addItem(item);","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"billyhoce"},"content":"        //Command should not succeed as all persons and catalogue exist","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"        assertCommandFailure(new SeedDataCommand(), model, SeedDataCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"kokerinks":50,"billyhoce":56}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ALLERGEN_DESC_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ALLERGEN_DESC_LF;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ALLERGEN_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_POINTS_DESC;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POINTS_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POINTS_DESC_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_LF;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withAllergens(VALID_ALLERGEN_LF).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ADDRESS_DESC_BOB + ALLERGEN_DESC_LF + POINTS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withAllergens(VALID_ALLERGEN_LF, VALID_ALLERGEN_GF)","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + ALLERGEN_DESC_GF + ALLERGEN_DESC_LF + POINTS_DESC_BOB,","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ADDRESS_DESC_BOB + ALLERGEN_DESC_LF + POINTS_DESC_BOB;","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"        // multiple points","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, POINTS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POINTS));","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + POINTS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"                        PREFIX_PHONE, PREFIX_POINTS));","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"kinjalagarwal1810"},"content":"        // invalid points","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, INVALID_POINTS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"kinjalagarwal1810"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POINTS));","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"kinjalagarwal1810"},"content":"        // invalid points","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_POINTS_DESC,","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"kinjalagarwal1810"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POINTS));","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person expectedPersonTags \u003d new PersonBuilder(AMY).withAllergens().build();","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":155,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + POINTS_DESC_AMY,","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"kinjalagarwal1810"},"content":"                new AddCommand(expectedPersonTags));","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":188,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ALLERGEN_DESC_GF + ALLERGEN_DESC_LF, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ALLERGEN_DESC_GF + ALLERGEN_DESC_LF, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ALLERGEN_DESC_GF + ALLERGEN_DESC_LF, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":200,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ALLERGEN_DESC_GF + ALLERGEN_DESC_LF, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"kinjalagarwal1810"},"content":"                + INVALID_ALLERGEN_DESC + VALID_ALLERGEN_LF, Allergen.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":212,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ADDRESS_DESC_BOB + ALLERGEN_DESC_GF + ALLERGEN_DESC_LF,","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kinjalagarwal1810":41,"-":174}},{"path":"src/test/java/seedu/address/logic/parser/AddItemCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.AddItemCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"public class AddItemCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"    private AddItemCommandParser parser \u003d new AddItemCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"        String expectedItemName \u003d \"Bagel\";","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"        int expectedPoints \u003d 5;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"        Item expectedItem \u003d new Item(expectedItemName, expectedPoints);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ITEM + expectedItemName + \" \" + PREFIX_POINTS + expectedPoints,","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"                new AddItemCommand(expectedItem));","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"    public void parse_missingItemName_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d AddItemCommand.INVALID_COMMAND_FORMAT + \"\\n\" + AddItemCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" \" + PREFIX_POINTS + \"5\", expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"    public void parse_missingPoints_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"        String expectedMessage \u003d AddItemCommand.INVALID_COMMAND_FORMAT + \"\\n\" + AddItemCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ITEM + \"Bagel\", expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"    public void parse_invalidPoints_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"        String expectedMessage \u003d AddItemCommand.INVALID_COMMAND_FORMAT + \"\\n\" + AddItemCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ITEM + \"Bagel \" + PREFIX_POINTS + \"abc\", expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"    public void parse_invalidItemName_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        String expectedMessage \u003d Item.MESSAGE_CONSTRAINTS + \"\\n\" + AddItemCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"        // Assuming you have validation for item names","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ITEM + \"123 \" + PREFIX_POINTS + \"5\", expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"    public void parse_pointsNoPrefix_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"        String expectedMessage \u003d AddItemCommand.INVALID_COMMAND_FORMAT + \"\\n\" + AddItemCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ITEM + \"Bagel 5\", expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"    public void parse_noInput_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"        String expectedMessage \u003d AddItemCommand.INVALID_COMMAND_FORMAT + \"\\n\" + AddItemCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kab-dot":61,"kokerinks":1}},{"path":"src/test/java/seedu/address/logic/parser/AddMemPointsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMSHIP_PTS;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.AddMemPointsCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"public class AddMemPointsCommandParserTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    private AddMemPointsCommandParser parser \u003d new AddMemPointsCommandParser();","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"        Name expectedName \u003d new Name(\"Alice\");","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"        int expectedMembershipPoints \u003d 10;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"        assertParseSuccess(parser, \" n/Alice \" + PREFIX_MEMSHIP_PTS + \"10\",","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"                new AddMemPointsCommand(expectedName, expectedMembershipPoints));","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    public void parse_missingName_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemPointsCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" n/ \" + PREFIX_MEMSHIP_PTS + \"10\", expectedMessage);","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"    public void parse_missingMembershipPoints_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d AddMemPointsCommand.INVALID_COMMAND_FORMAT + \"\\n\" + AddMemPointsCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" n/Alice\", expectedMessage);","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidMembershipPoints_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d AddMemPointsCommand.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" n/Alice \" + PREFIX_MEMSHIP_PTS + \"abc\", expectedMessage);","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidName_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemPointsCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"        // name is space only","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" n/  \" + PREFIX_MEMSHIP_PTS + \"10\", expectedMessage);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidPrefix_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d AddMemPointsCommand.INVALID_COMMAND_FORMAT + \"\\n\" + AddMemPointsCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" n/Alice p/10\", expectedMessage);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"    public void parse_pointsNoPrefix_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d AddMemPointsCommand.INVALID_COMMAND_FORMAT + \"\\n\" + AddMemPointsCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" n/Alice 10\", expectedMessage);","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"    public void parse_noInput_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d AddMemPointsCommand.INVALID_COMMAND_FORMAT + \"\\n\" + AddMemPointsCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"kab-dot":7,"kokerinks":60}},{"path":"src/test/java/seedu/address/logic/parser/AddOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ORDER_ITEM_COOKIES;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ORDER_COOKIES;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"public class AddOrderCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"    private AddOrderCommandParser parser \u003d new AddOrderCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"            AddOrderCommand actualCommand \u003d parser.parse(NAME_DESC_BOB + ORDER_ITEM_COOKIES);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"            AddOrderCommand expectedCommand \u003d new AddOrderCommand(new Name(VALID_NAME_BOB), VALID_ORDER_COOKIES, 1);","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"            assertEquals(actualCommand, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"            fail(\"Invalid userInput\");","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"    public void parse_prefixMissing_fails() {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"                        AddOrderCommand.MESSAGE_USAGE), () -\u003e parser.parse(NAME_DESC_BOB));","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"    public void parse_invalidItemName_fails() {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"        assertThrows(ParseException.class, Order.MESSAGE_CONSTRAINTS, () -\u003e parser.parse(NAME_DESC_BOB + \" i/\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"    public void parse_invalidQuantity_fails() {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"                Order.MESSAGE_INVALID_QUANTITY, () -\u003e parser.parse(NAME_DESC_BOB + ORDER_ITEM_COOKIES + \" q/-1\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kokerinks":1,"billyhoce":50}},{"path":"src/test/java/seedu/address/logic/parser/AddPointsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.AddPointsCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddPointsCommandParserTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    private AddPointsCommandParser parser \u003d new AddPointsCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Successful scenario where both name and points are provided","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name expectedName \u003d new Name(\"Alice\");","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points expectedPoints \u003d new Points(\"50\");","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand expectedCommand \u003d new AddPointsCommand(expectedName, expectedPoints);","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice \" + PREFIX_POINTS + \"50\", expectedCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Missing name prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \" Alice \" + PREFIX_POINTS + \" 50\",","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Missing points prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, PREFIX_NAME + \" Alice \" + \" 50\",","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Missing all fields","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" 1-lice \" + PREFIX_POINTS + \" 50\",","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"                Name.MESSAGE_CONSTRAINTS); // Name.MESSAGE_CONSTRAINTS contains the message for invalid names","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Invalid points","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" Alice \" + PREFIX_POINTS + \" -50\",","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"                Points.MESSAGE_CONSTRAINTS); // Points.MESSAGE_CONSTRAINTS contains the message for invalid points","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"    public void parse_pointsZero_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" Alice \" + PREFIX_POINTS + \" 0\",","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"                AddPointsCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":50,"kokerinks":9}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddPointsCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.RedeemPointsCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"        EditCommand expectedCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"    public void parseCommand_addPoints() throws Exception {","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Name name \u003d new Name(\"Alice\");","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Points points \u003d new Points(\"50\");","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"        String input \u003d AddPointsCommand.COMMAND_WORD + \" \" + PREFIX_NAME + \" \" + name.fullName + \" \" + PREFIX_POINTS","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"                + \" \" + points.value;","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand command \u003d (AddPointsCommand) parser.parseCommand(input);","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(new AddPointsCommand(name, points), command);","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"    public void parseCommand_addMemPoints() throws Exception {","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"        final Name name \u003d new Name(\"Alice\");","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"        final int points \u003d 50;","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"        String input \u003d AddPointsCommand.COMMAND_WORD + \" \" + PREFIX_NAME + \" \" + name.fullName + \" \" + PREFIX_POINTS","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"                + \" \" + points;","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"        AddPointsCommand command \u003d (AddPointsCommand) parser.parseCommand(input);","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"        assertEquals(new AddPointsCommand(name, new Points(Integer.toString(points))), command);","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"    public void parseCommand_addOrder() throws Exception {","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"        AddOrderCommand command \u003d (AddOrderCommand) parser.parseCommand(\"addorder n/Amy Bee i/Cupcake q/1\");","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"billyhoce"},"content":"        Name name \u003d new Name(VALID_NAME_AMY);","lastModifiedDate":"2024-04-05"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"        String itemName \u003d \"Cupcake\";","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"        int quantity \u003d 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"billyhoce"},"content":"        assertEquals(new AddOrderCommand(name, itemName, quantity), command);","lastModifiedDate":"2024-04-05"},{"lineNumber":127,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parseCommand_redeemPoints() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Name name \u003d new Name(\"Alice\");","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Points points \u003d new Points(\"50\"); // Assuming 50 points to be redeemed","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"kinjalagarwal1810"},"content":"        String input \u003d RedeemPointsCommand.COMMAND_WORD + \" \" + PREFIX_NAME + \" \" + name.fullName + \" \" + PREFIX_POINTS","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"kinjalagarwal1810"},"content":"                + \" \" + points.value;","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"kinjalagarwal1810"},"content":"        RedeemPointsCommand command \u003d (RedeemPointsCommand) parser.parseCommand(input);","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(new RedeemPointsCommand(name, points), command);","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kinjalagarwal1810":26,"kokerinks":17,"-":99,"billyhoce":8}},{"path":"src/test/java/seedu/address/logic/parser/ClearCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"public class ClearCommandParserTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    private ClearCommandParser parser \u003d new ClearCommandParser();","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" --force\", new ClearCommand(true));","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    public void parse_noFieldsPresent_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \"\", new ClearCommand(false));","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidFieldsPresent_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" --force --force\", new ClearCommand(true));","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidFieldsPresent_success2() {","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" -force\", new ClearCommand(false));","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidFieldsPresent_success3() {","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" -f\", new ClearCommand(false));","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kokerinks":38}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ALLERGEN_DESC_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ALLERGEN_DESC_LF;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ALLERGEN_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMBERSHIPPOINTS_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_LF;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MSHIP_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGENS;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_ALLERGENS;","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ALLERGEN_DESC, Allergen.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \"1\" + ALLERGEN_DESC_LF + ALLERGEN_DESC_GF + TAG_EMPTY, Allergen.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \"1\" + ALLERGEN_DESC_LF + TAG_EMPTY + ALLERGEN_DESC_GF, Allergen.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + ALLERGEN_DESC_LF + ALLERGEN_DESC_GF, Allergen.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"kinjalagarwal1810"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + ALLERGEN_DESC_GF","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"kinjalagarwal1810"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + ALLERGEN_DESC_LF;","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"kinjalagarwal1810"},"content":"                .withAllergens(VALID_ALLERGEN_GF, VALID_ALLERGEN_LF).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"billyhoce"},"content":"        // membership points","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"billyhoce"},"content":"        userInput \u003d targetIndex.getOneBased() + MEMBERSHIPPOINTS_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"billyhoce"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withMemPts(VALID_MSHIP_AMY).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"billyhoce"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"billyhoce"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"kinjalagarwal1810"},"content":"        userInput \u003d targetIndex.getOneBased() + ALLERGEN_DESC_LF;","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"kinjalagarwal1810"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAllergens(VALID_ALLERGEN_LF).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"kokerinks"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ALLERGEN_DESC_LF + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + ALLERGEN_DESC_LF","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"kinjalagarwal1810"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + ALLERGEN_DESC_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"kinjalagarwal1810"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withAllergens().build();","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kinjalagarwal1810":20,"kokerinks":1,"-":187,"billyhoce":8}},{"path":"src/test/java/seedu/address/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    public void parse_validArgs_returnsHelpCommand() throws ParseException {","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"        HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"        assertEquals(parser.parse(\"\").getClass(), HelpCommand.class);","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"        assertEquals(parser.parse(\" --commands\").getClass(), HelpCommand.class);","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"        HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"-invalid\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"kokerinks":26}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.MembershipPoints;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"    private static final String INVALID_MEM_POINTS \u003d \"T1\";","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"    private static final String VALID_MEM_POINTS \u003d \"10\";","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAllergen(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAllergen(INVALID_TAG));","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"kinjalagarwal1810"},"content":"        Allergen expectedAllergen \u003d new Allergen(VALID_TAG_1);","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(expectedAllergen, ParserUtil.parseAllergen(VALID_TAG_1));","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"kinjalagarwal1810"},"content":"        Allergen expectedAllergen \u003d new Allergen(VALID_TAG_1);","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(expectedAllergen, ParserUtil.parseAllergen(tagWithWhitespace));","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAllergens(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAllergens(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(ParserUtil.parseAllergens(Collections.emptyList()).isEmpty());","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"kinjalagarwal1810"},"content":"        Set\u003cAllergen\u003e actualAllergenSet \u003d ParserUtil.parseAllergens(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"kinjalagarwal1810"},"content":"        Set\u003cAllergen\u003e expectedAllergenSet \u003d new HashSet\u003cAllergen\u003e(Arrays.asList(new Allergen(VALID_TAG_1),","lastModifiedDate":"2024-03-26"},{"lineNumber":198,"author":{"gitId":"kinjalagarwal1810"},"content":"                new Allergen(VALID_TAG_2)));","lastModifiedDate":"2024-03-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(expectedAllergenSet, actualAllergenSet);","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":203,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":204,"author":{"gitId":"kokerinks"},"content":"    public void parseMemPointsToAdd_invalidPointsToAdd_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":205,"author":{"gitId":"kokerinks"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMemPointsToAdd(INVALID_MEM_POINTS));","lastModifiedDate":"2024-03-23"},{"lineNumber":206,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":207,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":208,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":209,"author":{"gitId":"kokerinks"},"content":"    public void parseMemPointsToAdd_validPointsToAdd_success() throws Exception {","lastModifiedDate":"2024-03-23"},{"lineNumber":210,"author":{"gitId":"kokerinks"},"content":"        int expectedPointsToAdd \u003d Integer.parseInt(VALID_MEM_POINTS);","lastModifiedDate":"2024-03-23"},{"lineNumber":211,"author":{"gitId":"kokerinks"},"content":"        assertEquals(expectedPointsToAdd, ParserUtil.parseMemPointsToAdd(VALID_MEM_POINTS));","lastModifiedDate":"2024-03-23"},{"lineNumber":212,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":213,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":214,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":215,"author":{"gitId":"kokerinks"},"content":"    public void parseMembershipPoints_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":216,"author":{"gitId":"kokerinks"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMembershipPoints(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":217,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":218,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":219,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":220,"author":{"gitId":"kokerinks"},"content":"    public void parseMembershipPoints_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"kokerinks"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMembershipPoints(INVALID_MEM_POINTS));","lastModifiedDate":"2024-04-01"},{"lineNumber":222,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":223,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":224,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":225,"author":{"gitId":"kokerinks"},"content":"    public void parseMembershipPoints_validValueWithoutWhitespace_returnsMembershipPoints() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":226,"author":{"gitId":"kokerinks"},"content":"        MembershipPoints expectedMembershipPoints \u003d new MembershipPoints(Integer.parseInt(VALID_MEM_POINTS));","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"kokerinks"},"content":"        assertEquals(expectedMembershipPoints, ParserUtil.parseMembershipPoints(VALID_MEM_POINTS));","lastModifiedDate":"2024-04-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kinjalagarwal1810":14,"kokerinks":31,"-":184}},{"path":"src/test/java/seedu/address/logic/parser/RedeemPointsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.RedeemPointsCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"public class RedeemPointsCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    private RedeemPointsCommandParser parser \u003d new RedeemPointsCommandParser();","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Successful scenario where both name and points are provided","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name expectedName \u003d new Name(\"Alice\");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points expectedPoints \u003d new Points(\"50\"); // Assuming 50 points to be redeemed","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        RedeemPointsCommand expectedCommand \u003d new RedeemPointsCommand(expectedName, expectedPoints);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice \" + PREFIX_POINTS + \"50\", expectedCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Missing name prefix","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \" Alice \" + PREFIX_POINTS + \" 50\",","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RedeemPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Missing points prefix","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, PREFIX_NAME + \" Alice \" + \" 50\",","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RedeemPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Missing all fields","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RedeemPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Invalid name","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" 1-lice \" + PREFIX_POINTS + \" 50\",","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"                Name.MESSAGE_CONSTRAINTS); // Use the Name.MESSAGE_CONSTRAINTS for invalid names","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Invalid points (e.g., negative points)","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" Alice \" + PREFIX_POINTS + \" -50\",","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"                Points.MESSAGE_CONSTRAINTS); // Use the Points.MESSAGE_CONSTRAINTS for invalid points","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_pointsZero_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Redeeming zero points is likely not allowed in your application\u0027s logic","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" Alice \" + PREFIX_POINTS + \" 0\",","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"                RedeemPointsCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"kinjalagarwal1810":59}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withAllergens(VALID_ALLERGEN_GF)","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withAllergens(VALID_ALLERGEN_GF)","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"kokerinks"},"content":"    public void removeItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.removeItem(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"    public void removeItem_itemNotInAddressBook_returnsNull() {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"        assertTrue(addressBook.removeItem(\"nonexistent\") \u003d\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"    public void removeItem_itemInAddressBook_returnsItem() {","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"        Item item \u003d new Item(\"item\", 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"        addressBook.addItem(item);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"        assertTrue(addressBook.removeItem(\"item\").equals(item));","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"    public void hasItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasItem(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"    public void hasItem_itemNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"        assertFalse(addressBook.hasItem(\"nonexistent\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"    public void hasItem_itemInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"        addressBook.addItem(new Item(\"item\", 1));","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"        assertTrue(addressBook.hasItem(\"item\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"        String expected \u003d AddressBook.class.getCanonicalName()","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"                + \"{persons\u003d\" + addressBook.getPersonList() + \", \"","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"                + \"catalogue\u003d\" + addressBook.getItemList() + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"kokerinks"},"content":"        private final ObservableList\u003cItem\u003e items \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"kokerinks"},"content":"            this.items.setAll(items);","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"kokerinks"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"kokerinks"},"content":"        public ObservableList\u003cItem\u003e getItemList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"kokerinks"},"content":"            return items;","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"kinjalagarwal1810":3,"kokerinks":44,"-":104}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"    public void findItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.findItem(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"    public void findItem_itemNotInAddressBook_returnsNull() {","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"        assertEquals(modelManager.findItem(\"nonexistent\"), null);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"    public void findItem_itemInAddressBook_returnsItem() {","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"        Item item \u003d new Item(\"item\", 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"        modelManager.addItem(item);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"        assertEquals(modelManager.findItem(\"item\"), item);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"    public void removeItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.removeItem(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"    public void removeItem_itemNotInAddressBook_returnsNull() {","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"        assertTrue(modelManager.removeItem(\"nonexistent\") \u003d\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"    public void removeItem_itemInAddressBook_returnsItem() {","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"        Item item \u003d new Item(\"item\", 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"        modelManager.addItem(item);","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"        assertTrue(modelManager.removeItem(\"item\") \u003d\u003d item);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kokerinks":35,"-":132}},{"path":"src/test/java/seedu/address/model/allergen/AllergenTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.model.allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AllergenTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Allergen(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void constructor_invalidAllergenName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"        String invalidAllergenName \u003d \"\";","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Allergen(invalidAllergenName));","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void isValidAllergenName() {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        // null allergen name","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(NullPointerException.class, () -\u003e Allergen.isValidAllergenName(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"kinjalagarwal1810":26}},{"path":"src/test/java/seedu/address/model/item/CatalogueTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.model.item;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"public class CatalogueTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    public void addItem_validItem_true() {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"        assertTrue(new Catalogue().addItem(new Item(\"valid\", 20)));","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    public void addItem_sameItem_false() {","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"        Catalogue test \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"        test.addItem(new Item(\"valid\", 20));","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"        assertFalse(test.addItem(new Item(\"valid\", 20)));","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"        Catalogue expected \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"        expected.addItem(new Item(\"valid\", 20));","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"        assertEquals(test, expected);","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"    public void delItem() {","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"        Catalogue actual \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"        actual.addItem(new Item(\"test\", 20));","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"        assertTrue(actual.removeItem(\"Not In Cat\") \u003d\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"        Catalogue expected \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"        expected.addItem(new Item(\"test\", 20));","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"        assertTrue(actual.removeItem(\"test\") !\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"        Catalogue empty \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"        assertEquals(actual, empty);","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"    public void setItems_catalogueEmptyToFilled_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        Catalogue actual \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"        Catalogue expected \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"        expected.addItem(new Item(\"Hi\", 200));","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"        actual.setItems(expected);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"    public void setItems_catalogueFilledToEmpty_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"        Catalogue actual \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"        Catalogue expected \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"        actual.addItem(new Item(\"Hi\", 200));","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"        actual.setItems(expected);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"    public void setItems_itemListFilledToEmpty_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"        Catalogue test \u003d new Catalogue();","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"        List\u003cItem\u003e itemList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"        //Add two items with same name","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"        itemList.add(new Item(\"Hello\", 2));","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"        itemList.add(new Item(\"Hello\", 3));","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e test.setItems(itemList));","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"kokerinks":7,"billyhoce":76}},{"path":"src/test/java/seedu/address/model/item/ItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.model.item;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"public class ItemTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    public void isSameItem_and_equals() {","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"        Item base \u003d new Item(\"item1\", 10);","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"        Item sameNameSamePoints \u003d new Item(\"item1\", 10);","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"        Item diffNameSamePoints \u003d new Item(\"item2\", 10);","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"        Item sameNameDiffPoints \u003d new Item(\"item1\", 20);","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"        Item diffNameDiffPoints \u003d new Item(\"item2\", 20);","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"        //Tests isSameItem","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"        assertTrue(base.isSameItem(base));","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"        assertTrue(base.isSameItem(sameNameSamePoints));","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"        assertFalse(base.isSameItem(diffNameSamePoints));","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"        assertTrue(base.isSameItem(sameNameDiffPoints));","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"        assertFalse(base.isSameItem(diffNameDiffPoints));","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"        assertFalse(base.isSameItem(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"        //Tests equals","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"        assertEquals(base, base);","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"        assertEquals(base, sameNameSamePoints);","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"        assertNotEquals(base, diffNameSamePoints);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"        assertNotEquals(base, sameNameDiffPoints);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"        assertNotEquals(base, (diffNameDiffPoints));","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"        assertNotEquals(base, null);","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"kokerinks":1,"billyhoce":34}},{"path":"src/test/java/seedu/address/model/person/MembershipPointsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"public class MembershipPointsTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    public void getTier_test() {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"        MembershipPoints points \u003d new MembershipPoints(0);","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"        assertEquals(points.getTier(), \"BRONZE\");","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"        points \u003d new MembershipPoints(2500);","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"        assertEquals(points.getTier(), \"SILVER\");","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"        points \u003d new MembershipPoints(5000);","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"        assertEquals(points.getTier(), \"GOLD\");","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"        points \u003d new MembershipPoints(12000);","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"        assertEquals(points.getTier(), \"PLATINUM\");","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"kokerinks":20}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getAllergens().remove(0));","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"                .withAddress(VALID_ADDRESS_BOB).withAllergens(VALID_ALLERGEN_GF).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAllergens(VALID_ALLERGEN_GF).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"                + \", membership\u003d\" + ALICE.getMembershipPoints() + \", allergens\u003d\" + ALICE.getAllergens()","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"                + \", points\u003d\" + ALICE.getPoints() + \", orders\u003d\" + ALICE.getOrders() + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kinjalagarwal1810":5,"-":94,"billyhoce":2}},{"path":"src/test/java/seedu/address/model/person/PointsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"public class PointsTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points points \u003d new Points(\"5\");","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(points.equals(points));","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(points.equals(new Points(\"5\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(points.equals(1));","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(points.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different points -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points differentPoints \u003d new Points(\"10\");","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(points.equals(differentPoints));","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void isValidPoints() {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        // valid points","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(Points.isValidPoints(\"10\")); // positive integer","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(Points.isValidPoints(\"0\")); // zero","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        // invalid points","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(Points.isValidPoints(\"-1\")); // negative integer","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(Points.isValidPoints(\"5.5\")); // non-integer","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(Points.isValidPoints(\"text\")); // non-numeric","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":42}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withAllergens(VALID_ALLERGEN_GF)","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withAllergens(VALID_ALLERGEN_GF)","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kinjalagarwal1810":3,"-":172}},{"path":"src/test/java/seedu/address/model/person/orders/OrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.model.person.orders;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"public class OrderTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    public void equals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"        Item item \u003d new Item(\"test\", 20);","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"        Order order \u003d new Order(item, 10);","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"        Order orderCopy \u003d new Order(item, 10);","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"        assertEquals(order, orderCopy);","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kokerinks":7,"billyhoce":11}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.AddMemPointsCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String INVALID_ALLERGEN \u003d \"#EG\";","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String INVALID_POINTS \u003d \"-50\";","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    private static final String INVALID_ORDERITEM \u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    private static final String INVALID_ORDERDATETIME \u003d \"13JUNE23\";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    private static final String INVALID_MEM_POINTS1 \u003d \"T1\";","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    private static final String INVALID_MEM_POINTS2 \u003d \"-10\";","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"    private static final String VALID_MEMBERSHIP \u003d String.valueOf(BENSON.getMembershipPoints().value);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final List\u003cJsonAdaptedAllergen\u003e VALID_ALLERGENS \u003d BENSON.getAllergens().stream()","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"            .map(JsonAdaptedAllergen::new)","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String VALID_POINTS \u003d BENSON.getPoints().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"    private static final String VALID_ORDER_ITEM_NAME \u003d \"Cupcake\";","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"    private static final String VALID_ORDER_ITEM_POINTS \u003d \"10\";","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"    private static final String VALID_ORDER_QUANTITY \u003d \"1\";","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"    private static final String VALID_ORDER_DATETIME \u003d \"2023-01-03T15:15:15\";","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"    private static final List\u003cJsonAdaptedOrder\u003e VALID_ORDERS \u003d BENSON.getOrders().stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"            .map(JsonAdaptedOrder::new)","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"                        VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"                VALID_MEMBERSHIP, VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"                        VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"                VALID_MEMBERSHIP, VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"                        VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"                VALID_MEMBERSHIP, VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"kinjalagarwal1810"},"content":"                        VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"kinjalagarwal1810"},"content":"                VALID_MEMBERSHIP, VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void toModelType_invalidAllergens_throwsIllegalValueException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cJsonAdaptedAllergen\u003e invalidAllergens \u003d new ArrayList\u003c\u003e(VALID_ALLERGENS);","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"kinjalagarwal1810"},"content":"        invalidAllergens.add(new JsonAdaptedAllergen(INVALID_ALLERGEN));","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"kinjalagarwal1810"},"content":"                        invalidAllergens, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void toModelType_invalidPoints_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"kinjalagarwal1810"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"kinjalagarwal1810"},"content":"                        VALID_ALLERGENS, INVALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"kinjalagarwal1810"},"content":"        String expectedMessage \u003d Points.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void toModelType_nullPoints_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"kinjalagarwal1810"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"kinjalagarwal1810"},"content":"                VALID_MEMBERSHIP, VALID_ALLERGENS, null, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"kinjalagarwal1810"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Points.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"billyhoce"},"content":"    public void toModelType_invalidOrderItem_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"billyhoce"},"content":"        List\u003cJsonAdaptedOrder\u003e invalidOrders \u003d new ArrayList\u003c\u003e(VALID_ORDERS);","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"kokerinks"},"content":"        invalidOrders.add(new JsonAdaptedOrder(INVALID_ORDERITEM, VALID_ORDER_ITEM_POINTS,","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"kokerinks"},"content":"                VALID_ORDER_QUANTITY, VALID_ORDER_DATETIME));","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"billyhoce"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"kinjalagarwal1810"},"content":"                        VALID_MEMBERSHIP, VALID_ALLERGENS, VALID_POINTS, invalidOrders);","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"billyhoce"},"content":"        String expectedMessage \u003d Order.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"billyhoce"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"billyhoce"},"content":"    public void toModelType_invalidOrderDateTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"billyhoce"},"content":"        List\u003cJsonAdaptedOrder\u003e invalidOrders \u003d new ArrayList\u003c\u003e(VALID_ORDERS);","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"kokerinks"},"content":"        invalidOrders.add(new JsonAdaptedOrder(VALID_ORDER_ITEM_NAME, VALID_ORDER_ITEM_POINTS,","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"kokerinks"},"content":"                VALID_ORDER_QUANTITY, INVALID_ORDERDATETIME));","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"billyhoce"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"kinjalagarwal1810"},"content":"                        VALID_MEMBERSHIP, VALID_ALLERGENS, VALID_POINTS, invalidOrders);","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"billyhoce"},"content":"        String expectedMessage \u003d Order.MESSAGE_INVALID_DATETIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"billyhoce"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":180,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":181,"author":{"gitId":"kokerinks"},"content":"    public void toModelType_invalidMembershipPoints1_throwsIllegalValueException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":182,"author":{"gitId":"kokerinks"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-23"},{"lineNumber":183,"author":{"gitId":"kokerinks"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_MEM_POINTS1,","lastModifiedDate":"2024-03-23"},{"lineNumber":184,"author":{"gitId":"kinjalagarwal1810"},"content":"                        VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d AddMemPointsCommand.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-23"},{"lineNumber":186,"author":{"gitId":"kokerinks"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-23"},{"lineNumber":187,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":188,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":189,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":190,"author":{"gitId":"kokerinks"},"content":"    public void toModelType_invalidMembershipPoints2_throwsIllegalValueException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":191,"author":{"gitId":"kokerinks"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-23"},{"lineNumber":192,"author":{"gitId":"kokerinks"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_MEM_POINTS2,","lastModifiedDate":"2024-03-23"},{"lineNumber":193,"author":{"gitId":"kinjalagarwal1810"},"content":"                        VALID_ALLERGENS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d AddMemPointsCommand.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-23"},{"lineNumber":195,"author":{"gitId":"kokerinks"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-23"},{"lineNumber":196,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kokerinks":30,"kinjalagarwal1810":44,"-":97,"billyhoce":26}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.MembershipPoints;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        descriptor.setAllergens(person.getAllergens());","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"        descriptor.setPoints(person.getPoints());","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"        descriptor.setOrders(person.getOrders());","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"        descriptor.setMembershipPoints(person.getMembershipPoints());","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"     * Sets the {@code MembershipPoints} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"    public EditPersonDescriptorBuilder withMemPts(String memPts) {","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        descriptor.setMembershipPoints(new MembershipPoints(memPts));","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"        return this;","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the {@code allergens} into a {@code Set\u003cAllergen\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"    public EditPersonDescriptorBuilder withAllergens(String... allergens) {","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"        Set\u003cAllergen\u003e allergenSet \u003d Stream.of(allergens).map(Allergen::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"        descriptor.setAllergens(allergenSet);","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Sets the {@code Points} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"    public EditPersonDescriptorBuilder withPoints(String points) {","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"        descriptor.setPoints(new Points(points));","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"billyhoce"},"content":"     * Parses the {@code orders} into a {@code ArrayList\u003cOrder\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"billyhoce"},"content":"    public EditPersonDescriptorBuilder withOrders(String... orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"        ArrayList\u003cOrder\u003e orderList \u003d Arrays.stream(orders)","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"                .map(str -\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"                    String[] parts \u003d str.split(\"\\\\|\");","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"                    Item item \u003d new Item(parts[0], Integer.parseInt(parts[1]));","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"                    int quantity \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"                    return new Order(item, quantity, LocalDateTime.parse(parts[3]));","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"billyhoce"},"content":"                })","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"billyhoce"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"billyhoce"},"content":"        descriptor.setOrders(orderList);","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kinjalagarwal1810":15,"kokerinks":7,"-":87,"billyhoce":21}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.MembershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    public static final String DEFAULT_MEMBERSHIP \u003d \"0\";","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String DEFAULT_POINTS \u003d \"0\";","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    private MembershipPoints membershipPoints;","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Set\u003cAllergen\u003e allergens;","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Points points;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"    private ArrayList\u003cOrder\u003e orders;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"        membershipPoints \u003d new MembershipPoints(DEFAULT_MEMBERSHIP);","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        allergens \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        points \u003d new Points(DEFAULT_POINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"        orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"        membershipPoints \u003d personToCopy.getMembershipPoints();","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        allergens \u003d new HashSet\u003c\u003e(personToCopy.getAllergens());","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"        points \u003d personToCopy.getPoints();","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"        orders \u003d new ArrayList\u003c\u003e(personToCopy.getOrders());","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the {@code allergens} into a {@code Set\u003cAllergen\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"    public PersonBuilder withAllergens(String ... allergens) {","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.allergens \u003d SampleDataUtil.getAllergenSet(allergens);","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"     * Parses the {@code orders} into a {@code ArrayList\u003cOrder\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"    public PersonBuilder withOrders(String ... orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        this.orders \u003d SampleDataUtil.getOrderArrayList(orders);","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Sets the {@code Points} of the {@code Points} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"kinjalagarwal1810"},"content":"    public PersonBuilder withPoints(String points) {","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.points \u003d new Points(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"kab-dot"},"content":"     * Sets the {@code Membership} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"kokerinks"},"content":"    public PersonBuilder withMembershipPoints(String membershipPoints) {","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"kokerinks"},"content":"        this.membershipPoints \u003d new MembershipPoints(membershipPoints);","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"kab-dot"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Builds and returns a {@code Person} with the current attributes set in the {@code PersonBuilder}.","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"kinjalagarwal1810"},"content":"     * This method provides a way to construct a new {@code Person} instance using the builder pattern. Attributes set","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"kinjalagarwal1810"},"content":"     * in the builder are used to instantiate the {@code Person}. This includes the person\u0027s name, phone number, email,","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"kinjalagarwal1810"},"content":"     * address, membership status, set of allergens, and points. If an attribute has not been explicitly set in the","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"kinjalagarwal1810"},"content":"     * builder, the default value for that attribute is used.","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A new {@code Person} instance with attributes specified in the {@code PersonBuilder}.","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":144,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new Person(name, phone, email, address, membershipPoints, allergens, points, orders);","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"kab-dot":4,"kinjalagarwal1810":30,"kokerinks":7,"-":97,"billyhoce":9}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALLERGENS;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.allergen.Allergen;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        person.getAllergens().stream().forEach(","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"            s -\u003e sb.append(PREFIX_ALLERGENS + s.allergenName + \" \")","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (descriptor.getAllergens().isPresent()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"            Set\u003cAllergen\u003e allergens \u003d descriptor.getAllergens().get();","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (allergens.isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"                sb.append(PREFIX_ALLERGENS + \" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"                allergens.forEach(s -\u003e sb.append(PREFIX_ALLERGENS).append(s.allergenName).append(\" \"));","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"        descriptor.getPoints().ifPresent(points -\u003e sb.append(PREFIX_POINTS).append(points.value).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kinjalagarwal1810":9,"kokerinks":2,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_GF;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALLERGEN_LF;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MSHIP_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MSHIP_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POINTS_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POINTS_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withPhone(\"94351253\").withAllergens(\"LF\").withPoints(\"50\")","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"            .withOrders(\"Cupcake|100|3|2007-12-03T10:15:30\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withMembershipPoints(\"10\")","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withAllergens(\"GF\", \"LF\").withPoints(\"70\")","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"            .withOrders(\"Cookies|100|5|2012-03-21T07:45:01\", \"Cupcake|150|2|2014-12-11T13:01:02\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withMembershipPoints(\"20\").withPoints(\"0\")","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"            .withOrders(\"Kaya Toast|200|1|2024-01-01T07:00:00\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withMembershipPoints(\"30\").withAllergens(\"LF\")","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"            .withPoints(\"100\").withOrders(\"Cheese Tart|300|3|2023-06-30T23:23:23\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withMembershipPoints(\"100\").withPoints(\"50\")","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"            .withOrders(\"Chocolate Waffle|120|2|2023-01-01T13:13:13\",","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"                    \"Peanut Butter Waffle|100|3|2023-01-02T14:14:14\",","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"                    \"Kaya Waffle|110|1|2023-01-03T15:15:15\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withMembershipPoints(\"110\")","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"            .withPoints(\"20\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withMembershipPoints(\"300\")","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"            .withPoints(\"70\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withPoints(\"50\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withPoints(\"70\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withMembershipPoints(VALID_MSHIP_AMY)","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withAllergens(VALID_ALLERGEN_LF).withPoints(VALID_POINTS_AMY).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withMembershipPoints(VALID_MSHIP_BOB)","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withAllergens(VALID_ALLERGEN_GF, VALID_ALLERGEN_LF).withPoints(VALID_POINTS_BOB).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"        for (Item item : getTypicalItems()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"kokerinks"},"content":"            ab.addItem(item);","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(ALICE).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(BENSON).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(CARL).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(DANIEL).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(ELLE).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(FIONA).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(GEORGE).build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"    public static List\u003cItem\u003e getTypicalItems() {","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"                new Item(\"Cupcake\", 100),","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"                new Item(\"Cookies\", 100),","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"                new Item(\"Cupcake\", 150),","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"                new Item(\"Cheese Tart\", 300),","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"                new Item(\"Chocolate Waffle\", 120),","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"                new Item(\"Peanut Butter Waffle\", 100),","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"                new Item(\"Kaya Waffle\", 110),","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"                new Item(\"Kaya Toast\", 200)));","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"kab-dot":2,"kinjalagarwal1810":11,"kokerinks":33,"-":58,"billyhoce":8}}]
