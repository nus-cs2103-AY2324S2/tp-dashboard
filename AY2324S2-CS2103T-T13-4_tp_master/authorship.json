[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T13-4/tp/actions)","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"* This is **a project for a Software Engineering (CS2103T) module in NUS**.\u003cbr\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"  * as a application freelance home bakeries can use to keep track of their loyalty program","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) , without being overwhelmingly big.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"* It is named `tp` (`team project` in full) because it is a team project done under NUS SOC CS2103T module.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"kinjalagarwal1810":8,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"### Lim Kok Liang","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"\u003cimg src\u003d\"images/kokerinks.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"[[github](http://github.com/kokerinks)] [[linkedin](https://www.linkedin.com/in/lim-kok-liang/)]","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"* Role: Testing, Integration","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"### Billy Ho Cheng En","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"\u003cimg src\u003d\"images/billyhoce.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"[[github](http://github.com/billyhoce)]","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"[[portfolio](team/billyho.md)]","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"* Role: Team lead, Deliverables and deadlines","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"### Khushi Bhagwat","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"\u003cimg src\u003d\"images/kab-dot.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"[[github](http://github.com/kab-dot)]","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"[[portfolio](team/khushibhagwat.md)]","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"* Role: Documentation, Scheduling","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"### Kinjal Agarwal","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"\u003cimg src\u003d\"images/kinjalagarwal1810.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"[[github](http://github.com/kinjalagarwal1810)]","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"[[portfolio](team/kinjalagarwal1810.md)]","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"* Role: Code Quality","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"kab-dot":4,"kokerinks":3,"kinjalagarwal1810":11,"-":26,"billyhoce":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"billyhoce"},"content":"### Orders feature","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"billyhoce"},"content":"The addorder command that comes along with the orders feature is implemented like this:","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"billyhoce"},"content":"\u003cimg src\u003d\"images/AddOrderSequenceDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"billyhoce"},"content":"* is a small-medium scale bakery owner","lastModifiedDate":"2024-03-01"},{"lineNumber":273,"author":{"gitId":"billyhoce"},"content":"* has a need to manage a significant number of patrons\u0027 membership details","lastModifiedDate":"2024-03-01"},{"lineNumber":274,"author":{"gitId":"billyhoce"},"content":"* want to keep track of points for each member and can easily allow accumulation and redemption of points","lastModifiedDate":"2024-03-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"billyhoce"},"content":"**Value proposition**: manage membership subscriptions for a small-medium bakery shop faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-01"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"| Priority | As a …​                                             | I want to …​                                                                                             | So that I can…​                                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"billyhoce"},"content":"|----------|-----------------------------------------------------|----------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2024-03-01"},{"lineNumber":289,"author":{"gitId":"billyhoce"},"content":"| `* * *`  | Potential user exploring the app                    | See the app populated with sample data                                                                   | I can easily see how the app will look like when it is in use              |","lastModifiedDate":"2024-03-01"},{"lineNumber":290,"author":{"gitId":"billyhoce"},"content":"| `* *`    | Potential user exploring the app                    | Access the user guide easily via a help button                                                           |                                                                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":291,"author":{"gitId":"billyhoce"},"content":"| `* * *`  | User ready to start using the app                   | Purge all current data                                                                                   | I can get rid of the sample data and input my own                          |","lastModifiedDate":"2024-03-01"},{"lineNumber":292,"author":{"gitId":"billyhoce"},"content":"| `* * *`  | User learning to use the app                        | Add a new member                                                                                         |                                                                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":293,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User learning to use the app                        | Check whether a particular member exists                                                                 | I can verify if a patron is a member or not                                |","lastModifiedDate":"2024-03-01"},{"lineNumber":294,"author":{"gitId":"billyhoce"},"content":"| `* * *`  | User learning to use the app                        | Manually add points to a member                                                                          | I can reward them for their patronage                                      |","lastModifiedDate":"2024-03-01"},{"lineNumber":295,"author":{"gitId":"billyhoce"},"content":"| `* * *`  | User learning to use the app                        | Manually subtract points from a member                                                                   | The members can \"spend\" their points for discounts                         |","lastModifiedDate":"2024-03-01"},{"lineNumber":296,"author":{"gitId":"billyhoce"},"content":"| `* * *`  | User learning to use the app                        | Save all data on every command that changes the data                                                     | Closing the application (intended or not) will not lose my data            |","lastModifiedDate":"2024-03-01"},{"lineNumber":297,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User learning to use the app                        | See help on proper usage when I wrongly use a command                                                    | Easily learn and correct my mistakes                                       |","lastModifiedDate":"2024-03-01"},{"lineNumber":298,"author":{"gitId":"billyhoce"},"content":"| `* * *`  | User slightly familiar with the app                 | Add orders to a particular member (saves current date/time)                                              | I can track their past orders                                              |","lastModifiedDate":"2024-03-01"},{"lineNumber":299,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User slightly familiar with the app                 | Edit member details                                                                                      | When patrons change their name, address or contact, I can easily update it |","lastModifiedDate":"2024-03-01"},{"lineNumber":300,"author":{"gitId":"billyhoce"},"content":"| `* * *`  | User slightly familiar with the app                 | Delete members                                                                                           | I can remove a member from my list when they are not longer subscribed.    |","lastModifiedDate":"2024-03-01"},{"lineNumber":301,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User who likes to be organised                      | Create Tags that can be attached to members                                                              | I can categorise members for different discounts etc.                      |","lastModifiedDate":"2024-03-01"},{"lineNumber":302,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User who likes to be organised                      | Search for a member and see and overview of their profile                                                | I can see and easilly refer to their important details                     |","lastModifiedDate":"2024-03-01"},{"lineNumber":303,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to develop the business                | Count the number of members with a certain Tag                                                           | Make business decisions easier by observing my demographics                |","lastModifiedDate":"2024-03-01"},{"lineNumber":304,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to develop the business                | Check the past orders of a member                                                                        | I can refer back to past orders for marketing/accounting purposes          |","lastModifiedDate":"2024-03-01"},{"lineNumber":305,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User with many orders                               | Create and add to a list of products, with the respective points they each reward when bought            | I can input multiple orders quickly                                        |","lastModifiedDate":"2024-03-01"},{"lineNumber":306,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User with many orders                               | Add an order to a member which automatically adds points using one single command                        | I can input multiple orders quickly                                        |","lastModifiedDate":"2024-03-01"},{"lineNumber":307,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to be more efficient                   | Add an order to a member which automatically adds points, and can redeem points using one single command | I can input multiple orders even quicker                                   |","lastModifiedDate":"2024-03-01"},{"lineNumber":308,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to be more efficient                   | Use all points from a member with a feedback to let me know how many was used                            | I can add orders without even looking at how many points a member has      |","lastModifiedDate":"2024-03-01"},{"lineNumber":309,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to expand the business                 | Create membership tiers that increase the amount of points earned                                        | I can expand my loyalty program                                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":310,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to expand the business                 | Seperate members into different tiers manually                                                           | I can expand my loyalty program                                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":311,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking to expand the business                 | Create different redemptions using points other than flat discounts (Eg. free small cake)                | I can expand my loyalty program                                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":312,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking for more complex membership structures | Create membership tiers using pre-built structures that define prerequisites for a tier                  | Automate the process of \"tiering up\"                                       |","lastModifiedDate":"2024-03-01"},{"lineNumber":313,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking for more complex membership structures | Have members automatically \"tier up\" when they hit the prequisites for a tier                            | Automate the process of \"tiering up\"                                       |","lastModifiedDate":"2024-03-01"},{"lineNumber":314,"author":{"gitId":"billyhoce"},"content":"| `* *`    | User looking for more complex membership structures | Have points have an expiry date that I can decide on                                                     | Encourage patrons to spend their points by buying something                |","lastModifiedDate":"2024-03-01"},{"lineNumber":315,"author":{"gitId":"billyhoce"},"content":"| `*`      | User looking for more complex membership structures | Automatically SMS members when their points expire soon                                                  | Encourage patrons to spend their points by buying something                |","lastModifiedDate":"2024-03-01"},{"lineNumber":316,"author":{"gitId":"billyhoce"},"content":"| `*`      | User looking for more complex membership structures | Be able to send out announcements via SMS                                                                | Increase advertising to members                                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":317,"author":{"gitId":"billyhoce"},"content":"| `* *`    | Experienced User who is organised                   | Split the graphical interface into different sections contaning members of different tiers               | Have an overview of the members in the different tiers                     |","lastModifiedDate":"2024-03-01"},{"lineNumber":318,"author":{"gitId":"billyhoce"},"content":"| `* *`    | Experienced User who is organised                   | See how many members of each tier there is                                                               | I can understand how my loyalty system is doing                            |","lastModifiedDate":"2024-03-01"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"kab-dot"},"content":"(For all use cases below, the **System** is the `SweetRewards` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-01"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"kab-dot"},"content":"**Use case 1: Delete a member**","lastModifiedDate":"2024-03-01"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"kab-dot"},"content":"1.  User requests to list customers","lastModifiedDate":"2024-03-01"},{"lineNumber":331,"author":{"gitId":"kab-dot"},"content":"2.  SweetRewards shows a list of customers","lastModifiedDate":"2024-03-01"},{"lineNumber":332,"author":{"gitId":"kab-dot"},"content":"3.  User requests to delete a specific customer in the list","lastModifiedDate":"2024-03-01"},{"lineNumber":333,"author":{"gitId":"kab-dot"},"content":"4.  AddressBook deletes the customer","lastModifiedDate":"2024-03-01"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"kab-dot"},"content":"    * 3a1. SweetRewards shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":346,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":347,"author":{"gitId":"kab-dot"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":348,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":349,"author":{"gitId":"kab-dot"},"content":"**Use case 2: Add a member**","lastModifiedDate":"2024-03-01"},{"lineNumber":350,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":351,"author":{"gitId":"kab-dot"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":352,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":353,"author":{"gitId":"kab-dot"},"content":"1.  User requests to add a customer by typing the command addmember","lastModifiedDate":"2024-03-01"},{"lineNumber":354,"author":{"gitId":"kab-dot"},"content":"2.  SweetRewards shows member added successfully","lastModifiedDate":"2024-03-01"},{"lineNumber":355,"author":{"gitId":"kab-dot"},"content":"3.  User can view added member successfully","lastModifiedDate":"2024-03-01"},{"lineNumber":356,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":357,"author":{"gitId":"kab-dot"},"content":"    Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":358,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":359,"author":{"gitId":"kab-dot"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":360,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":361,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":362,"author":{"gitId":"kab-dot"},"content":"* 2a. The compulsory fields are empty","lastModifiedDate":"2024-03-01"},{"lineNumber":363,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":364,"author":{"gitId":"kab-dot"},"content":"    * 2a1. SweetRewards shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":365,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":366,"author":{"gitId":"kab-dot"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":367,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":368,"author":{"gitId":"kab-dot"},"content":"**Use case 3: Add an order for a member**","lastModifiedDate":"2024-03-01"},{"lineNumber":369,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":370,"author":{"gitId":"kab-dot"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":371,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":372,"author":{"gitId":"kab-dot"},"content":"1.  User requests to add a order to a member by typing the command addorder","lastModifiedDate":"2024-03-01"},{"lineNumber":373,"author":{"gitId":"kab-dot"},"content":"2.  SweetRewards shows order added successfully","lastModifiedDate":"2024-03-01"},{"lineNumber":374,"author":{"gitId":"kab-dot"},"content":"3.  User can view added member successfully","lastModifiedDate":"2024-03-01"},{"lineNumber":375,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":376,"author":{"gitId":"kab-dot"},"content":"    Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":377,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":378,"author":{"gitId":"kab-dot"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":379,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":380,"author":{"gitId":"kab-dot"},"content":"* 2a. The order list is empty for the member.","lastModifiedDate":"2024-03-01"},{"lineNumber":381,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":382,"author":{"gitId":"kab-dot"},"content":"  Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":383,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":384,"author":{"gitId":"kab-dot"},"content":"* 2a. The compulsory fields are empty","lastModifiedDate":"2024-03-01"},{"lineNumber":385,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":386,"author":{"gitId":"kab-dot"},"content":"    * 2a1. SweetRewards shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":387,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":388,"author":{"gitId":"kab-dot"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":389,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":390,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":391,"author":{"gitId":"kab-dot"},"content":"**Use case 4: Delete points for a member**","lastModifiedDate":"2024-03-01"},{"lineNumber":392,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":393,"author":{"gitId":"kab-dot"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":394,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":395,"author":{"gitId":"kab-dot"},"content":"1.  User requests to delete \"x\" number of points for a member by","lastModifiedDate":"2024-03-01"},{"lineNumber":396,"author":{"gitId":"kab-dot"},"content":"typing the command subpoints","lastModifiedDate":"2024-03-01"},{"lineNumber":397,"author":{"gitId":"kab-dot"},"content":"2.  SweetRewards shows \"x\" points deleted for member","lastModifiedDate":"2024-03-01"},{"lineNumber":398,"author":{"gitId":"kab-dot"},"content":"3.  User can view the number of points left for member","lastModifiedDate":"2024-03-01"},{"lineNumber":399,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":400,"author":{"gitId":"kab-dot"},"content":"    Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":401,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":402,"author":{"gitId":"kab-dot"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":403,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":404,"author":{"gitId":"kab-dot"},"content":"* 2a. The current number of points is zero","lastModifiedDate":"2024-03-01"},{"lineNumber":405,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":406,"author":{"gitId":"kab-dot"},"content":"    * 2a1. SweetRewards shows an error message.","lastModifiedDate":"2024-03-01"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"kokerinks"},"content":"#### Usability","lastModifiedDate":"2024-03-01"},{"lineNumber":415,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"kokerinks"},"content":"2.  Should operate efficiently in a small business\u0027 technical environment i.e. should require minimal hardware resources.","lastModifiedDate":"2024-03-01"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"kokerinks"},"content":"#### Performance:","lastModifiedDate":"2024-03-01"},{"lineNumber":419,"author":{"gitId":"kokerinks"},"content":"1.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-01"},{"lineNumber":420,"author":{"gitId":"kokerinks"},"content":"2.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-01"},{"lineNumber":421,"author":{"gitId":"kokerinks"},"content":"3.  Ensure that all commands are executed and feedback is provided within 2 seconds during normal operation.","lastModifiedDate":"2024-03-01"},{"lineNumber":422,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":423,"author":{"gitId":"kokerinks"},"content":"#### Accessibility:","lastModifiedDate":"2024-03-01"},{"lineNumber":424,"author":{"gitId":"kokerinks"},"content":"1.  Should support users with different abilities to effectively interact with the system.","lastModifiedDate":"2024-03-01"},{"lineNumber":425,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":426,"author":{"gitId":"kokerinks"},"content":"#### Security:","lastModifiedDate":"2024-03-01"},{"lineNumber":427,"author":{"gitId":"kokerinks"},"content":"1.  Data stored should not be easily modified by non-authorised users of the application.","lastModifiedDate":"2024-03-01"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":432,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kab-dot":68,"kokerinks":12,"-":363,"billyhoce":42}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"AddressBook Level 3 (AB3) is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"* Items with `…\u0027 after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"  e.g. `[t/TAG]…` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"### Initializing program with seed data : `seedData`","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"Adds a set of pre-defined sample data into the application.","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"Format: `seedData`","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"* If there is existing data, it will retain the current data on top of the new sample data to be added.","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"* `seedData` will only add sample members which do not exist in the application yet.","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"* If all members in sample data already exists, it will display the following message:  ","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"  `Every member from seed data already exist in the address book!`","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"### Adding a person : `addmember`","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"Format: `addmember n/MEMBER_NAME a/MEMBER_ADDRESS hp/MEMBER_PHONE e/MEMBER_EMAIL …​`","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"kab-dot"},"content":"* `addmember n/John Doe a/John street, block 123, #01-01 hp/98765432 e/johnd@example.com `","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"kab-dot"},"content":"* `addmember n/Betsy Crowe a/Newton Street hp/1234567 e/betsycrowe@example.com `","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"billyhoce"},"content":"### Adding orders to a person: `addorder`","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"billyhoce"},"content":"Adds an order to an existing person in the address book.","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"billyhoce"},"content":"Format: `addorder n/MEMBER_NAME o/ORDER_DETAILS`","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"billyhoce"},"content":"* The order will be added to the person with the closest resembling name to `MEMBER_NAME`.","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"* If no person with a resembling name is found, no order will be added to any person.","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"* All persons are considered, not just those in the displayed person list.","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"* `ORDER_DETAILS` must not be empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"Examples:","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"* `addorder n/John Doe o/Butter Cake` Adds an order of `Butter Cake` to `John Doe`","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"billyhoce"},"content":"* `addorder n/Betsy o/200g Macadamia Nut Cookies` Adds of order of `200g Macadamia Nut Cookies` to `Besty Crower`","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"### Deleting orders of a person: `delorder`","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"billyhoce"},"content":"Adds an order to an existing person in the address book.","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"billyhoce"},"content":"Format: `delorder n/MEMBER_NAME i/ORDER_INDEX`","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"billyhoce"},"content":"* The order with corresponding `ORDER_INDEX` will be removed from the person with the closest resembling name to `MEMBER_NAME`.","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"billyhoce"},"content":"* If no person with a resembling name is found, no order will be removed from any person.","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"* All persons are considered, not just those in the displayed person list.","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"billyhoce"},"content":"* `ORDER_INDEX` **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"billyhoce"},"content":"Examples:","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"billyhoce"},"content":"* `delorder n/John Doe i/1` deletes the first order of `John Doe`","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Locating persons by name : `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"kokerinks"},"content":"Clears all entries from the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"kokerinks"},"content":"* Deletes all members, including:","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"kokerinks"},"content":"  * Members added by users","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"kokerinks"},"content":"  * Seed data added from `seedData` command","lastModifiedDate":"2024-03-01"},{"lineNumber":188,"author":{"gitId":"kokerinks"},"content":"* User will be prompted to verify the clear command.","lastModifiedDate":"2024-03-07"},{"lineNumber":189,"author":{"gitId":"kokerinks"},"content":"* To bypass the verification prompt, the user can follow `clear` with `--force`. This will clear the address book without additional prompting.","lastModifiedDate":"2024-03-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"kinjalagarwal1810"},"content":"### Adding points: `addpoints`","lastModifiedDate":"2024-03-01"},{"lineNumber":192,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":193,"author":{"gitId":"kokerinks"},"content":"Adds points for a member in the loyalty program.","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":195,"author":{"gitId":"kinjalagarwal1810"},"content":"Format: `addpoints n/MEMBER_NAME p/POINTS`","lastModifiedDate":"2024-03-01"},{"lineNumber":196,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":197,"author":{"gitId":"kinjalagarwal1810"},"content":"* Adds the corresponding number of points for a memeber based on their name.","lastModifiedDate":"2024-03-01"},{"lineNumber":198,"author":{"gitId":"kinjalagarwal1810"},"content":"* The points **must be a positive integer** 1, 2, 3, … 200","lastModifiedDate":"2024-03-01"},{"lineNumber":199,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":200,"author":{"gitId":"kinjalagarwal1810"},"content":"Examples:","lastModifiedDate":"2024-03-01"},{"lineNumber":201,"author":{"gitId":"kinjalagarwal1810"},"content":"* `addpoints n/John Doe p/50`","lastModifiedDate":"2024-03-01"},{"lineNumber":202,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":203,"author":{"gitId":"kinjalagarwal1810"},"content":"### Subtracting points: `subpoints`","lastModifiedDate":"2024-03-01"},{"lineNumber":204,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":205,"author":{"gitId":"kinjalagarwal1810"},"content":"Subtracts points for a member in the loyalty program.","lastModifiedDate":"2024-03-01"},{"lineNumber":206,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":207,"author":{"gitId":"kinjalagarwal1810"},"content":"Format: `subpoints n/MEMBER_NAME p/POINTS`","lastModifiedDate":"2024-03-01"},{"lineNumber":208,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":209,"author":{"gitId":"kinjalagarwal1810"},"content":"* Subtracts the corresponding number of points for a memeber based on their name.","lastModifiedDate":"2024-03-01"},{"lineNumber":210,"author":{"gitId":"kinjalagarwal1810"},"content":"* The points **must be a positive integer** 1, 2, 3, … [current number of points the member has currently]","lastModifiedDate":"2024-03-01"},{"lineNumber":211,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":212,"author":{"gitId":"kinjalagarwal1810"},"content":"Examples:","lastModifiedDate":"2024-03-01"},{"lineNumber":213,"author":{"gitId":"kinjalagarwal1810"},"content":"* `subpoints n/John Doe p/50`","lastModifiedDate":"2024-03-01"},{"lineNumber":214,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"billyhoce"},"content":"**Add Order** | `addorder n/MEMBER_NAME o/ORDER_DETAILS` \u003cbr\u003e e.g., `addorder n/John Doe o/Butter Cake`","lastModifiedDate":"2024-03-01"},{"lineNumber":260,"author":{"gitId":"billyhoce"},"content":"**Delete Order** | `delorder n/MEMBER_NAME i/ORDER_INDEX` \u003cbr\u003e e.g., `delorder n/John Doe i/1`","lastModifiedDate":"2024-03-01"},{"lineNumber":261,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kab-dot":6,"kokerinks":19,"kinjalagarwal1810":23,"-":189,"billyhoce":29}},{"path":"docs/diagrams/AddOrderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"@startuml","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"!include style.puml","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"participant \":AddOrderCommandParser\" as AddOrderCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"participant \"o:Order\" as Order LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"participant \"a:AddOrderCommand\" as AddOrderCommand LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"participant \"alice:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"end box","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"[-\u003e LogicManager : execute(\\n\"addorder \\nn/Alice \\no/Cookies\")","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"activate LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\\n\"addorder \\nn/Alice \\no/Cookies\")","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"create AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"AddressBookParser -\u003e AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"activate AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"AddOrderCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"deactivate AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"AddressBookParser -\u003e AddOrderCommandParser : parse(\\n\"n/Alice \\no/Cookies\")","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"activate AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"create Order","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"AddOrderCommandParser -\u003e Order","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"activate Order","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"Order --\u003e AddOrderCommandParser : o","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"deactivate Order","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"create AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"AddOrderCommandParser -\u003e AddOrderCommand : AddOrderCommand(name, o)","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"activate AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"AddOrderCommand --\u003e AddOrderCommandParser : a","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"deactivate AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"AddOrderCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"deactivate AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"AddOrderCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"destroy AddOrderCommandParser","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"LogicManager -\u003e AddOrderCommand : execute(m)","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"activate AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"AddOrderCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"activate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"Model --\u003e AddOrderCommand : fpl","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"deactivate Model","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"alt \"Alice\" matches name in fpl","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"    AddOrderCommand -\u003e Person : addOrder(o)","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"activate Person","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"Person --\u003e AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"deactivate Person","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"create CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"AddOrderCommand -\u003e CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"activate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"CommandResult --\u003e AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"AddOrderCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"else","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"    [\u003c-- AddOrderCommand : commandException","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"    deactivate AddOrderCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"end","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"@enduml","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"billyhoce":90}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e Membership","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e Points","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e \"*\" Order","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kokerinks":3,"-":21}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"Class Membership","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"Class Points","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"Class Order","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e Membership","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e Points","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"Person *--\u003e \"*\" Order","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kokerinks":6,"-":54}},{"path":"docs/team/billyho.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"layout: page","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"* **Project management**:","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"  * User Guide:","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"* **Community**:","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"* **Tools**:","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"billyhoce":46}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"The specified person is not found\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":51,"billyhoce":1}},{"path":"src/main/java/seedu/address/logic/commands/AddMemshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMSHIP;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":" * Adds a membership tier for a person to the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"public class AddMemshipCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"    public static final String COMMAND_WORD \u003d \"addmship\";","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"            + \": Add membership tier of the person \" + \"identified \"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"            + \"by the name of the person in the listing. \"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"            + \"Existing membership will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"            + \"Parameters: NAME \" + PREFIX_MEMSHIP + \"[MEMBERSHIP_TIER]\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"            + \"Example: \" + COMMAND_WORD + \" Alice \"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"            + PREFIX_MEMSHIP + \"T1\";","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"    public static final String MESSAGE_ADD_MEMBERSHIP_SUCCESS \u003d \"Added membership to Person: %1$s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"    public static final String MESSAGE_DELETE_MEMBERSHIP_SUCCESS \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"          \"Removed membership from Person: %1$s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"    private final Name name;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"    private final String mship;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"     * @param name of the person in the filtered person list to edit the remark","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"     * @param mship of the person to be updated to","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"    public AddMemshipCommand(Name name, String mship) {","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"        requireAllNonNull(name, mship);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"        this.mship \u003d mship;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"        Optional\u003cPerson\u003e personOptional \u003d lastShownList.stream()","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"                .filter(person -\u003e person.getName().equals(this.name))","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"                .findFirst();","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"        if (personOptional.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"            throw new CommandException(","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"                    Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"        Person personToEdit \u003d personOptional.get();","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(),","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"                personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"                personToEdit.getAddress(), new Membership((mship)),","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"                personToEdit.getTags(), personToEdit.getPoints(), personToEdit.getOrders());","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"        String message \u003d !mship.isEmpty() ? MESSAGE_ADD_MEMBERSHIP_SUCCESS : MESSAGE_DELETE_MEMBERSHIP_SUCCESS;","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"        return String.format(message, personToEdit.getName());","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"kab-dot"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"kab-dot"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"kab-dot"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"        if (!(other instanceof AddMemshipCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"kab-dot"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"kab-dot"},"content":"        // state check","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"kab-dot"},"content":"        AddMemshipCommand e \u003d (AddMemshipCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"kab-dot"},"content":"        return name.equals(e.name)","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"kab-dot"},"content":"                \u0026\u0026 mship.equals(e.mship);","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kab-dot":96,"billyhoce":1}},{"path":"src/main/java/seedu/address/logic/commands/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":" * Changes the order of an existing person in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    public static final String COMMAND_WORD \u003d \"addorder\";","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"            + \": Adds an order to the order list of the person identified by the given Name.\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"            + \"Parameters: n/MEMBER_NAME (must match the name of an existing member) \"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"            + \"o/[ORDER_DETAILS]]\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"            + \"Example: \" + COMMAND_WORD + \" Alex Yeoh \"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"            + \"o/Chocolate Chip Cookies 100g x 3\";","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_ADD_ORDER_SUCCESS \u003d \"Added order to Person: %1$s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"    public final NameContainsKeywordsPredicate personNamePredicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    public final Order order;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"     * @param personNamePredicate of the person to add the order to","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"     * @param order to add to the list of orders of the person","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"    public AddOrderCommand(NameContainsKeywordsPredicate personNamePredicate, Order order) {","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"        requireAllNonNull(personNamePredicate, order);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"        this.personNamePredicate \u003d personNamePredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"        this.order \u003d order;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        Person personToUpdate \u003d null;","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"            if (!personNamePredicate.test(person)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"                continue;","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"            } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"                personToUpdate \u003d person;","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"                break;","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"        if (isNull(personToUpdate)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"        personToUpdate.addOrders(order);","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"        return new CommandResult(generateSuccessMessage(personToUpdate));","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"     * the order is added to or removed from {@code personToUpdate}.","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"    static String generateSuccessMessage(Person personToUpdate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"        return String.format(MESSAGE_ADD_ORDER_SUCCESS, personToUpdate.getName());","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"        if (!(other instanceof AddOrderCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"        AddOrderCommand e \u003d (AddOrderCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"        return personNamePredicate.equals(e.personNamePredicate)","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"                \u0026\u0026 order.equals(e.order);","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"billyhoce":94}},{"path":"src/main/java/seedu/address/logic/commands/AddPointsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":" * Adds points to an existing person in the loyalty program.","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddPointsCommand extends Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String COMMAND_WORD \u003d \"addpoints\";","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \": Adds points to the person identified\"","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \"Parameters: NAME \" + PREFIX_POINTS + \"POINTS \\n\"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \"Example: \" + COMMAND_WORD + \" John Doe \" + PREFIX_POINTS + \"40\";","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Name: %1$s, Points: %2$i\";","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_ADDPOINTS_SUCCESS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"            \"Added %1$s points to %2$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Name name;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Points points;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs an AddPointsCommand to add the specified {@code Points}","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"     * to the person identified by {@code Name}.","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param name of the person in the list to edit the points","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param points to be added to the persons current points","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    public AddPointsCommand(Name name, Points points) {","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireAllNonNull(name, points);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.points \u003d points;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        Optional\u003cPerson\u003e personOptional \u003d lastShownList.stream()","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"                .filter(person -\u003e person.getName().equals(this.name))","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"                .findFirst();","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (personOptional.isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new CommandException(","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"                    Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person personToEdit \u003d personOptional.get();","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points newPoints \u003d new Points(Integer.toString(","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"                personToEdit.getPoints().getValue() + this.points.getValue()));","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(),","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"                personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"                personToEdit.getAddress(), personToEdit.getMembership(),","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"                personToEdit.getTags(), newPoints, personToEdit.getOrders());","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!(other instanceof AddPointsCommand)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand e \u003d (AddPointsCommand) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"        return name.equals(e.name)","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"                \u0026\u0026 points.equals(e.points);","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"    private String generateSuccessMessage(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"        return String.format(","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"                MESSAGE_ADDPOINTS_SUCCESS, this.points.value,","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"                person.getName());","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":94,"billyhoce":1}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_CONFIRM \u003d \"Are you sure you want to clear the address book? Use\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"            + \"clear --force\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"            + \"to confirm clearing of the address book.\";","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    private final boolean isForced;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    public ClearCommand() {","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"        isForced \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"    public ClearCommand(boolean isForced) {","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"        this.isForced \u003d isForced;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"        if (!(isForced)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"            return new CommandResult(MESSAGE_CONFIRM);","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"                || (other instanceof ClearCommand // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"                \u0026\u0026 isForced \u003d\u003d ((ClearCommand) other).isForced); // state check","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kokerinks":21,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"            + \"Orders cannot be edited this way.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"            + \"[\" + PREFIX_POINTS + \"POINTS]...\\n\"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"billyhoce"},"content":"     * edited with {@code editPersonDescriptor}. Orders of {@code personToEdit} is copied","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"billyhoce"},"content":"     * over to the returned {@code Person}.","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"kab-dot"},"content":"        Membership updatedMembership \u003d personToEdit.getMembership(); // edit command does not allow editing remarks","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points updatedPoints \u003d editPersonDescriptor.getPoints().orElse(personToEdit.getPoints());","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"        ArrayList\u003cOrder\u003e updatedOrders \u003d editPersonDescriptor.getOrders().orElse(personToEdit.getOrders());","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedMembership, updatedTags,","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"                updatedPoints, updatedOrders);","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"kinjalagarwal1810"},"content":"        private Points points;","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"billyhoce"},"content":"        private ArrayList\u003cOrder\u003e orders;","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"kinjalagarwal1810"},"content":"            setPoints(toCopy.points);","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"billyhoce"},"content":"            setOrders(toCopy.orders);","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"kinjalagarwal1810"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, points);","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"kinjalagarwal1810"},"content":"        public void setPoints(Points points) {","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"kinjalagarwal1810"},"content":"            this.points \u003d points;","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"kinjalagarwal1810"},"content":"        public Optional\u003cPoints\u003e getPoints() {","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"kinjalagarwal1810"},"content":"            return Optional.ofNullable(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":237,"author":{"gitId":"billyhoce"},"content":"        /**","lastModifiedDate":"2024-03-16"},{"lineNumber":238,"author":{"gitId":"billyhoce"},"content":"         * Sets {@code orders} to this object\u0027s {@code orders}.","lastModifiedDate":"2024-03-16"},{"lineNumber":239,"author":{"gitId":"billyhoce"},"content":"         * A defensive copy of {@code orders} is used internally.","lastModifiedDate":"2024-03-16"},{"lineNumber":240,"author":{"gitId":"billyhoce"},"content":"         */","lastModifiedDate":"2024-03-16"},{"lineNumber":241,"author":{"gitId":"billyhoce"},"content":"        public void setOrders(ArrayList\u003cOrder\u003e orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"billyhoce"},"content":"            this.orders \u003d (orders !\u003d null) ? new ArrayList\u003c\u003e(orders) : null;","lastModifiedDate":"2024-03-16"},{"lineNumber":243,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":244,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":245,"author":{"gitId":"billyhoce"},"content":"        /**","lastModifiedDate":"2024-03-16"},{"lineNumber":246,"author":{"gitId":"billyhoce"},"content":"         * Returns an order ArrayList","lastModifiedDate":"2024-03-16"},{"lineNumber":247,"author":{"gitId":"billyhoce"},"content":"         * Returns {@code Optional#empty()} if {@code ArrayList} is null.","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"billyhoce"},"content":"         */","lastModifiedDate":"2024-03-16"},{"lineNumber":249,"author":{"gitId":"billyhoce"},"content":"        public Optional\u003cArrayList\u003cOrder\u003e\u003e getOrders() {","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"billyhoce"},"content":"            return (orders !\u003d null) ? Optional.of(orders) : Optional.empty();","lastModifiedDate":"2024-03-16"},{"lineNumber":251,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":252,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":269,"author":{"gitId":"kinjalagarwal1810"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-11"},{"lineNumber":270,"author":{"gitId":"kinjalagarwal1810"},"content":"                    \u0026\u0026 Objects.equals(points, otherEditPersonDescriptor.points);","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":281,"author":{"gitId":"kinjalagarwal1810"},"content":"                    .add(\"points\", points)","lastModifiedDate":"2024-03-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":284,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kab-dot":2,"kinjalagarwal1810":22,"-":237,"billyhoce":25}},{"path":"src/main/java/seedu/address/logic/commands/SeedDataCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":" * Seed the address book with sample data.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"public class SeedDataCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    public static final String COMMAND_WORD \u003d \"seedData\";","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added new members from seed data into the address book successfully!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Every member from seed data already exist in the address book!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"    private static final Person[] sampleData \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        AddressBook addressBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"        boolean hasAdded \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"        for (Person person : sampleData) {","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"            if (!addressBook.hasPerson(person)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"                model.addPerson(person);","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"                hasAdded \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        if (hasAdded) {","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"kokerinks":38}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"                        PREFIX_POINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS)","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"                PREFIX_POINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        Membership membership \u003d new Membership(\"T1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Default to \"0\" if points are not provided","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points points \u003d argMultimap.getValue(PREFIX_POINTS).isPresent()","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"                ? ParserUtil.parsePoints(argMultimap.getValue(PREFIX_POINTS).get())","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"                : new Points(\"0\");","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"        Person person \u003d new Person(name, phone, email, address, membership, tagList, points, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kab-dot":2,"kinjalagarwal1810":11,"-":57,"billyhoce":2}},{"path":"src/main/java/seedu/address/logic/parser/AddMemshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMSHIP;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.AddMemshipCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":" * Parses input arguments and creates a new {@code Membership Command} object","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"public class AddMemshipCommandParser implements Parser\u003cAddMemshipCommand\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"    public AddMemshipCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEMSHIP);","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"        Name name;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getPreamble());","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"        String mship \u003d argMultimap.getValue(PREFIX_MEMSHIP).orElse(\"\");","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        if (!Membership.isValidMembership(mship) || mship.isBlank()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"            throw new ParseException(Membership.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"        return new AddMemshipCommand(name, mship);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kab-dot":33,"kokerinks":5}},{"path":"src/main/java/seedu/address/logic/parser/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ORDER;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":" * Parses input arguments and creates a new AddOrderCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"public class AddOrderCommandParser implements Parser\u003cAddOrderCommand\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderCommand","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"     * and returns a AddOrderCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"                PREFIX_NAME, PREFIX_ORDER);","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ORDER)","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"        String trimmedName \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"        String[] nameKeywords \u003d trimmedName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"        Order order \u003d ParserUtil.parseOrder(argMultimap.getValue(PREFIX_ORDER).get());","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"        return new AddOrderCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)), order);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"billyhoce":48}},{"path":"src/main/java/seedu/address/logic/parser/AddPointsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.AddPointsCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":" * Parses input arguments and creates a new {@code AddPointsCommand} object.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddPointsCommandParser implements Parser\u003cAddPointsCommand\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddPointsCommand}","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     * and returns an {@code AddPointsCommand} object for execution.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    public AddPointsCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_POINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_POINTS)","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points points \u003d ParserUtil.parsePoints(argMultimap.getValue(PREFIX_POINTS).orElse(\"\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new AddPointsCommand(name, points);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns true if all the given prefixes are present in the given ArgumentMultimap and not empty.","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"            Optional\u003cString\u003e value \u003d argumentMultimap.getValue(prefix);","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (!value.isPresent() || value.get().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"                return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":55}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.AddMemshipCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddPointsCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.SeedDataCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"        case SeedDataCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"            return new SeedDataCommand();","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"        case AddMemshipCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"            return new AddMemshipCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"        case AddPointsCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new AddPointsCommandParser().parse(arguments);","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kab-dot":4,"kokerinks":5,"kinjalagarwal1810":3,"-":85,"billyhoce":5}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":" * Parses input arguments and creates a new ClearCommand object","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"     * and returns a ClearCommand object for execution.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"        if (args.contains(\" --force\")) {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"            return new ClearCommand(true);","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"        return new ClearCommand(false);","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"kokerinks":22}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"hp/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"    public static final Prefix PREFIX_MEMSHIP \u003d new Prefix(\"ms/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final Prefix PREFIX_POINTS \u003d new Prefix(\"p/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    public static final Prefix PREFIX_ORDER \u003d new Prefix(\"o/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kab-dot":1,"kinjalagarwal1810":2,"-":14,"billyhoce":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"                        PREFIX_POINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"                PREFIX_POINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"        if (argMultimap.getValue(PREFIX_POINTS).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"            editPersonDescriptor.setPoints(ParserUtil.parsePoints(argMultimap.getValue(PREFIX_POINTS).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG))","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"                .ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kinjalagarwal1810":5,"kokerinks":5,"-":82}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"kab-dot"},"content":"     * Parses a {@code String membership} into a {@code Membership}.","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"kab-dot"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"kab-dot"},"content":"     * @throws ParseException if the given {@code membership} is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"kab-dot"},"content":"    public static Membership parseMembership(String membership) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"kab-dot"},"content":"        requireNonNull(membership);","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"kab-dot"},"content":"        String trimmedMembership \u003d membership.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"kab-dot"},"content":"        if (!Membership.isValidMembership(trimmedMembership)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"kab-dot"},"content":"            throw new ParseException(Membership.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"kab-dot"},"content":"        return new Membership(trimmedMembership);","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses a {@code String points} into a {@code Points}.","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws ParseException if the given {@code points} is invalid (not a non-negative integer).","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static Points parsePoints(String points) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"kinjalagarwal1810"},"content":"        String trimmedPoints \u003d points.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!Points.isValidPoints(trimmedPoints)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new ParseException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"kinjalagarwal1810"},"content":"        return new Points(trimmedPoints);","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"billyhoce"},"content":"     * Parses a {@code String order} into an {@code Order}.","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"billyhoce"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"billyhoce"},"content":"     * @throws ParseException if the given {@code order} is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"billyhoce"},"content":"    public static Order parseOrder(String order) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"billyhoce"},"content":"        requireNonNull(order);","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"billyhoce"},"content":"        String trimmedOrder \u003d order.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"billyhoce"},"content":"        if (!Address.isValidAddress(trimmedOrder)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"billyhoce"},"content":"            throw new ParseException(Order.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":169,"author":{"gitId":"billyhoce"},"content":"        return new Order(trimmedOrder);","lastModifiedDate":"2024-03-15"},{"lineNumber":170,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":171,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":172,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kab-dot":16,"kinjalagarwal1810":14,"-":124,"billyhoce":19}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"%s %s %s\", addressBook, userPrefs, filteredPersons);","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kokerinks":3,"-":148}},{"path":"src/main/java/seedu/address/model/person/Membership.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":" * Represents a Person\u0027s membership tier in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMembership(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"public class Membership {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"            \"Membership tier should be one of the following: T1, T2, T3\";","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    // This regex matches only \u0027T1\u0027, \u0027T2\u0027, or \u0027T3\u0027.","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"    public static final String VALIDATION_REGEX \u003d \"T[123]\";","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    public final String value;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"     * Constructs a {@code Membership}.","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"     * @param membership A valid membership tier.","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    public Membership(String membership) {","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"        requireNonNull(membership);","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"        checkArgument(isValidMembership(membership), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"        value \u003d membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"     * Returns true if a given string is a valid membership tier.","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"    public static boolean isValidMembership(String test) {","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"        return value;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"        if (!(other instanceof Membership)) { // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"        Membership otherMembership \u003d (Membership) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"        return value.equals(otherMembership.value);","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kab-dot":61}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kokerinks":1,"-":66}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"    private final Membership membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Points points;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    private final ArrayList\u003cOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Membership membership, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"                  Points points, ArrayList\u003cOrder\u003e orders) {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"        requireAllNonNull(name, phone, email, address, membership, tags, points, orders);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"        this.membership \u003d membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.points \u003d points;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"    public Membership getMembership() {","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"        return membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Points getPoints() {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        return points;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"     * Returns a copy of the orders of this Person","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"    public ArrayList\u003cOrder\u003e getOrders() {","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"        ArrayList\u003cOrder\u003e copy \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"        for (Order order : orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"            copy.add(order.clone());","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"        return copy;","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"     * Adds an Order to the list of orders of this Person","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"    public void addOrders(Order order) {","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"        this.orders.add(order);","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"kab-dot"},"content":"                \u0026\u0026 membership.equals(otherPerson.membership)","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"billyhoce"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"billyhoce"},"content":"                \u0026\u0026 points.equals(otherPerson.points)","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"billyhoce"},"content":"                \u0026\u0026 orders.equals(otherPerson.orders);","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"billyhoce"},"content":"        return Objects.hash(name, phone, email, address, membership, tags, points, orders);","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"kab-dot"},"content":"                .add(\"membership\", membership)","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"kokerinks"},"content":"                .add(\"points\", points)","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"billyhoce"},"content":"                .add(\"orders\", orders)","lastModifiedDate":"2024-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kab-dot":8,"kinjalagarwal1810":7,"kokerinks":1,"-":113,"billyhoce":29}},{"path":"src/main/java/seedu/address/model/person/Points.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public final class Points {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"            \"Points should be a non-negative integer.\";","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public final int value;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a {@code Points} object.","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param points A valid points string.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Points(final String points) {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        requireNonNull(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        checkArgument(isValidPoints(points), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.value \u003d Integer.parseInt(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns true if a given string is a valid points amount.","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param test The string to test.","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return true if the string represents a non-negative integer.","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static boolean isValidPoints(String test) {","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"            int value \u003d Integer.parseInt(test);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"            return value \u003e\u003d 0; // Points must be non-negative","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"            return false; // The string was not an integer.","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        return Integer.toString(value);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the integer value of points.","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The integer value of the points.","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    public int getValue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.value;","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean equals(final Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!(other instanceof Points)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points otherPoints \u003d (Points) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.value \u003d\u003d otherPoints.value;","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"        return Integer.hashCode(value);","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":75}},{"path":"src/main/java/seedu/address/model/person/orders/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.model.person.orders;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":" * Represents an order made by a Person","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"public class Order implements Cloneable {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Orders items can take any values, and it should not be blank\";","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"    public static final String MESSAGE_INVALID_DATETIME \u003d \"Order DateTime is invalid\";","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    /*","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"     * The first character of the order must not be a whitespace,","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    public final String items;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"    public final LocalDateTime orderDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"     * Constructs an {@code Order}.","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"     * @param items A valid order","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    public Order(String items) {","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"        requireNonNull(items);","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"        checkArgument(isValidItems(items), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"        this.items \u003d items;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"        this.orderDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"     * Constructs an {@code Order} with a specific {@code LocalDateTime} ordered.","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"     * @param items A valid order","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"     * @param orderDateTime The time of this order","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"    public Order(String items, LocalDateTime orderDateTime) {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"        requireNonNull(items);","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"        requireNonNull(orderDateTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        checkArgument(isValidItems(items), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"        this.items \u003d items;","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"        this.orderDateTime \u003d orderDateTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"     * Returns true if a given string is a valid item.","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"    public static boolean isValidItems(String test) {","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"        return orderDateTime.toString() + \" \" + items;","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"    public Order clone() {","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"        return new Order(items, orderDateTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"        return items.equals(otherOrder.items) \u0026\u0026 orderDateTime.equals(otherOrder.orderDateTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"billyhoce":83}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    public static final Membership EMPTY_MEMSHIP \u003d new Membership(\"T1\");","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Membership(\"T1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"                getTagSet(\"friends\"), new Points(\"0\"), getOrderArrayList(\"Cupcake x 3@2007-12-03T10:15:30\")),","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Membership(\"T1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Points(\"0\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"                    getOrderArrayList(\"Cookies x 5@2012-03-21T07:45:01\", \"Cupcake x 2@2014-12-11T13:01:02\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Membership(\"T1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"                getTagSet(\"neighbours\"), new Points(\"0\"), getOrderArrayList(\"Kaya Toast x 1@2024-01-01T07:00:00\")),","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Membership(\"T1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"                getTagSet(\"family\"), new Points(\"0\"), getOrderArrayList()),","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Membership(\"T1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"                getTagSet(\"classmates\"), new Points(\"0\"), getOrderArrayList(\"Cheese Tart x 6@2023-06-30T23:23:23\")),","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Membership(\"T1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"                getTagSet(\"colleagues\"), new Points(\"0\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"                    getOrderArrayList(\"Chocolate Waffle x 1@2023-01-01T13:13:13\",","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"                            \"Peanut Butter Waffle x 1@2023-01-02T14:14:14\",","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"                            \"Kaya Waffle x 1@2023-01-03T15:15:15\"))","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"     * Returns a order arraylist containing the list of orders represented by the list of strings given","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"     * @param strings in the format of \"ORDER_ITEMS@ORDER_DATETIME\", where ORDER_ITEMS is any non-empty string,","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"     *      * and ORDER_DATETIME is a string that can be parsed by {@code LocalDateTime.parse()}","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"    public static ArrayList\u003cOrder\u003e getOrderArrayList(String... strings) {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"                .map(str -\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"                    String[] parts \u003d str.split(\"@\");","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"                    return new Order(parts[0], LocalDateTime.parse(parts[1]));","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"                })","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kab-dot":2,"kinjalagarwal1810":7,"-":48,"billyhoce":27}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"class JsonAdaptedOrder {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    private final String items;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    private final String orderDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given {@code items} and {@code orderDateTime}.","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"items\") String items, @JsonProperty(\"orderDateTime\") String orderDateTime) {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"        this.items \u003d items;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"        this.orderDateTime \u003d orderDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"        items \u003d source.items;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"        orderDateTime \u003d source.orderDateTime.toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"     * Converts this Jackson-friendly adapted order object into the model\u0027s {@code Order} object.","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"        if (!Order.isValidItems(items)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"            throw new IllegalValueException(Order.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"            LocalDateTime modelOrderDateTime \u003d LocalDateTime.parse(orderDateTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"            return new Order(items, modelOrderDateTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"            throw new IllegalValueException(Order.MESSAGE_INVALID_DATETIME);","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"billyhoce":53}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"    private final String membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final String points;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"                             @JsonProperty(\"membership\") String membership,","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"points\") String points,","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"                             @JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"        this.membership \u003d membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.points \u003d points;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"        if (orders !\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"            this.orders.addAll(orders);","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"        membership \u003d source.getMembership().value;","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        points \u003d String.valueOf(source.getPoints().getValue());","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"        orders.addAll(source.getOrders().stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"                .map(JsonAdaptedOrder::new)","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"        final List\u003cOrder\u003e personOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"        for (JsonAdaptedOrder order : orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"            personOrders.add(order.toModelType());","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"kab-dot"},"content":"        if (membership \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"kab-dot"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"kab-dot"},"content":"                    Membership.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"kab-dot"},"content":"        final Membership modelMembership \u003d new Membership(membership);","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (points \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Points.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!Points.isValidPoints(points)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new IllegalValueException(Points.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Points modelPoints \u003d new Points(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"billyhoce"},"content":"        final ArrayList\u003cOrder\u003e modelOrders \u003d new ArrayList\u003c\u003e(personOrders);","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"billyhoce"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelMembership,","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"billyhoce"},"content":"                modelTags, modelPoints, modelOrders);","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kab-dot":10,"kinjalagarwal1810":14,"-":107,"billyhoce":18}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    private Label membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Label points;","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"    private Label orders;","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"        membership.setText(person.getMembership().value);","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"        orders.setText(buildOrderString(person.getOrders()));","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        points.setText(String.valueOf(person.getPoints().value));","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"    private static String buildOrderString(ArrayList\u003cOrder\u003e orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"        StringBuilder orderStringBuilder \u003d new StringBuilder(\"Orders:\\n\");","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"        for (Order order : orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"            orderStringBuilder.append(order.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"            orderStringBuilder.append(\"\\n\");","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"        return orderStringBuilder.toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kab-dot":3,"kinjalagarwal1810":2,"-":60,"billyhoce":14}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"  \u003cTextField styleClass\u003d\"command-field\" fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"kokerinks":1,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":".root {","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"    /* Use these to easily change color of the components */","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"    -fx-primary-color: #000000;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"    -fx-secondary-color: #58320d;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"    -fx-terminal-color: #000000;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"    -fx-contacts-color-odd: #444444;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"    -fx-contacts-color-even: #333333;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    /* Feel free to change other properties/colors below as well \u003d) */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"    -fx-base: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"    -fx-control-inner-background: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-contacts-color-even;","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-contacts-color-odd;","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":146,"author":{"gitId":"kokerinks"},"content":"     -fx-background-color: -fx-terminal-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"kokerinks"},"content":"     -fx-font-family: \"Courier New\";","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"kokerinks"},"content":"     -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"kokerinks"},"content":"     -fx-border-color: derive(-fx-primary-color, 10%);","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"kokerinks"},"content":"    -fx-border-color: derive(-fx-primary-color, 25%);","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"kokerinks"},"content":"    -fx-border-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":195,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 30%);","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 50%);","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"kokerinks"},"content":"  -fx-text-fill: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 25%);","lastModifiedDate":"2024-03-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 20%);","lastModifiedDate":"2024-03-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: derive(-fx-primary-color, 50%);","lastModifiedDate":"2024-03-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"kokerinks"},"content":"    -fx-font-family: \"Inconsolata\";","lastModifiedDate":"2024-03-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":343,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"kokerinks"},"content":"    -fx-background-color: transparent, -fx-terminal-color, transparent, -fx-terminal-color;","lastModifiedDate":"2024-03-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"kokerinks":44,"-":321}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"      \u003cLabel fx:id\u003d\"points\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$points\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"      \u003cLabel fx:id\u003d\"membership\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$membership\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"      \u003cLabel fx:id\u003d\"orders\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$orders\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kab-dot":1,"kinjalagarwal1810":1,"-":36,"billyhoce":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POINTS_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"kokerinks"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + POINTS_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kokerinks":2,"-":174}},{"path":"src/test/java/seedu/address/logic/commands/AddMemshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_MSHIP_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_MSHIP_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"//import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"public class AddMemshipCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String MEMBERSHIP_STUB \u003d \"T1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"    public void execute_changeMembershipUnfilteredList_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withMembership(MEMBERSHIP_STUB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"        // Create a command to change the membership of the first person","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"        AddMemshipCommand addMembershipCommand \u003d new AddMemshipCommand(firstPerson.getName(), MEMBERSHIP_STUB);","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"        // Expected success message","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"        String expectedMessage \u003d String.format(AddMemshipCommand.MESSAGE_ADD_MEMBERSHIP_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"                firstPerson.getName(), MEMBERSHIP_STUB);","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        // Set up the expected model with the person\u0027s membership updated","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"        // Assert that the command succeeded","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"        assertCommandSuccess(addMembershipCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"    public void execute_invalidPersonNameUnfilteredList_failure() {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"        // Name that does not exist in the address book","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"        Name outOfBoundName \u003d new Name(\"Nonexistent Name\");","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"        // Create a command with a non-existent person","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"        AddMemshipCommand addMembershipCommand \u003d new AddMemshipCommand(outOfBoundName, MEMBERSHIP_STUB);","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"        // Assert that the command failed","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"        assertCommandFailure(addMembershipCommand, model, Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"    public void equals() {","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"        // Name of the first person in the list","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"        final Name firstPersonName \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getName();","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"        // Create a standard command for comparison","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"        final AddMemshipCommand standardCommand \u003d new AddMemshipCommand(firstPersonName, MEMBERSHIP_STUB);","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"        AddMemshipCommand commandWithSameValues \u003d new AddMemshipCommand(firstPersonName, MEMBERSHIP_STUB);","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"kab-dot"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"kab-dot"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"        Name secondPersonName \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()).getName();","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"kab-dot"},"content":"        assertFalse(standardCommand.equals(new AddMemshipCommand(secondPersonName, MEMBERSHIP_STUB)));","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"kab-dot"},"content":"        assertFalse(standardCommand.equals(new AddMemshipCommand(firstPersonName, \"T3\")));","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kab-dot":93,"kinjalagarwal1810":1}},{"path":"src/test/java/seedu/address/logic/commands/AddOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"public class AddOrderCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    public void constructor_nullNameContainsKeywordsPredicate_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"                new AddOrderCommand(null, new Order(\"testitem\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"    public void constructor_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"                new AddOrderCommand(new NameContainsKeywordsPredicate(Collections.singletonList(\"test\")), null));","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"    public void execute_personNotFoundInFilteredPersonList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        List\u003cString\u003e predicate \u003d Collections.singletonList(\"benson\");","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"        NameContainsKeywordsPredicate bensonPredicate \u003d new NameContainsKeywordsPredicate(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"        Order orderToBeAdded \u003d new Order(\"Kaya Toast x 1\", LocalDateTime.parse(\"2024-01-01T07:00:00\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"        AddOrderCommand addOrderToSecondTypicalPerson \u003d new AddOrderCommand(bensonPredicate, orderToBeAdded);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        Person bensonWithAddedOrder \u003d new PersonBuilder(BENSON).withOrders(","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"                \"Cookies x 5@2012-03-21T07:45:01\",","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"                \"Cupcake x 2@2014-12-11T13:01:02\",","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"                \"Kaya Toast x 1@2024-01-01T07:00:00\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"        expectedModel.setPerson(BENSON, bensonWithAddedOrder);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"        assertCommandSuccess(addOrderToSecondTypicalPerson, model,","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"                \"Added order to Person: Benson Meier\", expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"    public void execute_personFoundInFilteredPersonList_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"        List\u003cString\u003e predicate \u003d Collections.singletonList(\"nobody\");","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"        NameContainsKeywordsPredicate nobodyPredicate \u003d new NameContainsKeywordsPredicate(predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"        Order orderToBeAdded \u003d new Order(\"Kaya Toast x 1\", LocalDateTime.parse(\"2024-01-01T07:00:00\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"        AddOrderCommand addOrderToSecondTypicalPerson \u003d new AddOrderCommand(nobodyPredicate, orderToBeAdded);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_PERSON_NOT_FOUND, () -\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"                addOrderToSecondTypicalPerson.execute(model));","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"    public void generateSuccessMessage_properPersonPassedIn_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"        Person personPassedIn \u003d ALICE;","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"        String expectedMessage \u003d \"Added order to Person: Alice Pauline\";","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"        assertEquals(AddOrderCommand.generateSuccessMessage(personPassedIn), expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"        NameContainsKeywordsPredicate johnny1 \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Johnny\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        NameContainsKeywordsPredicate johnny2 \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Johnny\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"        NameContainsKeywordsPredicate walker \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Walker\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"        Order kayatoast1 \u003d new Order(\"Kaya Toast x 1\", LocalDateTime.parse(\"2024-01-01T07:00:00\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"        Order kayatoast2 \u003d new Order(\"Kaya Toast x 1\", LocalDateTime.parse(\"2024-01-01T07:00:00\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"        Order cookies \u003d new Order(\"Cookies x 5\", LocalDateTime.parse(\"2012-03-21T07:45:01\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"        AddOrderCommand addJohnnyKayatoastCommand1 \u003d new AddOrderCommand(johnny1, kayatoast1);","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"        AddOrderCommand addJohnnyKayatoastCommand2 \u003d new AddOrderCommand(johnny2, kayatoast2);","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"        AddOrderCommand addJohnnyCookiesCommand \u003d new AddOrderCommand(johnny1, cookies);","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"        AddOrderCommand addWalkerCookiesCommand \u003d new AddOrderCommand(walker, cookies);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"billyhoce"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"billyhoce"},"content":"        assertTrue(addJohnnyKayatoastCommand1.equals(addJohnnyKayatoastCommand1));","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"billyhoce"},"content":"        // same items and orderDateTime -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"billyhoce"},"content":"        assertTrue(addJohnnyKayatoastCommand1.equals(addJohnnyKayatoastCommand2));","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"billyhoce"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"billyhoce"},"content":"        assertFalse(addJohnnyKayatoastCommand1.equals(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"billyhoce"},"content":"        assertFalse(addJohnnyKayatoastCommand1.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"billyhoce"},"content":"        // different personNamePredicate -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"        assertFalse(addJohnnyCookiesCommand.equals(addWalkerCookiesCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"billyhoce"},"content":"        // different items -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"        assertFalse(addJohnnyKayatoastCommand1.equals(addJohnnyCookiesCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"billyhoce":118}},{"path":"src/test/java/seedu/address/logic/commands/AddPointsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddPointsCommand.","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddPointsCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String POINTS_STUB \u003d \"20\";","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute_addPointsUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"        Integer newPoints \u003d Integer.parseInt(POINTS_STUB) + firstPerson.getPoints().getValue();","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withPoints(Integer.toString(newPoints)).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand addPointsCommand \u003d new AddPointsCommand(firstPerson.getName(), new Points(POINTS_STUB));","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        String expectedMessage \u003d String.format(AddPointsCommand.MESSAGE_ADDPOINTS_SUCCESS, POINTS_STUB,","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"                firstPerson.getName());","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertCommandSuccess(addPointsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute_invalidPersonNameUnfilteredList_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name outOfBoundName \u003d new Name(\"Nonexistent Name\");","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand addPointsCommand \u003d new AddPointsCommand(outOfBoundName, new Points(POINTS_STUB));","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertCommandFailure(addPointsCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Name firstPersonName \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getName();","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        final AddPointsCommand standardCommand \u003d new AddPointsCommand(firstPersonName, new Points(POINTS_STUB));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand commandWithSameValues \u003d new AddPointsCommand(firstPersonName, new Points(POINTS_STUB));","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name secondPersonName \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()).getName();","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(new AddPointsCommand(secondPersonName, new Points(POINTS_STUB))));","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different points -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(standardCommand.equals(new AddPointsCommand(firstPersonName, new Points(\"30\"))));","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":78,"kokerinks":2}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    public void execute_withoutForce_success() {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_CONFIRM, expectedModel);","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new ClearCommand(true), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new ClearCommand(true), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kokerinks":9,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ORDER;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"    public static final String VALID_MSHIP_AMY \u003d \"T1\";","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"    public static final String VALID_MSHIP_BOB \u003d \"T1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String VALID_POINTS_AMY \u003d \"50\";","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String VALID_POINTS_BOB \u003d \"75\";","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"    public static final String VALID_ORDER_COOKIES \u003d \"Cookies x 3\";","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"    public static final String VALID_ORDER_CUPCAKES \u003d \"Cupcakes x 1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String POINTS_DESC_AMY \u003d \" \" + PREFIX_POINTS + VALID_POINTS_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String POINTS_DESC_BOB \u003d \" \" + PREFIX_POINTS + VALID_POINTS_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"    public static final String ORDER_ITEM_COOKIES \u003d \" \" + PREFIX_ORDER + VALID_ORDER_COOKIES;","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"    public static final String ORDER_ITEM_CUPCAKES \u003d \" \" + PREFIX_ORDER + VALID_ORDER_CUPCAKES;","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String INVALID_POINTS_DESC \u003d \" \" + PREFIX_POINTS + \"-20\"; // negative int not allows in points","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"    public static final String INVALID_ORDER_ITEM \u003d \" \" + PREFIX_ORDER; // empty string not allowed for order items","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"                .withTags(VALID_TAG_FRIEND).withPoints(VALID_POINTS_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withPoints(VALID_POINTS_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kab-dot":2,"kinjalagarwal1810":8,"-":126,"billyhoce":6}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":183,"billyhoce":2}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", points\u003d\"","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"                + editPersonDescriptor.getPoints().orElse(null) + \"}\";","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kinjalagarwal1810":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/SeedDataCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"public class SeedDataCommandTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    private static final Person[] sampleData \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"        for (Person person: sampleData) {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"            expectedModel.addPerson(person);","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new SeedDataCommand(), model, SeedDataCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"    public void execute_addressBookWithSomeContacts_success() {","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        model.addPerson(sampleData[0]);","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"        model.addPerson(sampleData[1]);","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        model.addPerson(sampleData[3]);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        // pre-existing contacts","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"        expectedModel.addPerson(sampleData[0]);","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"        expectedModel.addPerson(sampleData[1]);","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"        expectedModel.addPerson(sampleData[3]);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"        // new contacts added","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"        for (int i \u003d 0; i \u003c sampleData.length; i++) {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"            if (i !\u003d 0 \u0026\u0026 i !\u003d 1 \u0026\u0026 i !\u003d 3) {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"                expectedModel.addPerson(sampleData[i]);","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"        assertCommandSuccess(new SeedDataCommand(), model, SeedDataCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"    public void execute_addressBookWithAllContacts_failure() {","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"        for (Person person: sampleData) {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"            model.addPerson(person);","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"        assertCommandFailure(new SeedDataCommand(), model, SeedDataCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"kokerinks":62}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_POINTS_DESC;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POINTS_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POINTS_DESC_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + POINTS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + POINTS_DESC_BOB,","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + POINTS_DESC_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"        // multiple points","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, POINTS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POINTS));","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + POINTS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"                        PREFIX_PHONE, PREFIX_POINTS));","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"kinjalagarwal1810"},"content":"        // invalid points","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, INVALID_POINTS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"kinjalagarwal1810"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POINTS));","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"kinjalagarwal1810"},"content":"        // invalid points","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_POINTS_DESC,","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"kinjalagarwal1810"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_POINTS));","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"kinjalagarwal1810"},"content":"        Person expectedPersonTags \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-15"},{"lineNumber":154,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":155,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + POINTS_DESC_AMY,","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"kinjalagarwal1810"},"content":"                new AddCommand(expectedPersonTags));","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kinjalagarwal1810":27,"-":188}},{"path":"src/test/java/seedu/address/logic/parser/AddMemshipCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMSHIP;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import seedu.address.logic.commands.AddMemshipCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"public class AddMemshipCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    private AddMemshipCommandParser parser \u003d new AddMemshipCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"        // Missing name","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMSHIP + \"T1\",","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"                Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"        // Missing membership tier","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, \"Alice \",","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"                Membership.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"        // Missing all fields","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"                Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d Membership.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"        // Invalid membership tier","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"        String parserArgs2 \u003d \" \" + \"Alice \" + PREFIX_MEMSHIP + \"X1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, parserArgs2, expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"        // Membership.MESSAGE_CONSTRAINTS contains the message for invalid membership tiers","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"    public void parse_invalidName_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        // Name contains non-alphanumeric characters","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"1-lice \" + PREFIX_MEMSHIP + \"T1\", expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        // Name is blank","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" \" + PREFIX_MEMSHIP + \"T1\", expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"    public void parse_invalidMembership_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"        // Membership is invalid","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d Membership.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, \" \" + \"Alice \" + PREFIX_MEMSHIP + \"X1\", expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"    public void parse_missingFields_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"        // Missing name","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"        assertParseFailure(parser, PREFIX_MEMSHIP + \"T1\", expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"        // Missing membership","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"        expectedMessage \u003d Membership.MESSAGE_CONSTRAINTS + \"\\n\" + AddMemshipCommand.MESSAGE_USAGE;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, \"Alice\", expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"        Name expectedName \u003d new Name(\"Alice\");","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"        String expectedMembership \u003d \"T1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"        // Correct command","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" \" + \"Alice \" + PREFIX_MEMSHIP + \"T1\",","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"                new AddMemshipCommand(expectedName, expectedMembership));","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kab-dot":60,"kokerinks":17}},{"path":"src/test/java/seedu/address/logic/parser/AddOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ORDER_ITEM_COOKIES;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ORDER_COOKIES;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"public class AddOrderCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    private AddOrderCommandParser parser \u003d new AddOrderCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    public void parse_nameAndOrderPresent_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"        NameContainsKeywordsPredicate expectedNamePred \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Choo\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"            AddOrderCommand actualCommand \u003d parser.parse(NAME_DESC_BOB + ORDER_ITEM_COOKIES);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"            AddOrderCommand expectedCommand \u003d new AddOrderCommand(expectedNamePred,","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"                    new Order(VALID_ORDER_COOKIES, actualCommand.order.orderDateTime));","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"            assertEquals(actualCommand, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"            fail(\"Invalid userInput\");","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"billyhoce":36}},{"path":"src/test/java/seedu/address/logic/parser/AddPointsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.logic.commands.AddPointsCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddPointsCommandParserTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    private AddPointsCommandParser parser \u003d new AddPointsCommandParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Successful scenario where both name and points are provided","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        Name expectedName \u003d new Name(\"Alice\");","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points expectedPoints \u003d new Points(\"50\");","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand expectedCommand \u003d new AddPointsCommand(expectedName, expectedPoints);","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice \" + PREFIX_POINTS + \"50\", expectedCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Missing name prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \" Alice \" + PREFIX_POINTS + \" 50\",","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Missing points prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, PREFIX_NAME + \" Alice \" + \" 50\",","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Missing all fields","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddPointsCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Invalid name","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" 1-lice \" + PREFIX_POINTS + \" 50\",","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"                Name.MESSAGE_CONSTRAINTS); // Name.MESSAGE_CONSTRAINTS contains the message for invalid names","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Invalid points","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" Alice \" + PREFIX_POINTS + \" -50\",","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"                Points.MESSAGE_CONSTRAINTS); // Points.MESSAGE_CONSTRAINTS contains the message for invalid points","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":50,"kokerinks":3}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ORDER_CUPCAKES;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddOrderCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"import seedu.address.logic.commands.AddPointsCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"        EditCommand expectedCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void parseCommand_addpoints() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Name name \u003d new Name(\"Alice\");","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"        final Points points \u003d new Points(\"50\");","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"        String input \u003d AddPointsCommand.COMMAND_WORD + \" \" + PREFIX_NAME + \" \" + name.fullName + \" \" + PREFIX_POINTS","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"                + \" \" + points.value;","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"        AddPointsCommand command \u003d (AddPointsCommand) parser.parseCommand(input);","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(new AddPointsCommand(name, points), command);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"billyhoce"},"content":"    public void parseCommand_addorder() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"        AddOrderCommand command \u003d (AddOrderCommand) parser.parseCommand(\"addorder n/Amy Bee o/Cupcakes x 1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"        NameContainsKeywordsPredicate namePred \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Amy\", \"Bee\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"billyhoce"},"content":"        Order order \u003d new Order(VALID_ORDER_CUPCAKES, command.order.orderDateTime);","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"        assertEquals(new AddOrderCommand(namePred, order), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kinjalagarwal1810":15,"kokerinks":1,"-":100,"billyhoce":12}},{"path":"src/test/java/seedu/address/logic/parser/ClearCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"public class ClearCommandParserTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    private ClearCommandParser parser \u003d new ClearCommandParser();","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" --force\", new ClearCommand(true));","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    public void parse_noFieldsPresent_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \"\", new ClearCommand(false));","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidFieldsPresent_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" --force --force\", new ClearCommand(true));","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidFieldsPresent_success2() {","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" -force\", new ClearCommand(false));","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    public void parse_invalidFieldsPresent_success3() {","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        assertParseSuccess(parser, \" -f\", new ClearCommand(false));","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"kokerinks":38}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"kokerinks"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kokerinks":1,"-":207}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"                + \", membership\u003d\" + ALICE.getMembership() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"                + \", points\u003d\" + ALICE.getPoints() + \", orders\u003d\" + ALICE.getOrders() + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":98,"billyhoce":3}},{"path":"src/test/java/seedu/address/model/person/PointsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"public class PointsTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points points \u003d new Points(\"5\");","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(points.equals(points));","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(points.equals(new Points(\"5\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(points.equals(1));","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(points.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        // different points -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        Points differentPoints \u003d new Points(\"10\");","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(points.equals(differentPoints));","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void isValidPoints() {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        // valid points","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(Points.isValidPoints(\"10\")); // positive integer","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertTrue(Points.isValidPoints(\"0\")); // zero","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        // invalid points","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(Points.isValidPoints(\"-1\")); // negative integer","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(Points.isValidPoints(\"5.5\")); // non-integer","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertFalse(Points.isValidPoints(\"text\")); // non-numeric","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kinjalagarwal1810":42}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String INVALID_POINTS \u003d \"-50\";","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"    private static final String INVALID_ORDERITEM \u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    private static final String INVALID_ORDERDATETIME \u003d \"13JUNE23\";","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    private static final String VALID_MEMBERSHIP \u003d BENSON.getMembership().toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String VALID_POINTS \u003d BENSON.getPoints().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"    private static final String VALID_ORDERITEM \u003d \"Cupcake x 3\";","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"    private static final String VALID_ORDERDATETIME \u003d \"2023-01-03T15:15:15\";","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"    private static final List\u003cJsonAdaptedOrder\u003e VALID_ORDERS \u003d BENSON.getOrders().stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"            .map(JsonAdaptedOrder::new)","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"                        VALID_TAGS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"                VALID_MEMBERSHIP, VALID_TAGS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"                        VALID_TAGS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"                VALID_MEMBERSHIP, VALID_TAGS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"                        VALID_TAGS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"billyhoce"},"content":"                VALID_MEMBERSHIP, VALID_TAGS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"                        VALID_TAGS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"                VALID_MEMBERSHIP, VALID_TAGS, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"billyhoce"},"content":"                        invalidTags, VALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void toModelType_invalidPoints_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"kinjalagarwal1810"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"kinjalagarwal1810"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_MEMBERSHIP,","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"billyhoce"},"content":"                        VALID_TAGS, INVALID_POINTS, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"kinjalagarwal1810"},"content":"        String expectedMessage \u003d Points.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void toModelType_nullPoints_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"kinjalagarwal1810"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"billyhoce"},"content":"                VALID_MEMBERSHIP, VALID_TAGS, null, VALID_ORDERS);","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"kinjalagarwal1810"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Points.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"billyhoce"},"content":"    public void toModelType_invalidOrderItem_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"billyhoce"},"content":"        List\u003cJsonAdaptedOrder\u003e invalidOrders \u003d new ArrayList\u003c\u003e(VALID_ORDERS);","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"billyhoce"},"content":"        invalidOrders.add(new JsonAdaptedOrder(INVALID_ORDERITEM, VALID_ORDERDATETIME));","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"billyhoce"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"billyhoce"},"content":"                        VALID_MEMBERSHIP, VALID_TAGS, VALID_POINTS, invalidOrders);","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"billyhoce"},"content":"        String expectedMessage \u003d Order.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"billyhoce"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"billyhoce"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"billyhoce"},"content":"    public void toModelType_invalidOrderDateTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"billyhoce"},"content":"        List\u003cJsonAdaptedOrder\u003e invalidOrders \u003d new ArrayList\u003c\u003e(VALID_ORDERS);","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"billyhoce"},"content":"        invalidOrders.add(new JsonAdaptedOrder(VALID_ORDERITEM, INVALID_ORDERDATETIME));","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"billyhoce"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"billyhoce"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"billyhoce"},"content":"                        VALID_MEMBERSHIP, VALID_TAGS, VALID_POINTS, invalidOrders);","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"billyhoce"},"content":"        String expectedMessage \u003d Order.MESSAGE_INVALID_DATETIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"billyhoce"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kab-dot":1,"kinjalagarwal1810":23,"-":101,"billyhoce":44}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"        descriptor.setPoints(person.getPoints());","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        descriptor.setOrders(person.getOrders());","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Sets the {@code Points} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"    public EditPersonDescriptorBuilder withPoints(String points) {","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"        descriptor.setPoints(new Points(points));","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"billyhoce"},"content":"     * Parses the {@code orders} into a {@code ArrayList\u003cOrder\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"billyhoce"},"content":"     * that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"billyhoce"},"content":"    public EditPersonDescriptorBuilder withOrders(String... orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"billyhoce"},"content":"        ArrayList\u003cOrder\u003e orderList \u003d Arrays.stream(orders)","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"billyhoce"},"content":"                .map(str -\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"billyhoce"},"content":"                    String[] parts \u003d str.split(\"@\");","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"billyhoce"},"content":"                    return new Order(parts[0], LocalDateTime.parse(parts[1]));","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"                })","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"billyhoce"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"billyhoce"},"content":"        descriptor.setOrders(orderList);","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"billyhoce"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kinjalagarwal1810":9,"kokerinks":1,"-":87,"billyhoce":20}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import seedu.address.model.person.Membership;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import seedu.address.model.person.Points;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"import seedu.address.model.person.orders.Order;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"    public static final String DEFAULT_MEMBERSHIP \u003d \"T1\";","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static final String DEFAULT_POINTS \u003d \"0\";","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"    private Membership membership;","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Points points;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"    private ArrayList\u003cOrder\u003e orders;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        membership \u003d new Membership(DEFAULT_MEMBERSHIP);","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        points \u003d new Points(DEFAULT_POINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"        orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"        membership \u003d personToCopy.getMembership();","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"        points \u003d personToCopy.getPoints();","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"        orders \u003d new ArrayList\u003c\u003e(personToCopy.getOrders());","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"     * Parses the {@code orders} into a {@code ArrayList\u003cOrder\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"    public PersonBuilder withOrders(String ... orders) {","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"        this.orders \u003d SampleDataUtil.getOrderArrayList(orders);","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Sets the {@code Points} of the {@code Points} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"kinjalagarwal1810"},"content":"    public PersonBuilder withPoints(String points) {","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.points \u003d new Points(points);","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"kab-dot"},"content":"     * Sets the {@code Membership} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"kab-dot"},"content":"    public PersonBuilder withMembership(String membership) {","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"kab-dot"},"content":"        this.membership \u003d new Membership(membership);","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"kab-dot"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Builds and returns a {@code Person} with the current attributes set in the {@code PersonBuilder}.","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"kinjalagarwal1810"},"content":"     * This method provides a way to construct a new {@code Person} instance using the builder pattern. Attributes set","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"kinjalagarwal1810"},"content":"     * in the builder are used to instantiate the {@code Person}. This includes the person\u0027s name, phone number, email,","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"kinjalagarwal1810"},"content":"     * address, membership status, set of tags, and points. If an attribute has not been explicitly set in the builder,","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"kinjalagarwal1810"},"content":"     * the default value for that attribute is used.","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A new {@code Person} instance with attributes specified in the {@code PersonBuilder}.","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":144,"author":{"gitId":"billyhoce"},"content":"        return new Person(name, phone, email, address, membership, tags, points, orders);","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"kab-dot":11,"kinjalagarwal1810":22,"-":100,"billyhoce":14}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"                sb.append(PREFIX_TAG + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"        descriptor.getPoints().ifPresent(points -\u003e sb.append(PREFIX_POINTS).append(points.value).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kokerinks":2,"kinjalagarwal1810":1,"-":61}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MSHIP_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MSHIP_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POINTS_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POINTS_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").withPoints(\"50\")","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"            .withOrders(\"Cupcake x 3@2007-12-03T10:15:30\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withMembership(\"T1\")","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"            .withTags(\"owesMoney\", \"friends\").withPoints(\"70\")","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"            .withOrders(\"Cookies x 5@2012-03-21T07:45:01\", \"Cupcake x 2@2014-12-11T13:01:02\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withMembership(\"T1\").withPoints(\"0\")","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"            .withOrders(\"Kaya Toast x 1@2024-01-01T07:00:00\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withMembership(\"T1\").withTags(\"friends\")","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"            .withPoints(\"100\").withOrders(\"Cheese Tart x 6@2023-06-30T23:23:23\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withMembership(\"T1\").withPoints(\"50\")","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"            .withOrders(\"Chocolate Waffle x 1@2023-01-01T13:13:13\",","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"                    \"Peanut Butter Waffle x 1@2023-01-02T14:14:14\",","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"                    \"Kaya Waffle x 1@2023-01-03T15:15:15\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withMembership(\"T1\").withPoints(\"20\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withMembership(\"T1\").withPoints(\"70\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withPoints(\"50\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withPoints(\"70\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withMembership(VALID_MSHIP_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withTags(VALID_TAG_FRIEND).withPoints(VALID_POINTS_AMY).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withMembership(VALID_MSHIP_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withPoints(VALID_POINTS_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(ALICE).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(BENSON).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(CARL).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(DANIEL).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(ELLE).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(FIONA).build(),","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"                new PersonBuilder(GEORGE).build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"kab-dot":5,"kinjalagarwal1810":9,"-":60,"billyhoce":19}}]
