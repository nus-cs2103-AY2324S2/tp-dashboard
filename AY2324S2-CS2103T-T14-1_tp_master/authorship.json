[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T14-1/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T14-1/tp/graph/badge.svg?token\u003dcu77aESAox)](https://codecov.io/gh/AY2324S2-CS2103T-T14-1/tp)","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"# EffiTrack","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"\u003e Boost productivity, streamline success! Welcome to EffiTrack â€“ where efficiency meets innovation. Revolutionize your workday with seamless employee performance tracking.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"## Value Proposition","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"HR departments often struggle to accurately measure employee efficiency, leading to reduced productivity. Traditional methods of tracking employee performance, such as manual documentation or outdated systems, are time-consuming and prone to errors. EffiTrack solves these challenges by providing a centralized platform to effortlessly monitor employee efficiency.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"## Features","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"- [ ] Add employee information","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"- [ ] List all employees information","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"- [ ] Edit an existing employee information","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"- [ ] Find employees whose names contain any of the given keywords","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"- [ ] Delete a specific employee","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"- [ ] Clear all entries","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"- [ ] Assign task to an employee","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"- [ ] Mark an assigned task as done","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"- [ ] Edit deadline of assigned task","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"- [ ] Change person in charge of the task","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"- [ ] Sort employee based on efficiency","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"- [ ] Display upcoming deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"- [ ] Display fire list","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"- [ ] Generate efficiency report","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"## Get Started","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"1. Download EffiTrack here.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"2. Navigate to your Downloads folder using the terminal.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"3. Type `java -jar EffiTrack.jar` in your terminal.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"4. Press enter.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"5. Give it a try now!","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"## Documentation","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"For the detailed documentation of this project, see the **[EffiTrack Product Website](https://ay2324s2-cs2103t-t14-1.github.io/tp/)**.","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"## Acknowledgement","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"yiwern5":36,"-":3}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":9}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":".background {","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":".command-pane {","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"     -fx-background-color: #F2E6CE;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":".label {","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":".label-bright {","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":".label-header {","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":".text-field {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":".tab-pane {","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"KiatLun"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"KiatLun"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"KiatLun"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"KiatLun"},"content":".table-view {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"KiatLun"},"content":"    -fx-base: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"KiatLun"},"content":"    -fx-control-inner-background: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"KiatLun"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"KiatLun"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 5;","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"KiatLun"},"content":".table-view .column-header-background {","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"KiatLun"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"KiatLun"},"content":"    -fx-size: 35;","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"KiatLun"},"content":"    -fx-border-color:","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"KiatLun"},"content":"        transparent","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"KiatLun"},"content":"        transparent","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"KiatLun"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"KiatLun"},"content":"        transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"KiatLun"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"KiatLun"},"content":".table-view .column-header .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"KiatLun"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"KiatLun"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"KiatLun"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"KiatLun"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"KiatLun"},"content":".split-pane {","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"KiatLun"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"KiatLun"},"content":".list-view {","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"KiatLun"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"KiatLun"},"content":".list-cell {","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"KiatLun"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"KiatLun"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"KiatLun"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 0 0 5 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"KiatLun"},"content":"    -fx-spacing: 10 10 10 10;","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"KiatLun"},"content":".list-cell:filled:even {","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BBAB8C;","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"KiatLun"},"content":"    -fx-background-insets: 0 0 5 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"KiatLun"},"content":".list-cell:filled:odd {","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"KiatLun"},"content":"    -fx-background-insets: 0 0 5 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"KiatLun"},"content":".list-cell:filled:selected {","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #A9B388;","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"KiatLun"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"KiatLun"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"KiatLun"},"content":"    -fx-border-color: #6E8B74;","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"KiatLun"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"KiatLun"},"content":".list-cell .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"KiatLun"},"content":".cell_big_label {","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"KiatLun"},"content":".cell_small_label {","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"KiatLun"},"content":".efficiency_small_label {","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"KiatLun"},"content":".stack-pane {","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"KiatLun"},"content":"     -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"KiatLun"},"content":".pane-with-border {","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"KiatLun"},"content":"     -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"KiatLun"},"content":".status-bar {","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"KiatLun"},"content":".result-display {","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"KiatLun"},"content":".result-display .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"KiatLun"},"content":".status-bar .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"KiatLun"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"KiatLun"},"content":".status-bar-with-border {","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"KiatLun"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"KiatLun"},"content":".status-bar-with-border .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"KiatLun"},"content":".grid-pane {","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"KiatLun"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"KiatLun"},"content":".context-menu {","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 50%);","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"KiatLun"},"content":".context-menu .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"KiatLun"},"content":".menu-bar {","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"KiatLun"},"content":".menu-bar .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-04-04"},{"lineNumber":214,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #B99470;","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"KiatLun"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"KiatLun"},"content":".menu {","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"KiatLun"},"content":".menu .left-container {","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"KiatLun"},"content":".menu:hover {","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"KiatLun"},"content":".menu:hover .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"KiatLun"},"content":".menu:selected {","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":238,"author":{"gitId":"KiatLun"},"content":".menu:focused {","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"KiatLun"},"content":".menu-item {","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derived(#FBF9F1, 30%);","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"KiatLun"},"content":".menu-item:hover {","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"KiatLun"},"content":".menu-item:hover .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"KiatLun"},"content":"/*","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"KiatLun"},"content":" * Metro style Push Button","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"KiatLun"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"KiatLun"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"KiatLun"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"KiatLun"},"content":".button {","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"KiatLun"},"content":"    -fx-border-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":263,"author":{"gitId":"KiatLun"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"KiatLun"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"KiatLun"},"content":".button:hover {","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"KiatLun"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"KiatLun"},"content":"  -fx-background-color: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"KiatLun"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"KiatLun"},"content":".button:focused {","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"KiatLun"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2024-04-04"},{"lineNumber":282,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"KiatLun"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"KiatLun"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":285,"author":{"gitId":"KiatLun"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":288,"author":{"gitId":"KiatLun"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"KiatLun"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2024-04-04"},{"lineNumber":290,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"KiatLun"},"content":".button:default {","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color:#BBAB8C;","lastModifiedDate":"2024-04-04"},{"lineNumber":296,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":298,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":299,"author":{"gitId":"KiatLun"},"content":".button:default:hover {","lastModifiedDate":"2024-04-04"},{"lineNumber":300,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":301,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":302,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":303,"author":{"gitId":"KiatLun"},"content":".dialog-pane {","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":305,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":307,"author":{"gitId":"KiatLun"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":310,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":311,"author":{"gitId":"KiatLun"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2024-04-04"},{"lineNumber":312,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-04-04"},{"lineNumber":313,"author":{"gitId":"KiatLun"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-04"},{"lineNumber":314,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":315,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":316,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":317,"author":{"gitId":"KiatLun"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2024-04-04"},{"lineNumber":318,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 25%);","lastModifiedDate":"2024-04-04"},{"lineNumber":319,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":320,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"KiatLun"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2024-04-04"},{"lineNumber":322,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-04-04"},{"lineNumber":323,"author":{"gitId":"KiatLun"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2024-04-04"},{"lineNumber":324,"author":{"gitId":"KiatLun"},"content":"    -fx-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":325,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":326,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":327,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":328,"author":{"gitId":"KiatLun"},"content":".scroll-bar {","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":330,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":332,"author":{"gitId":"KiatLun"},"content":".scroll-bar .thumb {","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #F2E6CE;","lastModifiedDate":"2024-04-04"},{"lineNumber":334,"author":{"gitId":"KiatLun"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":335,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":336,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":337,"author":{"gitId":"KiatLun"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2024-04-04"},{"lineNumber":338,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":339,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":340,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":341,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":342,"author":{"gitId":"KiatLun"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2024-04-04"},{"lineNumber":343,"author":{"gitId":"KiatLun"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2024-04-04"},{"lineNumber":344,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":345,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":346,"author":{"gitId":"KiatLun"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2024-04-04"},{"lineNumber":347,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2024-04-04"},{"lineNumber":348,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":349,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":350,"author":{"gitId":"KiatLun"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2024-04-04"},{"lineNumber":351,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":352,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":353,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":354,"author":{"gitId":"KiatLun"},"content":"#cardPane {","lastModifiedDate":"2024-04-04"},{"lineNumber":355,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-04"},{"lineNumber":356,"author":{"gitId":"KiatLun"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2024-04-04"},{"lineNumber":357,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":358,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":359,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":360,"author":{"gitId":"KiatLun"},"content":"#commandTypeLabel {","lastModifiedDate":"2024-04-04"},{"lineNumber":361,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2024-04-04"},{"lineNumber":362,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2024-04-04"},{"lineNumber":363,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":364,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":365,"author":{"gitId":"KiatLun"},"content":"#commandTextField {","lastModifiedDate":"2024-04-04"},{"lineNumber":366,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":367,"author":{"gitId":"KiatLun"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-04-04"},{"lineNumber":368,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2024-04-04"},{"lineNumber":369,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-04-04"},{"lineNumber":370,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":371,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":372,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":373,"author":{"gitId":"KiatLun"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2024-04-04"},{"lineNumber":374,"author":{"gitId":"KiatLun"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":376,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":377,"author":{"gitId":"KiatLun"},"content":"#listTitle {","lastModifiedDate":"2024-04-04"},{"lineNumber":378,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":379,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2024-04-04"},{"lineNumber":380,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #B99470;","lastModifiedDate":"2024-04-04"},{"lineNumber":381,"author":{"gitId":"KiatLun"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2024-04-04"},{"lineNumber":382,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":383,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":384,"author":{"gitId":"KiatLun"},"content":"#resultDisplay .content {","lastModifiedDate":"2024-04-04"},{"lineNumber":385,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: transparent, #F2E6CE, transparent, #F2E6CE;","lastModifiedDate":"2024-04-04"},{"lineNumber":386,"author":{"gitId":"KiatLun"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2024-04-04"},{"lineNumber":387,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":388,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":389,"author":{"gitId":"KiatLun"},"content":"#tags {","lastModifiedDate":"2024-04-04"},{"lineNumber":390,"author":{"gitId":"KiatLun"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-04-04"},{"lineNumber":391,"author":{"gitId":"KiatLun"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":392,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":393,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":394,"author":{"gitId":"KiatLun"},"content":"#tags .label {","lastModifiedDate":"2024-04-04"},{"lineNumber":395,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":396,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #6E8B74;","lastModifiedDate":"2024-04-04"},{"lineNumber":397,"author":{"gitId":"KiatLun"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":398,"author":{"gitId":"KiatLun"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":399,"author":{"gitId":"KiatLun"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":400,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-04-04"},{"lineNumber":401,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":401}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":".error {","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":".list-cell:empty {","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"    -fx-background: #FBF9F1;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":".tag-selector {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"    -fx-border-color: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":".tooltip-text {","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":20}},{"path":"bin/main/view/HelpWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"#copyButton {","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BBAB8C;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"#copyButton:hover {","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"#copyButton:armed {","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"#helpMessageContainer {","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":19}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"  \u003cicons\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"  \u003cscene\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"    \u003cScene\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"        \u003c/children\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"KiatLun"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"KiatLun"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"KiatLun"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"KiatLun"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"KiatLun"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"KiatLun"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":44}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"750\" onCloseRequest\u003d\"#handleExit\" title\u003d\"EffiTrack\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"  \u003cicons\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"    \u003cImage url\u003d\"@/images/ET_logo.png\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"  \u003cscene\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"    \u003cScene\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"          \u003cVBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"command-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"KiatLun"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minWidth\u003d\"280\" prefWidth\u003d\"280\" styleClass\u003d\"command-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"KiatLun"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"KiatLun"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"KiatLun"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"KiatLun"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"KiatLun"},"content":"                        \u003cLabel text\u003d\"\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"KiatLun"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"KiatLun"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"KiatLun"},"content":"            \u003cStackPane fx:id\u003d\"notesPlaceholder\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"320\" prefHeight\u003d\"320\" styleClass\u003d\"command-pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"KiatLun"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"KiatLun"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"KiatLun"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"KiatLun"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"KiatLun"},"content":"                        \u003cLabel fx:id\u003d\"listTitle\" text\u003d\"Notes:\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"KiatLun"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"KiatLun"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"KiatLun"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"KiatLun"},"content":"          \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"440\" prefWidth\u003d\"440\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"KiatLun"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"KiatLun"},"content":"              \u003cInsets bottom\u003d\"0\" left\u003d\"0\" right\u003d\"5\" top\u003d\"0\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"KiatLun"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"KiatLun"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"KiatLun"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"KiatLun"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"KiatLun"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"KiatLun"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"KiatLun"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"KiatLun"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"KiatLun"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":71}},{"path":"bin/main/view/PersonListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"          \u003cLabel fx:id\u003d\"task\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$task\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"        \u003cHBox alignment\u003d\"BOTTOM_RIGHT\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"          \u003cLabel fx:id\u003d\"efficiencyLabel\" styleClass\u003d\"efficiency_small_label\" text\u003d\"Efficiency: \" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"KiatLun"},"content":"          \u003cLabel fx:id\u003d\"efficiency\" styleClass\u003d\"efficiency_small_label\" text\u003d\"\\$efficiency \" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"KiatLun"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"KiatLun"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"KiatLun"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"KiatLun"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"KiatLun"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"KiatLun"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"KiatLun"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"KiatLun"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":48}},{"path":"bin/main/view/PersonListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":8}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":9}},{"path":"bin/main/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":12}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"Not a valid FXML file","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":4}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"    archiveFileName \u003d \u0027EffiTrack.jar\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"run {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yiwern5":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"### Yap Ho Wen","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"\u003cimg src\u003d\"images/howen02.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"[[github](https://github.com/howen02)]","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"* Role: Team Lead","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"* Responsibilities: Git expert, Code Quality, Testing","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"### Yeo Zi Yi","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"\u003cimg src\u003d\"images/ziyi22.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"[[github](http://github.com/ziyi22)]","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"* Responsibilities: Code Quality, Deliverables and deadlines, UI","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"### Tsui Yi Wern","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"\u003cimg src\u003d\"images/yiwern5.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"[[github](http://github.com/yiwern5)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"* Responsibilities: Scheduling and tracking, Deliverables and deadlines, UI","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"### Yong Li An","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"\u003cimg src\u003d\"images/wolffe88.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"[[github](http://github.com/wolffe88)]","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"* Responsibilities: Task Management, Deliverables and deadlines, UI","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"KiatLun"},"content":"### Khoo Kiat Lun","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"howen02"},"content":"\u003cimg src\u003d\"images/kiatlun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"KiatLun"},"content":"[[github](http://github.com/KiatLun)]","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"KiatLun"},"content":"* Responsibilities: Documentation, Deliverables and deadlines, UI","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"ziyi22":4,"yiwern5":4,"KiatLun":3,"howen02":7,"wolffe88":4,"-":37}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"# EffiTrack Developer Guide","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-T14-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-T14-1/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-T14-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103T-T14-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-T14-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-T14-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"yiwern5"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-T14-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-T14-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"* can save both EffiTrack data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"### \\[Implemented\\] Undo/redo feature","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"#### Current Implementation","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"The implemented undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"ziyi22"},"content":"### \\[Implemented\\] Assign task feature","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"ziyi22"},"content":"#### Current Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"ziyi22"},"content":"The implemented assign task mechanism is facilitated by `AddressBook`. ","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"ziyi22"},"content":"* `AddressBook#UniquePersonList`: Represents the list of persons stored in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"ziyi22"},"content":"* `AddressBook#UniqueTaskList`: Represents the list of tasks assigned within the address book. ","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"ziyi22"},"content":"Given below is an example usage scenario and how the assign task features works.","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"ziyi22"},"content":"1. Ui","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"ziyi22"},"content":"   * The user executes the command `assign task/Proposal by/20-05-2024 2359 to/2` to assign a task named \"Proposal\" with a specified deadline to the 2nd person in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"ziyi22"},"content":"   ","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"ziyi22"},"content":"2. Parser","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"ziyi22"},"content":"   * The input command is parsed by the `AddressBookParser` component.","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"ziyi22"},"content":"   * The `assign` command keyword triggers the `AssignTaskCommandParser` to extract task details (name, deadline) and the index of the person to assign the task to.","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"ziyi22"},"content":"   * By parsing in `AssignTaskCommandParser`, a `Task` object is created to encapsulate the task details and returns an `AssignTaskCommand` object representing the command to assign the task.","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"ziyi22"},"content":"   ","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"ziyi22"},"content":"3. Logic execution","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"ziyi22"},"content":"   *  The Command object - `AssignTaskCommand` is executed in the `LogicManager`.","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"ziyi22"},"content":"   *  The `AssignTaskCommand` invokes the `assignTask` method in the `Model` component.","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"ziyi22"},"content":"The following sequence diagram shows how an assign task operation goes through the `Logic` component:","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"ziyi22"},"content":"\u003cpuml src\u003d\"diagrams/AssignTaskSequenceDiagram-Logic.puml\" alt\u003d\"AssignTaskSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"ziyi22"},"content":"3. Model operation","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"ziyi22"},"content":"   * The `model#assignTask` internally triggers the `AddressBook#assignTask` to:","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"ziyi22"},"content":"     * a. The `Task` is added to the `UniqueTaskList` in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"ziyi22"},"content":"     * b. Set the person in charge of the `Task` to the identified person.","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"ziyi22"},"content":"     * c. Set the `Person`\u0027s task to the specified task.","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"ziyi22"},"content":"The following sequence diagram shows how an assign task operation goes through the `Model` component:","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"ziyi22"},"content":"\u003cpuml src\u003d\"diagrams/AssignTaskSequenceDiagram-Model.puml\" alt\u003d\"AssignTaskSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"ziyi22"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"ziyi22"},"content":"**Aspect: How assign task executes:**","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"ziyi22"},"content":"* **Alternative 1 (current choice):** Saves all tasks in an additional task list.","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"ziyi22"},"content":"    * Pros: Provides a centralized task management system independent, making it easier to track and manage tasks across different persons..","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"ziyi22"},"content":"    * Cons: Each task need to store additional information, such as the person in charge, leading to redundancy if not managed efficiently.","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"ziyi22"},"content":"* **Alternative 2:** Add task list as a field for each person.","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"ziyi22"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"ziyi22"},"content":"    * Cons: Increases complexity in managing and updating task lists, especially in scenarios involving task delegation or reassignment.","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"howen02"},"content":"### \\[Proposed\\] Efficiency Leaderboard","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"howen02"},"content":"HR will be able to view the top performing staff on a leaderboard","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"howen02"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"howen02"},"content":"1. List of unique people will be fetched and sorted based on efficiency","lastModifiedDate":"2024-03-29"},{"lineNumber":309,"author":{"gitId":"howen02"},"content":"2. Top 3/5/10 performing people will be showcased on the leaderboard","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"ziyi22"},"content":"* has a need to manage all the employees in company.","lastModifiedDate":"2024-03-08"},{"lineNumber":330,"author":{"gitId":"ziyi22"},"content":"* can assign tasks to employees.","lastModifiedDate":"2024-03-16"},{"lineNumber":331,"author":{"gitId":"ziyi22"},"content":"* has a need to check employees\u0027 efficiency.","lastModifiedDate":"2024-03-08"},{"lineNumber":332,"author":{"gitId":"ziyi22"},"content":"* can generate a fire list to cut company costs.","lastModifiedDate":"2024-03-08"},{"lineNumber":333,"author":{"gitId":"ziyi22"},"content":"* prefers smooth and eye-catching GUI.","lastModifiedDate":"2024-03-08"},{"lineNumber":334,"author":{"gitId":"ziyi22"},"content":"* prefers typing to mouse interactions.","lastModifiedDate":"2024-03-08"},{"lineNumber":335,"author":{"gitId":"ziyi22"},"content":"* is reasonably comfortable using CLI apps.","lastModifiedDate":"2024-03-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":337,"author":{"gitId":"ziyi22"},"content":"**Value proposition**: EffiTrack simplifies the task of measuring and monitoring employee efficiency for ","lastModifiedDate":"2024-03-08"},{"lineNumber":338,"author":{"gitId":"ziyi22"},"content":"HR departments. \u003c/br\u003e Instead of using time-consuming and error-prone methods like manual documentation or ","lastModifiedDate":"2024-03-08"},{"lineNumber":339,"author":{"gitId":"ziyi22"},"content":"outdated systems, EffiTrack offers a centralized platform for easy and accurate monitoring of employee performance.","lastModifiedDate":"2024-03-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"wolffe88"},"content":"| Priority | As a â€¦â€‹        | I canâ€¦â€‹                                                      | So that I canâ€¦â€‹                                                                                                                                  |","lastModifiedDate":"2024-03-11"},{"lineNumber":347,"author":{"gitId":"yiwern5"},"content":"|----------|---------------|--------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-28"},{"lineNumber":348,"author":{"gitId":"wolffe88"},"content":"| `* * *`  | HR Manager    | assign tasks to employees                                    | effortlessly assign tasks to employees, ensuring clear communication of expectations and responsibilities.                                       |","lastModifiedDate":"2024-03-11"},{"lineNumber":349,"author":{"gitId":"wolffe88"},"content":"| `* * *`  | HR Manager    | add or remove employees                                      | maintain accurate and up-to-date employee records with ease.                                                                                     |","lastModifiedDate":"2024-03-11"},{"lineNumber":350,"author":{"gitId":"wolffe88"},"content":"| `* * *`  | HR Manager    | displays tasks with deadline within a week from now          | efficiently plan and prioritize tasks based on their urgency.                                                                                    |","lastModifiedDate":"2024-03-11"},{"lineNumber":351,"author":{"gitId":"wolffe88"},"content":"| `* * *`  | HR Manager    | change person in charge of a task                            | easily change the person in charge of a task, ensuring smooth transition of responsibilities without disrupting workflow.                        |","lastModifiedDate":"2024-03-11"},{"lineNumber":352,"author":{"gitId":"wolffe88"},"content":"| `* * *`  | HR Manager    | change the deadline for an existing task                     | adjust deadlines as needed to accommodate changing priorities or unforeseen circumstances without any hassle.                                    |","lastModifiedDate":"2024-03-11"},{"lineNumber":353,"author":{"gitId":"wolffe88"},"content":"| `* * *`  | HR Manager    | set deadlines for tasks                                      | easily set deadlines for tasks, enabling precise scheduling and effective time management.                                                       |","lastModifiedDate":"2024-03-11"},{"lineNumber":354,"author":{"gitId":"wolffe88"},"content":"| `* * *`  | HR Manager    | assign employees to departments                              | organize teams effectively and foster better collaboration.                                                                                      |","lastModifiedDate":"2024-03-11"},{"lineNumber":355,"author":{"gitId":"wolffe88"},"content":"| `* *`  | HR Manager      | perform flexible searches                                    | obtain search results even if one character matches.                                                                                             |","lastModifiedDate":"2024-03-11"},{"lineNumber":356,"author":{"gitId":"wolffe88"},"content":"| `* *`  | HR Manager      | sort the employee list based on their efficiency             | quickly sort and identify employees based on efficiency metrics, such as productivity levels, task completion rates, or performance evaluations. |","lastModifiedDate":"2024-03-11"},{"lineNumber":357,"author":{"gitId":"wolffe88"},"content":"| `* *`  | HR Manager      | mark assigned task as done                                   | efficiently mark tasks as done, providing a clear indication of progress and facilitating effective task tracking and management.                |","lastModifiedDate":"2024-03-11"},{"lineNumber":358,"author":{"gitId":"wolffe88"},"content":"| `* *`  | HR Manager      | filter out poor performing employees                         | identify and filter out underperforming employees based on key performance indicators, allowing for targeted intervention and support.           |","lastModifiedDate":"2024-03-11"},{"lineNumber":359,"author":{"gitId":"wolffe88"},"content":"| `* *`  | HR Manager      | set priority tags for assignments                            | assign priority levels to tasks, ensuring critical tasks receive appropriate attention and resources.                                            |","lastModifiedDate":"2024-03-11"},{"lineNumber":360,"author":{"gitId":"wolffe88"},"content":"| `*`  | HR Manager        | generate efficiency reports highlighting significant changes | make informed decisions and strategic plans based on comprehensive performance insights.                                                         |","lastModifiedDate":"2024-03-11"},{"lineNumber":361,"author":{"gitId":"wolffe88"},"content":"| `*`  | HR Manager        | compare efficiency between departments                       | identify trends, best practices, and areas for improvement.                                                                                      |","lastModifiedDate":"2024-03-11"},{"lineNumber":362,"author":{"gitId":"wolffe88"},"content":"| `*`  | HR Manager        | access a simpler interface                                   | navigate the system effortlessly and access key information without any complexity.                                                              |","lastModifiedDate":"2024-03-11"},{"lineNumber":363,"author":{"gitId":"yiwern5"},"content":"| `*`  | HR Manager        | track real time progress of assignments                      | monitor the progress of assignments, facilitating timely intervention and resource allocation as necessary.                                      |","lastModifiedDate":"2024-03-28"},{"lineNumber":364,"author":{"gitId":"yiwern5"},"content":"| `*`  | HR Manager        | undo and redo my commands                                    | easily correct mistakes or revert changes.                                                                                                       |","lastModifiedDate":"2024-03-28"},{"lineNumber":365,"author":{"gitId":"yiwern5"},"content":"| `*`  | HR Manager        | view my command history                                      | recall commands I have executed.                                                                                                                 |","lastModifiedDate":"2024-03-28"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"howen02"},"content":"**Use case: Editing a person**","lastModifiedDate":"2024-03-11"},{"lineNumber":397,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":398,"author":{"gitId":"howen02"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":399,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":400,"author":{"gitId":"howen02"},"content":"1.  User requests to list persons","lastModifiedDate":"2024-03-11"},{"lineNumber":401,"author":{"gitId":"howen02"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2024-03-11"},{"lineNumber":402,"author":{"gitId":"howen02"},"content":"3.  User requests to edit a specific person in the list with the necessary edits","lastModifiedDate":"2024-03-11"},{"lineNumber":403,"author":{"gitId":"howen02"},"content":"4.  AddressBook edits the person ","lastModifiedDate":"2024-03-11"},{"lineNumber":404,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":405,"author":{"gitId":"howen02"},"content":"    Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":406,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":407,"author":{"gitId":"howen02"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":408,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":409,"author":{"gitId":"howen02"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-11"},{"lineNumber":410,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":411,"author":{"gitId":"howen02"},"content":"    Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":412,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":413,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":414,"author":{"gitId":"howen02"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":415,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":416,"author":{"gitId":"howen02"},"content":"  * 3a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":417,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":418,"author":{"gitId":"howen02"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-03-11"},{"lineNumber":419,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":420,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":421,"author":{"gitId":"howen02"},"content":"* 3b. The necessary edits are missing","lastModifiedDate":"2024-03-11"},{"lineNumber":422,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":423,"author":{"gitId":"howen02"},"content":"  * 3b1AddressBook shows an error message.","lastModifiedDate":"2024-03-11"},{"lineNumber":424,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":425,"author":{"gitId":"howen02"},"content":"    Use case resumes at step 2","lastModifiedDate":"2024-03-11"},{"lineNumber":426,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":427,"author":{"gitId":"howen02"},"content":"**Use case: Change deadline of a task**","lastModifiedDate":"2024-03-11"},{"lineNumber":428,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":429,"author":{"gitId":"howen02"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":430,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":431,"author":{"gitId":"howen02"},"content":"1.  User requests to list tasks","lastModifiedDate":"2024-03-11"},{"lineNumber":432,"author":{"gitId":"howen02"},"content":"2.  AddressBook shows a list of tasks","lastModifiedDate":"2024-03-11"},{"lineNumber":433,"author":{"gitId":"howen02"},"content":"3.  User requests to edit a specific task in the list with a new deadline","lastModifiedDate":"2024-03-11"},{"lineNumber":434,"author":{"gitId":"howen02"},"content":"4.  AddressBook edits the task","lastModifiedDate":"2024-03-11"},{"lineNumber":435,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":436,"author":{"gitId":"howen02"},"content":"    Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":437,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":438,"author":{"gitId":"howen02"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":439,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":440,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":441,"author":{"gitId":"howen02"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-11"},{"lineNumber":442,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":443,"author":{"gitId":"howen02"},"content":"    Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":444,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":445,"author":{"gitId":"howen02"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":446,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":447,"author":{"gitId":"howen02"},"content":"  * 3a1. AddressBook shows an error message. ","lastModifiedDate":"2024-03-11"},{"lineNumber":448,"author":{"gitId":"howen02"},"content":"  ","lastModifiedDate":"2024-03-11"},{"lineNumber":449,"author":{"gitId":"howen02"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-03-11"},{"lineNumber":450,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":451,"author":{"gitId":"howen02"},"content":"* 3b. The new deadline is missing.","lastModifiedDate":"2024-03-11"},{"lineNumber":452,"author":{"gitId":"howen02"},"content":"  ","lastModifiedDate":"2024-03-11"},{"lineNumber":453,"author":{"gitId":"howen02"},"content":"  * 3b1. AddressBook shows an error message. ","lastModifiedDate":"2024-03-11"},{"lineNumber":454,"author":{"gitId":"howen02"},"content":"    ","lastModifiedDate":"2024-03-11"},{"lineNumber":455,"author":{"gitId":"howen02"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-03-11"},{"lineNumber":456,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":457,"author":{"gitId":"howen02"},"content":"* 3c. The new deadline is before the current date.","lastModifiedDate":"2024-03-11"},{"lineNumber":458,"author":{"gitId":"howen02"},"content":"  * 3c1. AddressBook shows an error message. ","lastModifiedDate":"2024-03-11"},{"lineNumber":459,"author":{"gitId":"howen02"},"content":"    ","lastModifiedDate":"2024-03-11"},{"lineNumber":460,"author":{"gitId":"howen02"},"content":"    * Use case resumes at step 2.","lastModifiedDate":"2024-03-11"},{"lineNumber":461,"author":{"gitId":"howen02"},"content":"   ","lastModifiedDate":"2024-03-11"},{"lineNumber":462,"author":{"gitId":"wolffe88"},"content":"* 3d. The given index does not have a task assigned.","lastModifiedDate":"2024-03-29"},{"lineNumber":463,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":464,"author":{"gitId":"wolffe88"},"content":"  * 3d1. AddressBook shows an error message","lastModifiedDate":"2024-03-29"},{"lineNumber":465,"author":{"gitId":"wolffe88"},"content":" ","lastModifiedDate":"2024-03-29"},{"lineNumber":466,"author":{"gitId":"wolffe88"},"content":"    * Use case resumes at step 2.      ","lastModifiedDate":"2024-03-29"},{"lineNumber":467,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":468,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":469,"author":{"gitId":"howen02"},"content":"**Use case: Assign a task**","lastModifiedDate":"2024-03-11"},{"lineNumber":470,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":471,"author":{"gitId":"howen02"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":472,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":473,"author":{"gitId":"howen02"},"content":"1.  User requests to list tasks","lastModifiedDate":"2024-03-11"},{"lineNumber":474,"author":{"gitId":"howen02"},"content":"2.  AddressBook shows a list of tasks","lastModifiedDate":"2024-03-11"},{"lineNumber":475,"author":{"gitId":"howen02"},"content":"3.  User requests to list persons","lastModifiedDate":"2024-03-11"},{"lineNumber":476,"author":{"gitId":"howen02"},"content":"4.  AddressBook shows a list of people","lastModifiedDate":"2024-03-11"},{"lineNumber":477,"author":{"gitId":"howen02"},"content":"5.  User requests to assign a task to a person","lastModifiedDate":"2024-03-11"},{"lineNumber":478,"author":{"gitId":"howen02"},"content":"6.  AddressBook assigns the task to the person","lastModifiedDate":"2024-03-11"},{"lineNumber":479,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":480,"author":{"gitId":"howen02"},"content":"    Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":481,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":482,"author":{"gitId":"howen02"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":483,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":484,"author":{"gitId":"howen02"},"content":"* 2a. The list is empty. ","lastModifiedDate":"2024-03-11"},{"lineNumber":485,"author":{"gitId":"howen02"},"content":"  ","lastModifiedDate":"2024-03-11"},{"lineNumber":486,"author":{"gitId":"howen02"},"content":"  Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":487,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":488,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":489,"author":{"gitId":"howen02"},"content":"* 4a. The list is empty. ","lastModifiedDate":"2024-03-11"},{"lineNumber":490,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":491,"author":{"gitId":"howen02"},"content":"  Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":492,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":493,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":494,"author":{"gitId":"howen02"},"content":"* 5a. The given index is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":495,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":496,"author":{"gitId":"howen02"},"content":"  * 5a1. AddressBook shows an error message. ","lastModifiedDate":"2024-03-11"},{"lineNumber":497,"author":{"gitId":"howen02"},"content":"  ","lastModifiedDate":"2024-03-11"},{"lineNumber":498,"author":{"gitId":"howen02"},"content":"    Use case resumes at step 4.","lastModifiedDate":"2024-03-11"},{"lineNumber":499,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":500,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":501,"author":{"gitId":"howen02"},"content":"* 5b. The person already has a task.","lastModifiedDate":"2024-03-11"},{"lineNumber":502,"author":{"gitId":"howen02"},"content":"  * 5b1 AddressBook shows an error message. ","lastModifiedDate":"2024-03-11"},{"lineNumber":503,"author":{"gitId":"howen02"},"content":"  ","lastModifiedDate":"2024-03-11"},{"lineNumber":504,"author":{"gitId":"howen02"},"content":"    Use case resumes at step 4.","lastModifiedDate":"2024-03-11"},{"lineNumber":505,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":506,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":507,"author":{"gitId":"howen02"},"content":"**Use case: Set priority tag for a task**","lastModifiedDate":"2024-03-11"},{"lineNumber":508,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":509,"author":{"gitId":"howen02"},"content":"**MSS**","lastModifiedDate":"2024-03-11"},{"lineNumber":510,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":511,"author":{"gitId":"howen02"},"content":"1.  User requests to list tasks","lastModifiedDate":"2024-03-11"},{"lineNumber":512,"author":{"gitId":"howen02"},"content":"2.  AddressBook shows a list of tasks","lastModifiedDate":"2024-03-11"},{"lineNumber":513,"author":{"gitId":"howen02"},"content":"3.  User requests tag a task with a priority status","lastModifiedDate":"2024-03-11"},{"lineNumber":514,"author":{"gitId":"howen02"},"content":"4.  AddressBook tags the task","lastModifiedDate":"2024-03-11"},{"lineNumber":515,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":516,"author":{"gitId":"howen02"},"content":"    Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":517,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":518,"author":{"gitId":"howen02"},"content":"**Extensions**","lastModifiedDate":"2024-03-11"},{"lineNumber":519,"author":{"gitId":"howen02"},"content":"* 2a. The list is empty. ","lastModifiedDate":"2024-03-11"},{"lineNumber":520,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":521,"author":{"gitId":"howen02"},"content":"  Use case ends.","lastModifiedDate":"2024-03-11"},{"lineNumber":522,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":523,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":524,"author":{"gitId":"howen02"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":525,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":526,"author":{"gitId":"howen02"},"content":"  * 3a1. AddressBook shows an error message. ","lastModifiedDate":"2024-03-11"},{"lineNumber":527,"author":{"gitId":"howen02"},"content":"  ","lastModifiedDate":"2024-03-11"},{"lineNumber":528,"author":{"gitId":"howen02"},"content":"    Use case resumes at step 2","lastModifiedDate":"2024-03-11"},{"lineNumber":529,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":530,"author":{"gitId":"howen02"},"content":"* 3b. The given index is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":531,"author":{"gitId":"howen02"},"content":"  ","lastModifiedDate":"2024-03-11"},{"lineNumber":532,"author":{"gitId":"howen02"},"content":"    * 3b1. AddressBook shows an error message. ","lastModifiedDate":"2024-03-11"},{"lineNumber":533,"author":{"gitId":"howen02"},"content":"  ","lastModifiedDate":"2024-03-11"},{"lineNumber":534,"author":{"gitId":"howen02"},"content":"      Use case resumes at step 2","lastModifiedDate":"2024-03-11"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"KiatLun"},"content":"4.  The respond time for any action should be less than 5 seconds.","lastModifiedDate":"2024-03-11"},{"lineNumber":542,"author":{"gitId":"KiatLun"},"content":"5.  The app should have an uptime of at least 99.5%, ensuring data accessibility for managers.","lastModifiedDate":"2024-03-11"},{"lineNumber":543,"author":{"gitId":"KiatLun"},"content":"6.  There should be at most 2 hours of downtime in a day for maintenance or updates.","lastModifiedDate":"2024-03-11"},{"lineNumber":544,"author":{"gitId":"KiatLun"},"content":"7.  The app should efficiently store and manage data for at least 10 years of employee history. ","lastModifiedDate":"2024-03-11"},{"lineNumber":545,"author":{"gitId":"KiatLun"},"content":"8.  There should be a daily scheduled backup of the app\u0027s data.","lastModifiedDate":"2024-03-11"},{"lineNumber":546,"author":{"gitId":"KiatLun"},"content":"9.  The app should allow data export in at least three common formats like CSV, XLSX and PDF.","lastModifiedDate":"2024-03-11"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"yiwern5"},"content":"* **Efficiency**: The employee\u0027s default efficiency score is 80% and capped at 100%. Efficiency will increase by 1% when the employee completes an assigned task within the deadline and decrease by 1% for each subsequent day the deadline is exceeded.","lastModifiedDate":"2024-03-07"},{"lineNumber":553,"author":{"gitId":"yiwern5"},"content":"* **Efficiency Threshold**: A user-defined benchmark in the app, classifying employee performance. For instance, a threshold below 20% indicates poor performance, while 20-50% suggests problematic performance requiring attention.","lastModifiedDate":"2024-03-07"},{"lineNumber":554,"author":{"gitId":"yiwern5"},"content":"* **Fire list**: List of employees who are below the efficiency threshold.","lastModifiedDate":"2024-03-07"},{"lineNumber":555,"author":{"gitId":"yiwern5"},"content":"* **Key Performance Indicators (KPIs)**: Quantifiable measures used to evaluate the success of an employee or a department in achieving specific objectives.","lastModifiedDate":"2024-03-07"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":565,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":566,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yiwern5":20,"ziyi22":57,"KiatLun":6,"howen02":139,"wolffe88":22,"-":366}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"# EffiTrack User Guide","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"## Introduction","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"EffiTrack is a **desktop app for managing employees, tracking the efficiency of employees, ","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, EffiTrack can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"EffiTrack simplifies the task of measuring and monitoring employee efficiency for","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"HR departments. \u003c/br\u003e Instead of using time-consuming and error-prone methods like manual documentation or","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"outdated systems, EffiTrack offers a centralized platform for easy and accurate monitoring of employee performance.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"1. Download the latest `EffiTrack.jar` from [here](https://github.com/AY2324S2-CS2103T-T14-1/tp/releases/tag/v1.2).","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for EffiTrack.","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar EffiTrack.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"   * `list` :  Lists all employees.","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/Finance eff/80` : Adds an employee named `John Doe` to EffiTrack.","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"   * `edit 1 n/Colby Bryan` : Edits the name of the 1st employee shown in the current list to `Colby Bryan`.","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"   * `delete 3` : Deletes the 3rd employee shown in the current list.","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"   * `find john` : Finds all employees whose name contains `john`.","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"   ","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"   * `findtask report` : Finds all employees whose task contains `report`.","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"   ","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"   * `filter finance` : Filters the list to display employees who belong to `finance` department.","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"   ","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"   * `assign task/Complete Proposal by/20-05-2024 2359 to/1` :Assigns the task `Complete Proposal` with specific deadline to the 1st employee shown in the current list.","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"   ","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"   * `mark task/Complete Proposal o/1` : Mark the task `Complete Proposal` assigned to the 1st employee as done.","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"   * `clear` : Deletes all employees.","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"   * `undo`: Undo the previous command.","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"   * `redo`: Reverses the previous undo command.","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"   * `history`: Displays the commands executed from most recent to earliest, inclusive of invalid commands.","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"    ","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"### Adding an employee: `add`","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"Adds an employee to EffiTrack.","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS d/DEPARTMENT eff/EFFICIENCY [t/TAG]â€¦â€‹`","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"**Tip:** An employee can have any number of tags (including 0)","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"howen02"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/Finance eff/80`","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 d/Murder eff/10 t/criminal`","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"### Listing all employees : `list`","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"yiwern5"},"content":"Shows a list of all employees in EffiTrack.","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"### Editing an employee : `edit`","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"Edits an existing employee in EffiTrack.","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/DEPARTMENT] [eff/EFFICIENCY] [t/TAG]â€¦â€‹`","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"* Edits the employee at the specified `INDEX`. The index refers to the index number shown in the displayed employee list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"* When editing tags, the existing tags of the employee will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"* You can remove all the employeeâ€™s tags by typing `t/` without","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st employee to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd employee to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"### Locating employees by name: `find`","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"Finds employees whose names contain any of the given keywords.","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"wolffe88"},"content":"* Partial words will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"ziyi22"},"content":"### Locating employees by department: `filter`","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"Filter employees by their department or tags","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"wolffe88"},"content":"Format: `filter KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"wolffe88"},"content":"* The search is case-insensitive. e.g `finance` will match `Finance`","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"wolffe88"},"content":"* The order of the keywords does not matter. e.g. `Quantitative Finance` will match `Finance Quantitative`","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"wolffe88"},"content":"* Only the departments and tags are searched.","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"wolffe88"},"content":"* Partial words will be matched e.g. `Fin` will match `Finance`","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"wolffe88"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"wolffe88"},"content":"  e.g. `Marketing Fiance` will return `Quantitative Finance`, `Marketing`","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"wolffe88"},"content":"Examples:","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"wolffe88"},"content":"* `filter Finance` returns `Finance` and `Quantitative Finance`","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"wolffe88"},"content":"* `filter resource` returns `Human Resource`, `Resource Management`\u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"ziyi22"},"content":"  ![result for \u0027filter finance\u0027](images/filterFinanceResult.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"yiwern5"},"content":"### Deleting an employee : `delete`","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"yiwern5"},"content":"Deletes the specified employee from EffiTrack.","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"* Deletes the employee at the specified `INDEX`.","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"yiwern5"},"content":"* The index refers to the index number shown in the displayed employee list.","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"yiwern5"},"content":"* `list` followed by `delete 2` deletes the 2nd employee in EffiTrack.","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"yiwern5"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st employee in the results of the `find` command.","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"ziyi22"},"content":"### Assign a task: `assign`","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"ziyi22"},"content":"Assign a task to a specific person.","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"ziyi22"},"content":"Format: `assign task/task title by/dd-MM-yyyy HHmm to/INDEX`","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"ziyi22"},"content":"* Assigns the task to the person at the specified `INDEX`","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-03-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"ziyi22"},"content":"* The deadline **must be in the correct format**","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"ziyi22"},"content":"* `assign task/Complete Project Proposal by/20-04-2024 2359 to/1` Assign the \u0027Complete Project Proposal\u0027 task to the first person in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"KiatLun"},"content":"### Reassigning a task: `reassign`","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"KiatLun"},"content":"Reassign a specific task from one person to another.","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"KiatLun"},"content":"Format `reassign from/FROMINDEX to/TONDEX`","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"KiatLun"},"content":"* Assigns the task, which was previously assigned to person at the specified `FROMINDEX`, to the person at the specified `TOINDEX`","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"KiatLun"},"content":"* The index refers to the index number shown in the displayed employee list.","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"KiatLun"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"KiatLun"},"content":"### Marking a task : `mark`","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"KiatLun"},"content":"Mark the specified task as done.","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"KiatLun"},"content":"Format: `mark task/TASKNAME o/INDEX`","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"KiatLun"},"content":"* Mark the specified task with `TASKNAME` as done.","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"* The index refers to the index number shown in the displayed employee list.","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"KiatLun"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"KiatLun"},"content":"Examples:","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"yiwern5"},"content":"* `mark task/Submit Project o/1` mark the task Submit Project assigned to the first employee in EffiTrack as done.","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"howen02"},"content":"### Finding a task : `findtask`","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"howen02"},"content":"Finds the person(s) in charge of the task","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":232,"author":{"gitId":"howen02"},"content":"Format `findtask KEYWORD`","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"howen02"},"content":"* The search is case-insensitive. e.g `report` will match `Report`","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"howen02"},"content":"* The order of the keywords do not matter. e.g. `report submit` will match `submit report`","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"howen02"},"content":"* Only the task name is searched.","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"howen02"},"content":"* Partial words will be matched e.g. `report` will match `reports`","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"yiwern5"},"content":"Clears all entries from EffiTrack.","lastModifiedDate":"2024-03-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"yiwern5"},"content":"### Undoing the previous command : `undo`","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"yiwern5"},"content":"Undo the previous command.","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"yiwern5"},"content":"Format: `undo`","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"yiwern5"},"content":"### Redoing the previous command : `redo`","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"yiwern5"},"content":"Reverts the latest undo command.","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"yiwern5"},"content":"Format: `redo`","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":263,"author":{"gitId":"yiwern5"},"content":"### Displaying the command history : `history`","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":265,"author":{"gitId":"yiwern5"},"content":"Displays the commands executed from most recent to earliest, inclusive of invalid commands.","lastModifiedDate":"2024-03-28"},{"lineNumber":266,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":267,"author":{"gitId":"yiwern5"},"content":"Format: `history`","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"yiwern5"},"content":"EffiTrack data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":275,"author":{"gitId":"yiwern5"},"content":"EffiTrack data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":280,"author":{"gitId":"yiwern5"},"content":"If your changes to the data file makes its format invalid, EffiTrack will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":281,"author":{"gitId":"yiwern5"},"content":"Furthermore, certain edits can cause the EffiTrack to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2024-03-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":307,"author":{"gitId":"yiwern5"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS d/DEPARTMENT [t/TAG]â€¦â€‹` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 d/IT t/friend t/colleague`","lastModifiedDate":"2024-03-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"yiwern5"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [d/DEPARTMENT] [t/TAG]â€¦â€‹`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-03-18"},{"lineNumber":311,"author":{"gitId":"ziyi22"},"content":"**Assign Task** | `assign task/TASK TITLE by/dd-MM-yyyy to/INDEX`\u003cbr\u003e e.g., `assign task/Complete Project Proposal by/22-05-2023 2359 to/1`","lastModifiedDate":"2024-03-27"},{"lineNumber":312,"author":{"gitId":"KiatLun"},"content":"**Reassign Task** | `reassign from/FROMINDEX to/TOINDEX`\u003cbr\u003e e.g., `reassign from/2 to/1`","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"yiwern5"},"content":"**Mark Task**   | `mark task/TASK o/INDEX` \u003cbr\u003e e.g. `mark task/Complete Project Proposal o/1`","lastModifiedDate":"2024-03-28"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"yiwern5"},"content":"**Undo**   | `undo`","lastModifiedDate":"2024-03-28"},{"lineNumber":318,"author":{"gitId":"yiwern5"},"content":"**Redo**   | `redo`","lastModifiedDate":"2024-03-28"},{"lineNumber":319,"author":{"gitId":"yiwern5"},"content":"**History**   | `history`","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"yiwern5":66,"ziyi22":30,"KiatLun":22,"howen02":13,"wolffe88":16,"-":172}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eEffiTrack\u003c/a\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S2-CS2103T-T14-1/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"yiwern5":2,"-":65}},{"path":"docs/diagrams/AssignTaskSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"participant \":AssignTaskCommandParser\" as AssignTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"participant \"at:AssignTaskCommand\" as AssignTaskCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"[-\u003e LogicManager : execute(\"assign task/Proposal by/20-05-2024 2359 to/2\")","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"activate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"assign task/Proposal by/20-05-2024 2359 to/2\")","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"create AssignTaskCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"AddressBookParser -\u003e AssignTaskCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"activate AssignTaskCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"deactivate AssignTaskCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"AddressBookParser -\u003e AssignTaskCommandParser : parse(\"task/Proposal by/20-05-2024 2359 to/2\")","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"activate AssignTaskCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommandParser -\u003e Model : new Task(Proposal, 20-02-2024 2359)","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"Model --\u003e AssignTaskCommandParser : t","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"create AssignTaskCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommandParser -\u003e AssignTaskCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"activate AssignTaskCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommand --\u003e AssignTaskCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"deactivate AssignTaskCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommandParser --\u003e AddressBookParser: at","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"deactivate AssignTaskCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"destroy AssignTaskCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"AddressBookParser --\u003e LogicManager: at","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"LogicManager -\u003e AssignTaskCommand: execute(m, h)","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"activate AssignTaskCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommand -\u003e Model : getFilteredPersonList","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"Model --\u003e AssignTaskCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommand -\u003e Model : assignTask(t, p)","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"Model --\u003e AssignTaskCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"create CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommand -\u003e CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"activate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"CommandResult --\u003e AssignTaskCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"AssignTaskCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"deactivate AssignTaskCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ziyi22":85}},{"path":"docs/diagrams/AssignTaskSequenceDiagram-Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"participant \"tList: UniqueTaskList\" as UniqueTaskList MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"participant \"t:Task\" as Task MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"[-\u003e ModelManager: assignTask(t, p)","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"activate ModelManager","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"ModelManager -\u003e AddressBook: assignTask(t, p)","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"activate AddressBook","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"AddressBook -\u003e UniqueTaskList: add(t)","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"activate UniqueTaskList","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"UniqueTaskList --\u003e AddressBook","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"deactivate UniqueTaskList","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"AddressBook -\u003e Task : setPersonInCharge(p)","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"activate Task","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"Task --\u003e AddressBook","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"deactivate Task","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"AddressBook -\u003e Person : setTask(t)","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"activate Person","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"Person --\u003e AddressBook","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"deactivate Person","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"AddressBook --\u003e ModelManager","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"deactivate AddressBook","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"[\u003c--ModelManager","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"deactivate ModelManager","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ziyi22":43}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"AddressBook *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"UniqueTaskList --\u003e Task","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"Person *--\u003e Department","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"Person *--\u003e Task","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"Person *--\u003e Efficiency","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"Task *--\u003e Title","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"Task *--\u003e Deadline","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"Task *--\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"Task *--\u003e IsDone","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"Task *--\u003e Progress","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"Task *--\u003e Priority","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"Department *--\u003e HeadOfDepartment","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"HeadOfDepartment *--\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ziyi22":7,"yiwern5":1,"KiatLun":1,"howen02":2,"wolffe88":5,"-":21}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"Class Department","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"Class Efficiency","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"Class UniqueTaskList","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"Class Task","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"Class Deadline","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"Class Title","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"Class IsDone","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"Class Priority","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"Person *--\u003e Department","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"Person *--\u003e Task","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"howen02"},"content":"Person *--\u003e Efficiency","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"AddressBook *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"UniqueTaskList --\u003e \"~* all\" Task","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"Task *--\u003e Title","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"Task *--\u003e Deadline","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"Task *--\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"howen02"},"content":"Task *--\u003e IsDone","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KiatLun"},"content":"Task *--\u003e Priority","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"Task -[hidden]up--\u003e I","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"UniqueTaskList -[hidden]right-\u003e I","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"Email -[hidden]right-\u003e Department","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"Phone -[hidden]right-\u003e Task","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yiwern5":3,"ziyi22":15,"KiatLun":2,"howen02":4,"-":55}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ziyi22":2,"-":43}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"# EffiTrack","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T14-1/tp/actions)","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T14-1/tp/graph/badge.svg?token\u003dcu77aESAox)](https://codecov.io/gh/AY2324S2-CS2103T-T14-1/tp)","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yiwern5":3,"-":18}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    private static final double DEFAULT_WIDTH \u003d 750;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yiwern5":1,"-":81}},{"path":"src/main/java/seedu/address/commons/util/InvalidationListenerManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":" * Manages a list of {@link InvalidationListener}.","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"public class InvalidationListenerManager {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private final ArrayList\u003cInvalidationListener\u003e listeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * Calls {@link InvalidationListener#invalidated(Observable)} on all added listeners.","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * Any modifications to the listeners list during the invocation of this method","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * will only take effect on the next invocation of this method.","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * @param observable The {@code Observable} that became invalid.","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public void callListeners(Observable observable) {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        // Make a copy of listeners such that any modifications to the listeners list during","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        // the invocation of this method will only take effect on the next invocation of this method.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cInvalidationListener\u003e listenersCopy \u003d new ArrayList\u003c\u003e(listeners);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        for (InvalidationListener listener : listenersCopy) {","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"            listener.invalidated(observable);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     * Adds {@code listener} to the list of listeners.","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     * If the same listener is added more that once, then it will be notified more than once.","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"        requireNonNull(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        listeners.add(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"     * Removes {@code listener} from the list of listeners.","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"     * If the given listener was not previously added, then this method call is a no-op.","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"     * If the given listener was added more than once, then only the first occurrence in the list will be removed.","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        requireNonNull(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        listeners.remove(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":52}},{"path":"src/main/java/seedu/address/logic/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * Stores the history of commands executed.","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class CommandHistory {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private final ObservableList\u003cString\u003e userInputHistory \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final ObservableList\u003cString\u003e unmodifiableUserInputHistory \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"            FXCollections.unmodifiableObservableList(userInputHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public CommandHistory() {}","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public CommandHistory(CommandHistory commandHistory) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        userInputHistory.addAll(commandHistory.userInputHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * Appends {@code userInput} to the list of user input entered.","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    public void add(String userInput) {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        userInputHistory.add(userInput);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * Returns an unmodifiable view of {@code userInputHistory}.","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    public ObservableList\u003cString\u003e getHistory() {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        return unmodifiableUserInputHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        if (!(obj instanceof CommandHistory)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        // state check","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        CommandHistory other \u003d (CommandHistory) obj;","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        return userInputHistory.equals(other.userInputHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"        return userInputHistory.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":58}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"KiatLun":3,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    private final CommandHistory history;","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    private boolean addressBookModified;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        history \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        model.getAddressBook().addListener(observable -\u003e addressBookModified \u003d true);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"        addressBookModified \u003d false;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"            commandResult \u003d command.execute(model, history);","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"        } finally {","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"            history.add(commandText);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        if (addressBookModified) {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"            logger.info(\"Address book modified, saving to file.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":88,"author":{"gitId":"KiatLun"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"KiatLun"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"KiatLun"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KiatLun":6,"yiwern5":12,"-":89}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"                .append(\"; Department: \")","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"                .append(person.getDepartment())","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"     * Returns the full name of a person given.","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"    public static String printName(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"        return person.getName().toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"     * Returns the task name of a task.","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"    public static String printTask(Task task) {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"        return task.getTaskTitle().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"     * Returns the deadline of a task.","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"    public static String printDeadline(Task task) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"        return task.getDeadline().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ziyi22":15,"yiwern5":2,"wolffe88":7,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EFFICIENCY;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            + PREFIX_DEPARTMENT + \"DEPARTMENT \"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"            + PREFIX_DEPARTMENT + \"Business Development \"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"            + PREFIX_EFFICIENCY + \"80\";","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yiwern5":6,"howen02":3,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/AssignTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2024-04-06"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":" * Assign Task to Employees","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"public class AssignTaskCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_ASSIGN_TASK_SUCCESS \u003d \"Assigned task %1$s to %2$s successfully\";","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"            + \": Assigns a task to a person identified by index number.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"            + PREFIX_TASK + \"TASK \"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"            + PREFIX_DEADLINE + \"dd-MM-yyyy HHmm \"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"            + PREFIX_TO + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"            + PREFIX_TASK + \"Complete Project Proposal \"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"            + PREFIX_DEADLINE + \"22-04-2024 2359 \"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"            + PREFIX_TO + \"1\";","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already existed. \\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"            + \"Please use a different task name.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_PERSON_IS_BUSY \u003d \"A task has already been assigned for %1$s.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"            + \"Please select another person.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    private final Index index;","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"    private final Task task;","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"     * Assign task to a existing person in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"     * @param task","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"     * @param index","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"    public AssignTaskCommand(Task task, Index index) {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"        if (model.hasTask(task)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TASK));","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"        if (index.getZeroBased() \u003e\u003d personList.size()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"        Person assignedTo \u003d personList.get(index.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"        if (assignedTo.isBusy()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_IS_BUSY, Messages.printName(assignedTo)));","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"        model.assignTask(task, assignedTo);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2024-04-06"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"        return new CommandResult(String.format(MESSAGE_ASSIGN_TASK_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"                Messages.printTask(task), Messages.printName(assignedTo)));","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"        if (!(other instanceof AssignTaskCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"        AssignTaskCommand otherAssignCommand \u003d (AssignTaskCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"        return task.equals(otherAssignCommand.task) \u0026\u0026 index.equals(otherAssignCommand.index);","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"                .add(\"task\", task)","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":100,"yiwern5":5}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yiwern5":3,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    public abstract CommandResult execute(Model model, CommandHistory history) throws CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yiwern5":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":" * Changes the comment of an existing person in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"public class CommentCommand extends Command {","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Comment: %2$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    public static final String MESSAGE_ADD_COMMENT_SUCCESS \u003d \"Added comment to Person: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    public static final String MESSAGE_DELETE_COMMENT_SUCCESS \u003d \"Removed comment from Person: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"            + \": Edits the comment of the person identified \"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"            + \"Existing comment will be overwritten by the input.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"            + \"c/ [COMMENT]\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"            + \"c/ Good at database management.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"    private final Index index;","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"    private final Comment comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"     * @param index of the person in the filtered person list to edit the comment","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"     * @param comment of the person to be updated to","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"    public CommentCommand(Index index, Comment comment) {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        requireAllNonNull(index, comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"                personToEdit.getAddress(), personToEdit.getDepartment(), personToEdit.getTags(),","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"                personToEdit.getEfficiency(), this.comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_COMMENT_SUCCESS,","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"                Messages.printName(personToEdit)));","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"wolffe88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"wolffe88"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"wolffe88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"wolffe88"},"content":"        if (!(other instanceof CommentCommand)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"wolffe88"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"wolffe88"},"content":"        CommentCommand e \u003d (CommentCommand) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"wolffe88"},"content":"        return index.equals(e.index)","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"wolffe88"},"content":"                \u0026\u0026 comment.equals(e.comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"wolffe88":89}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yiwern5":3,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"            + \"[\" + PREFIX_DEPARTMENT + \"DEPARTMENT] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    private Task editedTask;","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"        Task taskToEdit \u003d personToEdit.getTask();","lastModifiedDate":"2024-04-05"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"        if (taskToEdit !\u003d null) {","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"            editedTask \u003d new Task(taskToEdit.getTaskTitle(), taskToEdit.getDeadline(), taskToEdit.isDone());","lastModifiedDate":"2024-04-05"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"            editedTask.setPersonInCharge(editedPerson);","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"            editedPerson.setTask(editedTask);","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"        if (taskToEdit !\u003d null) {","lastModifiedDate":"2024-04-05"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"            model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2024-04-05"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"            model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2024-04-05"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"        Department updatedDepartment \u003d editPersonDescriptor.getDepartment().orElse(personToEdit.getDepartment());","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":124,"author":{"gitId":"howen02"},"content":"        Efficiency updatedEfficiency \u003d editPersonDescriptor.getEfficiency().orElse(personToEdit.getEfficiency());","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"wolffe88"},"content":"        Comment updatedComment \u003d personToEdit.getComment();","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"howen02"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedDepartment, updatedTags,","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"wolffe88"},"content":"                updatedEfficiency, updatedComment);","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2024-03-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"        private Department department;","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"howen02"},"content":"        private Efficiency efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"yiwern5"},"content":"            setDepartment(toCopy.department);","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"yiwern5"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, department, tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"yiwern5"},"content":"        public void setDepartment(Department department) {","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"            this.department \u003d department;","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"yiwern5"},"content":"        public Optional\u003cDepartment\u003e getDepartment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"yiwern5"},"content":"            return Optional.ofNullable(department);","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"howen02"},"content":"        public void setEfficiency(Efficiency efficiency) {","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"howen02"},"content":"            this.efficiency \u003d efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":249,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"howen02"},"content":"        public Optional\u003cEfficiency\u003e getEfficiency() {","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"howen02"},"content":"            return Optional.ofNullable(efficiency);","lastModifiedDate":"2024-03-21"},{"lineNumber":252,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":253,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2024-03-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2024-03-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2024-03-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2024-03-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2024-03-05"},{"lineNumber":270,"author":{"gitId":"yiwern5"},"content":"                    \u0026\u0026 Objects.equals(department, otherEditPersonDescriptor.department)","lastModifiedDate":"2024-03-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2024-03-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2024-03-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-03-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-03-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-03-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2024-03-05"},{"lineNumber":281,"author":{"gitId":"yiwern5"},"content":"                    .add(\"department\", department)","lastModifiedDate":"2024-03-18"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2024-03-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2024-03-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yiwern5":33,"howen02":12,"wolffe88":3,"-":238}},{"path":"src/main/java/seedu/address/logic/commands/EditDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2024-04-06"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":" * Mark tasks done by employees","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"public class EditDeadlineCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    public static final String COMMAND_WORD \u003d \"edit_deadline\";","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Deadline for %1$s\u0027s task changed to %2$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"            + \": Change the deadline of the task of a user.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"            + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"            + PREFIX_DEADLINE + \"dd-MM-yyyy HHmm \\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"            + PREFIX_DEADLINE + \"22-04-2024 2359 \";","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"    public static final String MESSAGE_TASK_DOES_NOT_EXIST \u003d \"%s does not have a Task. \"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"            + \"Please select another Task\";","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"    private final Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"    private final Deadline deadline;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"     * Change the deadline of the task of a user.","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"    public EditDeadlineCommand(Index index, Deadline deadline) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"        requireAllNonNull(index, deadline);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"        if (index.getOneBased() \u003e personList.size()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"        Person taskOwner \u003d personList.get(index.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"        if (!taskOwner.isBusy()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"            throw new CommandException(String.format(MESSAGE_TASK_DOES_NOT_EXIST, taskOwner.getName()));","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"        Task task \u003d taskOwner.getTask();","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        Task editedTask \u003d task.editDeadline(deadline);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"        Person editedPerson \u003d new Person(taskOwner.getName(), taskOwner.getPhone(),","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"                taskOwner.getEmail(), taskOwner.getAddress(),","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"                taskOwner.getDepartment(), taskOwner.getTags(),","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"                taskOwner.getEfficiency(), taskOwner.getComment());","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"        editedPerson.setTask(editedTask);","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"        model.setPerson(taskOwner, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"        model.setTask(task, editedTask);","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2024-04-06"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"wolffe88"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"wolffe88"},"content":"                Messages.printName(taskOwner), deadline.toString()));","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"wolffe88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"wolffe88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"wolffe88"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"wolffe88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"wolffe88"},"content":"        if (!(other instanceof EditDeadlineCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"wolffe88"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"wolffe88"},"content":"        EditDeadlineCommand otherEditDeadlineCommand \u003d (EditDeadlineCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"wolffe88"},"content":"        return index.equals(otherEditDeadlineCommand.index)","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"wolffe88"},"content":"                \u0026\u0026 this.deadline.equals(otherEditDeadlineCommand.deadline);","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"yiwern5":4,"ziyi22":1,"wolffe88":92}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yiwern5":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all persons by the given departments or tags\"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    private final PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    public FilterCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"        return predicate.equals(otherFilterCommand.predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"yiwern5":2,"wolffe88":57}},{"path":"src/main/java/seedu/address/logic/commands/FilterEfficiencyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.PersonLessThanEfficiencyPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":" * Finds and lists all persons in address book whose efficiency below the argument threshold.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"public class FilterEfficiencyCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    public static final String COMMAND_WORD \u003d \"filter_efficiency\";","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Filtered out poor performing employees with efficiency less than %d\";","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"            + \": Filters employees with efficiency less than threshold given.\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"            + \"Parameters: integer (MUST within the range: 0 to 100)\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"            + \"Example: \" + COMMAND_WORD + \" 30\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_INTEGER_OUT_OF_RANGE \u003d \"The input efficiency is out of range (0-100)\";","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    private final PersonLessThanEfficiencyPredicate predicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"    public FilterEfficiencyCommand(PersonLessThanEfficiencyPredicate predicate) {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"        if (!(other instanceof FilterEfficiencyCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"        FilterEfficiencyCommand otherFilterEfficiencyCommand \u003d (FilterEfficiencyCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"        return predicate.equals(otherFilterEfficiencyCommand.predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ziyi22":59,"yiwern5":2}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names or tags contain any of \"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yiwern5":2,"wolffe88":1,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/FindFreePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.PersonHasNoTaskPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":" * Finds and lists all persons in address book who does not have an active task.","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"public class FindFreePersonCommand extends Command {","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"    public static final String COMMAND_WORD \u003d \"findfree\";","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons without an active task\";","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"    private final PersonHasNoTaskPredicate predicate \u003d new PersonHasNoTaskPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"    public FindFreePersonCommand() {","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"        model.updateFilteredPersonList(new PersonHasNoTaskPredicate());","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"        return other instanceof FindFreePersonCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"    public String toString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"                .toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"howen02":48}},{"path":"src/main/java/seedu/address/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.TaskContainsKeywordsPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":" * Finds and lists persons in address book whose task name contains any of the argument keywords.","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"    public static final String COMMAND_WORD \u003d \"findtask\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds person in charge of searched task. \"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"            + \"Example: \" + COMMAND_WORD + \" create project report\";","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"    private final TaskContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"    public FindTaskCommand(TaskContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"        if (!(other instanceof FindTaskCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"        FindTaskCommand otherFindTaskCommand \u003d (FindTaskCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"        return predicate.equals(otherFindTaskCommand.predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"howen02"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"howen02"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"howen02"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"howen02"},"content":"                .toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"howen02":57}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yiwern5":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/HistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":" * Lists all the commands entered by user from the start of app launch.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"public class HistoryCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"history\";","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Entered commands (from most recent to earliest):\\n%1$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public static final String MESSAGE_NO_HISTORY \u003d \"You have not yet entered any commands.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        requireNonNull(history);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cString\u003e previousCommands \u003d new ArrayList\u003c\u003e(history.getHistory());","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        if (previousCommands.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"            return new CommandResult(MESSAGE_NO_HISTORY);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        Collections.reverse(previousCommands);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, String.join(\"\\n\", previousCommands)));","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":33}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2024-04-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2024-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yiwern5":4,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_OWNER;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-06"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2024-04-06"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":" * Mark tasks done by employees","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Marked %1$s\u0027s task %2$s as done\";","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"            + \": Mark the task assigned to the identified person as done.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"            + PREFIX_TASK + \"TASK \"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"            + PREFIX_TASK_OWNER + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"            + PREFIX_TASK + \"Complete Project Proposal \"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"            + PREFIX_TASK_OWNER + \"1\";","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"    public static final String MESSAGE_TASK_DOES_NOT_EXIST \u003d \"%s has not been assigned this Task. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"            + \"Please select another Task\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"KiatLun"},"content":"    private final String taskName;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"KiatLun"},"content":"    private final Index index;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"KiatLun"},"content":"     * Mark task of a existing person in the address book as done.","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"KiatLun"},"content":"     * @param taskName","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"KiatLun"},"content":"     * @param index","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"KiatLun"},"content":"    public MarkTaskCommand(String taskName, Index index) {","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"KiatLun"},"content":"        requireAllNonNull(index, taskName);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"KiatLun"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"KiatLun"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"KiatLun"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"KiatLun"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"KiatLun"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"KiatLun"},"content":"        if (index.getZeroBased() \u003e\u003d personList.size()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"KiatLun"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"KiatLun"},"content":"        Person taskOwner \u003d personList.get(index.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"KiatLun"},"content":"        if (!taskOwner.hasTask(taskName)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"KiatLun"},"content":"            throw new CommandException(String.format(MESSAGE_TASK_DOES_NOT_EXIST, Messages.printName(taskOwner)));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"KiatLun"},"content":"        Task task \u003d taskOwner.getTask();","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"KiatLun"},"content":"        model.markTask(task);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-06"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2024-04-06"},{"lineNumber":73,"author":{"gitId":"KiatLun"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"KiatLun"},"content":"                Messages.printName(taskOwner), Messages.printTask(task)));","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"KiatLun":70,"yiwern5":7}},{"path":"src/main/java/seedu/address/logic/commands/ReassignTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-06"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2024-04-06"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":" * Reassigns task to another person","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"public class ReassignTaskCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"    public static final String COMMAND_WORD \u003d \"reassign\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"    public static final String MESSAGE_REASSIGN_TASK_SUCCESS \u003d \"Reassigned task %1$s from %2$s to %3$s successfully\";","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"            + \": Reassigns a task to a person identified by index number.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"            + PREFIX_FROM + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"            + PREFIX_TO + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"            + PREFIX_FROM + \"2 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"            + PREFIX_TO + \"1\";","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"    public static final String MESSAGE_PERSON_IS_BUSY \u003d \"A task has already been assigned for %1$s. \"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"            + \"Please select another person.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"KiatLun"},"content":"    public static final String MESSAGE_TASK_DOES_NOT_EXIST \u003d \"%s has not been assigned a task. \"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"KiatLun"},"content":"            + \"Please select another Task\";","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"KiatLun"},"content":"    private final Index fromIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"KiatLun"},"content":"    private final Index toIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"KiatLun"},"content":"     * Reassigns a task from one person to another.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"KiatLun"},"content":"     * @param fromIndex","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"KiatLun"},"content":"     * @param toIndex","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"KiatLun"},"content":"    public ReassignTaskCommand(Index fromIndex, Index toIndex) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"KiatLun"},"content":"        requireAllNonNull(fromIndex, toIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"KiatLun"},"content":"        this.fromIndex \u003d fromIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"KiatLun"},"content":"        this.toIndex \u003d toIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"KiatLun"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"KiatLun"},"content":"    public CommandResult execute(Model model, CommandHistory commandHistory) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"KiatLun"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"KiatLun"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"KiatLun"},"content":"        if ((fromIndex.getZeroBased() \u003e\u003d personList.size() || toIndex.getZeroBased() \u003e\u003d personList.size())) {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"KiatLun"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"KiatLun"},"content":"        Person assignedFrom \u003d personList.get(fromIndex.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"KiatLun"},"content":"        Person assignedTo \u003d personList.get(toIndex.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"KiatLun"},"content":"        if (assignedTo.isBusy()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"KiatLun"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_IS_BUSY, Messages.printName(assignedTo)));","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"KiatLun"},"content":"        Task task \u003d assignedFrom.getTask();","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"KiatLun"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"KiatLun"},"content":"            throw new CommandException(String.format(MESSAGE_TASK_DOES_NOT_EXIST, Messages.printName(assignedFrom)));","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"KiatLun"},"content":"        model.reassignTask(task, assignedFrom, assignedTo);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-06"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2024-04-06"},{"lineNumber":78,"author":{"gitId":"KiatLun"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"KiatLun"},"content":"        return new CommandResult(String.format(MESSAGE_REASSIGN_TASK_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"KiatLun"},"content":"                Messages.printTask(task), Messages.printName(assignedFrom), Messages.printName(assignedTo)));","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"KiatLun"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"KiatLun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"KiatLun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"KiatLun"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"KiatLun"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"KiatLun"},"content":"        if (!(other instanceof ReassignTaskCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"KiatLun"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"KiatLun"},"content":"        ReassignTaskCommand otherReassignCommand \u003d (ReassignTaskCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"KiatLun"},"content":"        return fromIndex.equals(otherReassignCommand.fromIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"KiatLun"},"content":"                \u0026\u0026 toIndex.equals(otherReassignCommand.toIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KiatLun":95,"yiwern5":4}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2024-04-06"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":" * Reverts the {@code model}\u0027s address book to its previously undone state.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo success!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to redo!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        model.redoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2024-04-06"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":33}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2024-04-06"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":" * Reverts the {@code model}\u0027s address book to its previous state.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo success!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to undo!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        model.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2024-04-06"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":33}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"                        CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_DEPARTMENT, CliSyntax.PREFIX_TAG,","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"                        CliSyntax.PREFIX_EFFICIENCY);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"                CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_DEPARTMENT, CliSyntax.PREFIX_EFFICIENCY)","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"                CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_DEPARTMENT, CliSyntax.PREFIX_EFFICIENCY);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"        Department department \u003d ParserUtil.parseDepartment(argMultimap.getValue(CliSyntax.PREFIX_DEPARTMENT).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"howen02"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"howen02"},"content":"        Efficiency efficiency \u003d ParserUtil.parseEfficiency(argMultimap.getValue(CliSyntax.PREFIX_EFFICIENCY).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"        Comment comment \u003d new Comment(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"        Person person \u003d new Person(name, phone, email, address, department, tagList, efficiency, comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yiwern5":1,"howen02":15,"wolffe88":3,"-":46}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.commands.AssignTaskCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.EditDeadlineCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.commands.FilterEfficiencyCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.commands.FindFreePersonCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.commands.HistoryCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.commands.ReassignTaskCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"        case AssignTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"            return new AssignTaskCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"        case HistoryCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"            return new HistoryCommand();","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":98,"author":{"gitId":"wolffe88"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"wolffe88"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"KiatLun"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"KiatLun"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"            return new UndoCommand();","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"            return new RedoCommand();","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"ziyi22"},"content":"        case FilterEfficiencyCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"ziyi22"},"content":"            return new FilterEfficiencyCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"KiatLun"},"content":"        case ReassignTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"KiatLun"},"content":"            return new ReassignTaskCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"wolffe88"},"content":"        case EditDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"wolffe88"},"content":"            return new EditDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"howen02"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"howen02"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"howen02"},"content":"        case FindFreePersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"howen02"},"content":"            return new FindFreePersonCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"wolffe88"},"content":"        case CommentCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"wolffe88"},"content":"            return new CommentCommandParser().parse(arguments);","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ziyi22":8,"yiwern5":12,"KiatLun":8,"howen02":8,"wolffe88":12,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/AssignTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.commands.AssignTaskCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":" * Parses input arguments and creates a new AssignTaskCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"public class AssignTaskCommandParser implements Parser\u003cAssignTaskCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    public AssignTaskCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TASK, PREFIX_DEADLINE, PREFIX_TO);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK, PREFIX_DEADLINE, PREFIX_TO)","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        String taskName \u003d ParserTaskUtil.parseTaskName(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"        Deadline deadline \u003d ParserTaskUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"        Index personIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TO).get());","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        Task task \u003d new Task(taskName, deadline);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"        return new AssignTaskCommand(task, personIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":41}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    public static final Prefix PREFIX_DEPARTMENT \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    public static final Prefix PREFIX_TASK \u003d new Prefix(\"task/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"by/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    public static final Prefix PREFIX_TO \u003d new Prefix(\"to/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"    public static final Prefix PREFIX_FROM \u003d new Prefix(\"from/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"    public static final Prefix PREFIX_EFFICIENCY \u003d new Prefix(\"eff/\");","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"    public static final Prefix PREFIX_TASK_OWNER \u003d new Prefix(\"o/\");","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"    public static final Prefix PREFIX_COMMENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yiwern5":1,"ziyi22":4,"KiatLun":2,"howen02":1,"wolffe88":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/CommentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" * Parses input arguments and creates a new {@code CommentCommand} object","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"public class CommentCommandParser implements Parser\u003cCommentCommand\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code CommentCommand}","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"     * and returns a {@code CommentCommand} object for execution.","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"    public CommentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        Index index;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        Comment comment \u003d new Comment(argMultimap.getValue(PREFIX_COMMENT).orElse(\"\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        return new CommentCommand(index, comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"wolffe88":37}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"                        PREFIX_DEPARTMENT, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"                PREFIX_ADDRESS, PREFIX_DEPARTMENT);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        if (argMultimap.getValue(PREFIX_DEPARTMENT).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"            editPersonDescriptor.setDepartment(ParserUtil.parseDepartment(","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"                    argMultimap.getValue(PREFIX_DEPARTMENT).get()));","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yiwern5":9,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/EditDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.EditDeadlineCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" * Parses input arguments and creates a new EditDeadlineTaskCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"public class EditDeadlineCommandParser implements Parser\u003cEditDeadlineCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"     * Parses the given {@code String} of arguments in the context of the EditDeadlineCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"     * and returns an EditDeadlineCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    public EditDeadlineCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_DEADLINE);","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        Index index;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"            throw new ParseException(String","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"                    .format(MESSAGE_INVALID_COMMAND_FORMAT, EditDeadlineCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DEADLINE)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"        Deadline deadline \u003d ParserTaskUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"        return new EditDeadlineCommand(index, deadline);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wolffe88":52}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        return new FilterCommand(new PersonContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wolffe88":33}},{"path":"src/main/java/seedu/address/logic/parser/FilterEfficiencyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.commands.FilterEfficiencyCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.PersonLessThanEfficiencyPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":" * Parses input arguments and creates a new FilterEfficiencyCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"public class FilterEfficiencyCommandParser implements Parser\u003cFilterEfficiencyCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterEfficiencyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"     * and returns a FilterEfficiencyCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    public FilterEfficiencyCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        //check if it is an empty input","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterEfficiencyCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"            //check if the input is an integer","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"            int threshold \u003d Integer.parseInt(trimmedArgs);","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"            //check if the input is in the range (0-100)","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"            if (!Efficiency.isValidEfficiency(trimmedArgs)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"                throw new ParseException(Efficiency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"            return new FilterEfficiencyCommand(new PersonLessThanEfficiencyPredicate(threshold));","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"            throw new ParseException(\"The input efficiency should be an integer.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ziyi22":44}},{"path":"src/main/java/seedu/address/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.TaskContainsKeywordsPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":" * Parses input arguments and creates a new FindTaskCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"        String[] taskNameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"        return new FindTaskCommand(new TaskContainsKeywordsPredicate(Arrays.asList(taskNameKeywords)));","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"howen02":33}},{"path":"src/main/java/seedu/address/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_OWNER;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"    public MarkTaskCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TASK, PREFIX_TASK_OWNER);","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK, PREFIX_TASK_OWNER)","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"        String taskName \u003d ParserTaskUtil.parseTaskName(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"        Index personIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK_OWNER).get());","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"        return new MarkTaskCommand(taskName, personIndex);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"KiatLun":36}},{"path":"src/main/java/seedu/address/logic/parser/ParserTaskUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"public class ParserTaskUtil {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_INVALID_DEADLINE \u003d \"Invalid date/time format. Please use dd-MM-yyyy HHmm\";","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     * Parses a {@code String taskName} into a {@code String}.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"    public static String parseTaskName(String taskName) {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"        String trimmedTaskName \u003d taskName.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"        return trimmedTaskName;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     * Leading and trailing whitespaces will be trimmed before parsing.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"            LocalDateTime parsedDeadline \u003d LocalDateTime.parse(trimmedDeadline, formatter);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"            return new Deadline(parsedDeadline);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"            throw new ParseException(MESSAGE_INVALID_DEADLINE);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":47}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"     * Parses a {@code String department} into a {@code Department}.","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"     * @throws ParseException if the given {@code department} is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"    public static Department parseDepartment(String department) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"        requireNonNull(department);","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"        String trimmedDepartment \u003d department.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"        if (!Department.isValidDepartment(trimmedDepartment)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"            throw new ParseException(Department.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"        return new Department(trimmedDepartment);","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"howen02"},"content":"     * Parses a {@code String efficiency} into a {@code Efficiency}.","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"howen02"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"howen02"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"howen02"},"content":"     * @throws ParseException if the given {@code efficiency} is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"howen02"},"content":"    public static Efficiency parseEfficiency(String efficiency) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"howen02"},"content":"        requireNonNull(efficiency);","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"howen02"},"content":"        String trimmedEfficiency \u003d efficiency.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"howen02"},"content":"        if (!Efficiency.isValidEfficiency(trimmedEfficiency)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"howen02"},"content":"            throw new ParseException(Efficiency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"howen02"},"content":"        return new Efficiency(trimmedEfficiency);","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yiwern5":16,"howen02":16,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/ReassignTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.commands.ReassignTaskCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":" * Parse input arguments and create a new ReassignTaskCommand object.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"public class ReassignTaskCommandParser implements Parser\u003cReassignTaskCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"    public ReassignTaskCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_FROM, PREFIX_TO);","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FROM, PREFIX_TO)","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReassignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"        Index fromIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_FROM).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"        Index toIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TO).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"        return new ReassignTaskCommand(fromIndex, toIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KiatLun":37}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import seedu.address.commons.util.InvalidationListenerManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    private final InvalidationListenerManager invalidationListenerManager \u003d new InvalidationListenerManager();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    //    {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    //        persons \u003d new UniquePersonList();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"    //        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"    //    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"     * Constructs the {@code AddressBook}","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    public AddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"        Task task \u003d key.getTask();","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"ziyi22"},"content":"            tasks.remove(key.getTask());","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"     * Gets {@code Person} from {@code AddressBook} using {@code Name}","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"     * {@code name} of the person","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"ziyi22"},"content":"    public Person getPerson(Name name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"ziyi22"},"content":"        return persons.getPerson(name);","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"ziyi22"},"content":"    //// task-level operations","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"ziyi22"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"ziyi22"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(task);","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"ziyi22"},"content":"        return tasks.contains(task);","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"ziyi22"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"ziyi22"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"ziyi22"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"ziyi22"},"content":"        tasks.add(t);","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"yiwern5"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"yiwern5"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"ziyi22"},"content":"     * Assign a task to a person by adding task to the address book,","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"ziyi22"},"content":"     * setting the person\u0027s task field and adding the task\u0027s personInCharge.","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"ziyi22"},"content":"    public void assignTask(Task task, Person pic) {","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"yiwern5"},"content":"        Person editedPerson \u003d new Person(pic.getName(), pic.getPhone(), pic.getEmail(),","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"wolffe88"},"content":"                pic.getAddress(), pic.getDepartment(), pic.getTags(), pic.getEfficiency(), pic.getComment());","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"yiwern5"},"content":"        addTask(task);","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"yiwern5"},"content":"        task.setPersonInCharge(editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"yiwern5"},"content":"        editedPerson.setTask(task);","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"yiwern5"},"content":"        setPerson(pic, editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"KiatLun"},"content":"     * Reassigns a task from one person to another person.","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"KiatLun"},"content":"    public void reassignTask(Task task, Person oldPic, Person pic) {","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"ziyi22"},"content":"        Person removeTaskFrom \u003d removeTaskPic(oldPic);","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"ziyi22"},"content":"        tasks.remove(task);","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"ziyi22"},"content":"        assignTask(task, pic);","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"ziyi22"},"content":"        setPerson(oldPic, removeTaskFrom);","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"KiatLun"},"content":"        indicateModified();","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"ziyi22"},"content":"    private Person removeTaskPic(Person pic) {","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(pic);","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"ziyi22"},"content":"        Person editedPerson \u003d new Person(pic.getName(), pic.getPhone(), pic.getEmail(),","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"ziyi22"},"content":"                pic.getAddress(), pic.getDepartment(), pic.getTags(), pic.getEfficiency(), pic.getComment());","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"ziyi22"},"content":"        editedPerson.removeTask();","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"ziyi22"},"content":"        return editedPerson;","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"yiwern5"},"content":"     * Marks an assigned task as done.","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"KiatLun"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"yiwern5"},"content":"        Task editedTask \u003d task.markDone();","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"yiwern5"},"content":"        Person target \u003d editedTask.getPersonInCharge();","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"yiwern5"},"content":"        Person editedPerson \u003d new Person(target.getName(), target.getPhone(), target.getEmail(),","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"wolffe88"},"content":"                target.getAddress(), target.getDepartment(), target.getTags(),","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"wolffe88"},"content":"                target.updateEfficiency(), target.getComment());","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"yiwern5"},"content":"        setTask(task, editedTask);","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"yiwern5"},"content":"        setPerson(target, editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"yiwern5"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.removeListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":232,"author":{"gitId":"yiwern5"},"content":"     * Notifies listeners that the address book has been modified.","lastModifiedDate":"2024-03-27"},{"lineNumber":233,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"yiwern5"},"content":"    protected void indicateModified() {","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.callListeners(this);","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"ziyi22"},"content":"                .add(\"tasks\", tasks)","lastModifiedDate":"2024-03-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":253,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":254,"author":{"gitId":"ziyi22"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":255,"author":{"gitId":"ziyi22"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-19"},{"lineNumber":256,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":257,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":270,"author":{"gitId":"ziyi22"},"content":"        return persons.equals(otherAddressBook.persons) \u0026\u0026 tasks.equals(otherAddressBook.tasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":277,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yiwern5":61,"ziyi22":78,"KiatLun":8,"wolffe88":3,"-":128}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"KiatLun"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"     * Adds the given task.","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"    void addTask(Task task);","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"ziyi22"},"content":"     * Assigns specific task to a person","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"ziyi22"},"content":"    void assignTask(Task task, Person person);","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"KiatLun"},"content":"     * Reassigns task from one person to another.","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"KiatLun"},"content":"    void reassignTask(Task task, Person assignedFrom, Person assignedTo);","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"     * Marks an assigned task as done.","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"KiatLun"},"content":"    void markTask(Task task);","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"ziyi22"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"ziyi22"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"ziyi22"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"     * Returns true if the model has previous address book states to restore.","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"     * Returns true if the model has undone address book states to restore.","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":"     * Restores the model\u0027s address book to its previous state.","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"    void undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"     * Restores the model\u0027s address book to its previously undone state.","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"yiwern5"},"content":"    void redoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"     * Saves the current address book state for undo/redo.","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"    void commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ziyi22":26,"KiatLun":9,"yiwern5":35,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    private final VersionedAddressBook versionedAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        super();","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        this.versionedAddressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.versionedAddressBook.getPersonList());","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.versionedAddressBook.getTaskList());","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"        this.versionedAddressBook.resetData(addressBook);","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"        return versionedAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"        return versionedAddressBook.hasPerson(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.removePerson(target);","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.addPerson(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"ziyi22"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(task);","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"        return versionedAddressBook.hasTask(task);","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"ziyi22"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.addTask(task);","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.setTask(target, editedTask);","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"ziyi22"},"content":"    public void assignTask(Task task, Person assignedTo) {","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"ziyi22"},"content":"        requireAllNonNull(task, assignedTo);","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.assignTask(task, assignedTo);","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"KiatLun"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"KiatLun"},"content":"    public void reassignTask(Task task, Person assignedFrom, Person assignedTo) {","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"KiatLun"},"content":"        requireAllNonNull(task, assignedFrom, assignedTo);","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"KiatLun"},"content":"        versionedAddressBook.reassignTask(task, assignedFrom, assignedTo);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"KiatLun"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"KiatLun"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"KiatLun"},"content":"        requireNonNull(task);","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.markTask(task);","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"ziyi22"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"ziyi22"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"KiatLun"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"KiatLun"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"KiatLun"},"content":"        return filteredTasks;","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":182,"author":{"gitId":"yiwern5"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo/Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"yiwern5"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"yiwern5"},"content":"        return versionedAddressBook.canUndo();","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"yiwern5"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"yiwern5"},"content":"        return versionedAddressBook.canRedo();","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"yiwern5"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"yiwern5"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"yiwern5"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"        return versionedAddressBook.equals(otherModelManager.versionedAddressBook)","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ziyi22":20,"yiwern5":51,"KiatLun":16,"-":140}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public interface ReadOnlyAddressBook extends Observable {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yiwern5":2,"ziyi22":7,"-":16}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * {@code AddressBook} that keeps track of its own history.","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final List\u003cReadOnlyAddressBook\u003e addressBookStateList;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private int currentStatePointer;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     * Constructs the {@code VersionedAddressBook}","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook initialState) {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"        super(initialState);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        addressBookStateList.add(new AddressBook(initialState));","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     * Saves a copy of the current {@code AddressBook} state at the end of the state list.","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     * Undone states are removed from the state list.","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    public void commit() {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        removeStatesAfterCurrentPointer();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        addressBookStateList.add(new AddressBook(this));","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        indicateModified();","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    private void removeStatesAfterCurrentPointer() {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        addressBookStateList.subList(currentStatePointer + 1, addressBookStateList.size()).clear();","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"     * Restores the address book to its previous state.","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    public void undo() {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        if (!canUndo()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"            throw new NoUndoableStateException();","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        currentStatePointer--;","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"     * Restores the address book to its previously undone state.","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    public void redo() {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"        if (!canRedo()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"            throw new NoRedoableStateException();","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"     * Returns true if {@code undo()} has address book states to undo.","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    public boolean canUndo() {","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"     * Returns true if {@code redo()} has address book states to redo.","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"    public boolean canRedo() {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"        return currentStatePointer \u003c addressBookStateList.size() - 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"        if (!(other instanceof VersionedAddressBook)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook otherVersionedAddressBook \u003d (VersionedAddressBook) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"        // state check","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"        return super.equals(otherVersionedAddressBook)","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"                \u0026\u0026 addressBookStateList.equals(otherVersionedAddressBook.addressBookStateList)","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"                \u0026\u0026 currentStatePointer \u003d\u003d otherVersionedAddressBook.currentStatePointer;","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"     * Thrown when trying to {@code undo()} but can\u0027t.","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"yiwern5"},"content":"    public static class NoUndoableStateException extends RuntimeException {","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"        private NoUndoableStateException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"yiwern5"},"content":"            super(\"Current state pointer at start of addressBookState list, unable to undo.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"     * Thrown when trying to {@code redo()} but can\u0027t.","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"    public static class NoRedoableStateException extends RuntimeException {","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"        private NoRedoableStateException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"            super(\"Current state pointer at end of addressBookState list, unable to redo.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":113}},{"path":"src/main/java/seedu/address/model/person/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.model.person.Name.VALIDATION_REGEX;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":" * Represents a Person\u0027s comment in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"public class Comment {","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"    public final String comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"     * Constructs an {@code comment}.","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"     * @param comment A valid comment.","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"    public Comment(String comment) {","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"        requireNonNull(comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    public static boolean isValidComment(String test) {","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        return this.comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        if (!(other instanceof Comment)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        Comment otherComment \u003d (Comment) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"        return comment.equals(otherComment.comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"        return this.comment.hashCode();","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"wolffe88":56}},{"path":"src/main/java/seedu/address/model/person/Department.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * Represents a Department in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidDepartment(String)}","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public class Department {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"            \"Department should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public final String department;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@code Department}.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * @param department A valid department name.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public Department(String department) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        requireNonNull(department);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        checkArgument(isValidDepartment(department), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        this.department \u003d department.toUpperCase();","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * Returns true if a given string is a valid department name.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    public static boolean isValidDepartment(String test) {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        if (!(other instanceof Department)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        Department otherDepartment \u003d (Department) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        return department.equals(otherDepartment.department);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        return department.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"howen02"},"content":"        return department;","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"yiwern5":61,"howen02":1,"wolffe88":1}},{"path":"src/main/java/seedu/address/model/person/Efficiency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":" * Represents a Person\u0027s efficiency in the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEfficiency(String)}","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"public class Efficiency {","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"            \"Efficiency should be an integer in the range 0 to 100\";","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\b(\\\\d{1,2}|100)\\\\b\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"    public final String value;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"     * Constructs a {@code Efficiency}.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"     * @param efficiency A valid efficiency","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"    public Efficiency(String efficiency) {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"        requireNonNull(efficiency);","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"        checkArgument(isValidEfficiency(efficiency), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"        value \u003d efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"     * Returns true if a given string is a valid efficiency.","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"    public static boolean isValidEfficiency(String test) {","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"     * Increases the efficiency by the specified amount.","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"     * @param amount The amount to increase the efficiency by.","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"    public Efficiency increase(int amount) {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"howen02"},"content":"        int currentValue \u003d Integer.parseInt(this.value);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"        int newValue \u003d currentValue + amount;","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"        newValue \u003d Math.min(newValue, 100);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"        return new Efficiency(String.valueOf(newValue));","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"     * Decreases the efficiency by the double specified amount.","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"howen02"},"content":"     * @param amount The amount to decrease the efficiency by.","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"howen02"},"content":"    public Efficiency decrease(int amount) {","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"howen02"},"content":"        int currentValue \u003d Integer.parseInt(this.value);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"howen02"},"content":"        int newValue \u003d currentValue - (2 * amount);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"howen02"},"content":"        newValue \u003d Math.max(newValue, 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"howen02"},"content":"        return new Efficiency(String.valueOf(newValue));","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"howen02"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"howen02"},"content":"        return value;","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"howen02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"howen02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"howen02"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"howen02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"howen02"},"content":"        if (!(other instanceof Efficiency)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"howen02"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"howen02"},"content":"        Efficiency otherEfficiency \u003d (Efficiency) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"howen02"},"content":"        return value.equals(otherEfficiency.value);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"howen02"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"howen02"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"howen02":82}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"//import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"                .anyMatch(keyword -\u003e person.getName().fullName.toLowerCase().replaceAll(\"\\\\s\", \"\")","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"                        .contains(keyword.toLowerCase()));","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wolffe88":3,"-":42}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    private final Department department;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    private transient Task task \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"    private Efficiency efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    private final Comment comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Department department, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"                  Efficiency efficiency, Comment comment) {","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        requireAllNonNull(name, phone, email, address, department, tags, comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        this.department \u003d department;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"        this.efficiency \u003d efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"    public Department getDepartment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        return department;","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"howen02"},"content":"    public Efficiency getEfficiency() {","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"howen02"},"content":"        return efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"wolffe88"},"content":"    public Comment getComment() {","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"        return comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"    public Task getTask() {","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"        return task;","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"     * Sets a {@code Task} to person","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"     * @param task Task to be assigned to this person.","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"    public void setTask(Task task) {","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"ziyi22"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"     * Remove person\u0027s {@code Task}","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"    public void removeTask() {","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"        this.task \u003d null;","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"    public boolean isBusy() {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"        return this.task !\u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"KiatLun"},"content":"     * Check if person has specified task assigned","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"KiatLun"},"content":"     * @param taskName","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"KiatLun"},"content":"     * @return boolean","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"KiatLun"},"content":"    public boolean hasTask(String taskName) {","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"KiatLun"},"content":"        if (this.task \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"KiatLun"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"KiatLun"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"KiatLun"},"content":"            return this.task.getTaskTitle().equals(taskName);","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"howen02"},"content":"     * Updates the efficiency value based on when the task was completed,","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"howen02"},"content":"     * +1 on the deadline day itself, +N for N days early and -2N for N days late.","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"howen02"},"content":"    public Efficiency updateEfficiency() {","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"howen02"},"content":"        if (this.task \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"howen02"},"content":"            return this.efficiency;","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"howen02"},"content":"        LocalDateTime deadlineDateTime \u003d this.task.getDeadline().getDateTime();","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"howen02"},"content":"        int daysBetween \u003d (int) ChronoUnit.DAYS.between(LocalDateTime.now(), deadlineDateTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"howen02"},"content":"        if (daysBetween \u003d\u003d 0) {","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"howen02"},"content":"            return this.efficiency.increase(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"howen02"},"content":"        } else if (daysBetween \u003e 0) {","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"howen02"},"content":"            return this.efficiency.increase(daysBetween);","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"howen02"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"howen02"},"content":"            return this.efficiency.decrease(-daysBetween);","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2024-03-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2024-03-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2024-03-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2024-03-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2024-03-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"wolffe88"},"content":"        return Objects.hash(name, phone, email, address, department, tags, comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-03-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2024-03-05"},{"lineNumber":193,"author":{"gitId":"yiwern5"},"content":"                .add(\"department\", department)","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-05"},{"lineNumber":195,"author":{"gitId":"wolffe88"},"content":"                .add(\"comment\", comment)","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2024-03-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ziyi22":25,"yiwern5":6,"KiatLun":13,"howen02":30,"wolffe88":11,"-":114}},{"path":"src/main/java/seedu/address/model/person/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"public class PersonContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    public PersonContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"                .anyMatch(keyword -\u003e person.getDepartment().toString().toLowerCase().replaceAll(\"\\\\s\", \"\")","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"                        .contains(keyword.toLowerCase())","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"                        || person.getTags().toString().toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        if (!(other instanceof PersonContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"        PersonContainsKeywordsPredicate otherPersonContainsKeywordsPredicate \u003d (PersonContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"        return keywords.equals(otherPersonContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wolffe88":45}},{"path":"src/main/java/seedu/address/model/person/PersonHasNoTaskPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":" * Tests that a {@code Person}\u0027s {@code Name} has no active task.","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"public class PersonHasNoTaskPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"    public PersonHasNoTaskPredicate() {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"        return person.isBusy();","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"        // Check for identity","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"        // Check for correct type","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"        return other instanceof PersonHasNoTaskPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"    public String toString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"        return new ToStringBuilder(this).add(\"a\", \"a\").toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"howen02":34}},{"path":"src/main/java/seedu/address/model/person/PersonLessThanEfficiencyPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":" * Tests that a {@code Person}\u0027s {@code Efficiency} less than efficiency threshold given.","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"public class PersonLessThanEfficiencyPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"    private final Integer threshold;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    public PersonLessThanEfficiencyPredicate(int threshold) {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"        this.threshold \u003d threshold;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"        int effi \u003d Integer.parseInt(person.getEfficiency().toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"        return effi \u003c\u003d this.threshold;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"        if (!(other instanceof PersonLessThanEfficiencyPredicate)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate otherPersonLessThanEfficiency \u003d (PersonLessThanEfficiencyPredicate) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        return threshold.equals(otherPersonLessThanEfficiency.threshold);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        return new ToStringBuilder(this).add(\"threshold\", threshold).toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ziyi22":41}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long, \"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"                    + \"and no more than 15 digits long\";","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,15}\";","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yiwern5":1,"wolffe88":2,"-":59}},{"path":"src/main/java/seedu/address/model/person/TaskContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"public class TaskContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"    public TaskContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"        if (person.getTask() \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"        return keywords.stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"                .allMatch(keyword -\u003e person.getTask().toString().toLowerCase().replaceAll(\"\\\\s\", \"\")","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"                .contains(keyword.toLowerCase()));","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"        if (!(other instanceof TaskContainsKeywordsPredicate)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"howen02"},"content":"        TaskContainsKeywordsPredicate otherTaskContainsKeywordsPredicate \u003d (TaskContainsKeywordsPredicate) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"        return keywords.equals(otherTaskContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"howen02":48}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"     * Gets a person by using the person\u0027s name.","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"    public Person getPerson(Name name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"                return person;","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"ziyi22"},"content":"        return null;","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ziyi22":12,"-":149}},{"path":"src/main/java/seedu/address/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.model.task;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":" * Represents a Task\u0027s deadline in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline(String)}","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"public class Deadline {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Deadline should be in the format: dd-MM-yyyy HHmm\";","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"     * Constructs a {@code Deadline} using Local Date Time","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"     * @param dateTime A valid deadline.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public Deadline(LocalDateTime dateTime) {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"     * Constructs a {@code Deadline} using Local Date Time","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"     * @param deadline A valid deadline.","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    public Deadline(String deadline) {","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"        this.dateTime \u003d LocalDateTime.parse(deadline, f);","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"     * Returns true if the deadline is in the correct format.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    public static boolean isValidDeadline(String deadline) {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"            LocalDateTime.parse(deadline, FORMATTER);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"        return this.dateTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"        return dateTime.format(FORMATTER);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"        Deadline otherName \u003d (Deadline) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"        return dateTime.equals(otherName.dateTime);","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":58,"wolffe88":15}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.model.task;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"public class Task {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    private final String taskTitle;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    private Person personInCharge;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"    private boolean isDone;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"     * Constructs a {@code Task}","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"     * @param taskTitle A task name.","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     * @param deadline Deadline for the specific task.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    public Task(String taskTitle, Deadline deadline) {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"        this.taskTitle \u003d taskTitle;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"     * Constructs a {@code Task} with a specified status.","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"     * @param taskTitle A task name.","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"     * @param deadline Deadline for the specific task.","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"     * @param isDone The status of the task (true if done, false otherwise).","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"    public Task(String taskTitle, Deadline deadline, Boolean isDone) {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"        this.taskTitle \u003d taskTitle;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"howen02"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"     * Edit the deadline of the task.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"     * @param deadline new deadline of the task.","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"     * @return an immutable Task instance.","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    public Task editDeadline(Deadline deadline) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        Task editedTask \u003d new Task(this.taskTitle, deadline, this.isDone());","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        editedTask.setPersonInCharge(this.personInCharge);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"        return editedTask;","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    public String getTaskTitle() {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"        return this.taskTitle;","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"        return this.deadline;","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"    public Person getPersonInCharge() {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"        return this.personInCharge;","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"     * Add person in charge to a task.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"     * @param pic","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"    public void setPersonInCharge(Person pic) {","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"        this.personInCharge \u003d pic;","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"howen02"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"howen02"},"content":"        return this.isDone;","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"     * Marks an immutable task as done.","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"     * @return Task an immutable Task instance","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"    public Task markDone() {","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"        Task doneTask \u003d new Task(this.taskTitle, this.deadline, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"        doneTask.setPersonInCharge(this.personInCharge);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"        return doneTask;","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"                \u0026\u0026 otherTask.getTaskTitle().equals(getTaskTitle());","lastModifiedDate":"2024-04-05"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"ziyi22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"ziyi22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"ziyi22"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"ziyi22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"ziyi22"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"ziyi22"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"ziyi22"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"ziyi22"},"content":"        return taskTitle.equals(otherTask.taskTitle);","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"ziyi22"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"ziyi22"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"ziyi22"},"content":"        return Objects.hash(taskTitle, deadline);","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"ziyi22"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"ziyi22"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"ziyi22"},"content":"                .add(\"title\", taskTitle)","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"ziyi22"},"content":"                .add(\"deadline\", deadline)","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"ziyi22"},"content":"                .add(\"personInCharge\", personInCharge.getName())","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"ziyi22"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":98,"yiwern5":17,"howen02":20,"wolffe88":3}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.model.task;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a person uses Task#equals(Object) so","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":" *","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":" *","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"     * The task must exist in the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"    public void setPersons(UniqueTaskList replacement) {","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"ziyi22"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"ziyi22"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"ziyi22"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"ziyi22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"ziyi22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"ziyi22"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"ziyi22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"ziyi22"},"content":"        if (!(other instanceof UniqueTaskList)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"ziyi22"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"ziyi22"},"content":"        UniqueTaskList otherUniqueTaskList \u003d (UniqueTaskList) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"ziyi22"},"content":"        return internalList.equals(otherUniqueTaskList.internalList);","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"ziyi22"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"ziyi22"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"ziyi22"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"ziyi22"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"ziyi22"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"ziyi22"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"ziyi22"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"ziyi22"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"ziyi22"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"ziyi22"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"ziyi22"},"content":"                    return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"ziyi22"},"content":"                }","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"ziyi22"},"content":"        return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":129,"yiwern5":20}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":" * identity).","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"public class TaskNotFoundException extends RuntimeException{","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    public static final Comment EMPTY_COMMENT \u003d new Comment(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Department(\"Business Development\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"                getTagSet(\"friends\"), new Efficiency(\"80\"), EMPTY_COMMENT),","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Department(\"IT\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Efficiency(\"60\"), EMPTY_COMMENT),","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Department(\"Marketing\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"                getTagSet(\"neighbours\"), new Efficiency(\"90\"), EMPTY_COMMENT),","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Department(\"Marketing\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"                getTagSet(\"family\"), new Efficiency(\"50\"), EMPTY_COMMENT),","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Department(\"Finance\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"                getTagSet(\"classmates\"), new Efficiency(\"20\"), EMPTY_COMMENT),","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Department(\"Production\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"                getTagSet(\"colleagues\"), new Efficiency(\"0\"), EMPTY_COMMENT)","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yiwern5":7,"howen02":1,"wolffe88":8,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    private final String department;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"    private final String efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"    private final String comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"                             @JsonProperty(\"department\") String department,","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"                             @JsonProperty(\"efficiency\") String efficiency,","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"                             @JsonProperty(\"comment\") String comment) {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"        this.department \u003d department;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"howen02"},"content":"        this.efficiency \u003d efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"        department \u003d source.getDepartment().department;","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"howen02"},"content":"        efficiency \u003d source.getEfficiency().value;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"        comment \u003d source.getComment().comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"        if (department \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Department.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"        if (!Department.isValidDepartment(department)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"            throw new IllegalValueException(Department.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"        final Department modelDepartment \u003d new Department(department);","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"howen02"},"content":"        if (efficiency \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"howen02"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"howen02"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Efficiency.class.getSimpleName()));","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"howen02"},"content":"        if (!Efficiency.isValidEfficiency(efficiency)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"howen02"},"content":"            throw new IllegalValueException(Efficiency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"howen02"},"content":"        final Efficiency modelEfficiency \u003d new Efficiency(efficiency);","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"wolffe88"},"content":"        final Comment modelComment;","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"wolffe88"},"content":"        if (comment \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"wolffe88"},"content":"            modelComment \u003d new Comment(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"wolffe88"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"wolffe88"},"content":"            modelComment \u003d new Comment(comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"wolffe88"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelDepartment, modelTags,","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"wolffe88"},"content":"                modelEfficiency, modelComment);","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yiwern5":14,"howen02":15,"wolffe88":19,"-":108}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    //private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-ddTHH:mm\");","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"    private final String title;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    private final String personInCharge;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"    private final Boolean isDone;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"    public JsonAdaptedTask(@JsonProperty(\"title\") String title, @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"                           @JsonProperty(\"personInCharge\") String personInCharge,","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"                           @JsonProperty(\"isDone\") Boolean isDone) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        this.personInCharge \u003d personInCharge;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"        title \u003d source.getTaskTitle();","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        deadline \u003d source.getDeadline().getDateTime();","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"        personInCharge \u003d source.getPersonInCharge().getName().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"howen02"},"content":"        isDone \u003d source.isDone();","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"    public Task toModelType(AddressBook ab) throws IllegalValueException {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"        if (title \u003d\u003d null || title \u003d\u003d \"\") {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"task title\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"        final String modelTaskTitle \u003d title;","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"deadline\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"        final Deadline modelDeadline \u003d new Deadline(deadline);","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"        if (personInCharge \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"personInCharge\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"howen02"},"content":"        if (isDone \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"howen02"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"isDone\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"howen02"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"        if (!Name.isValidName(personInCharge)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"        final Name name \u003d new Name(personInCharge);","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"        // Find the Person object from the personList using the personName","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"        final Person modelPic \u003d ab.getPerson(name);","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"        if (modelPic \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"            throw new IllegalValueException(\"Person with name \" + personInCharge + \" not found!\");","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"howen02"},"content":"        Task task \u003d new Task(modelTaskTitle, modelDeadline, isDone);","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"        ab.assignTask(task, modelPic);","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"        return task;","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":80,"howen02":11,"wolffe88":1}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"                                       @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"            Task task \u003d jsonAdaptedTask.toModelType(addressBook);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"                continue;","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ziyi22":17,"-":59}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yiwern5":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"    private TasksDisplay tasksDisplay;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"KiatLun"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"KiatLun"},"content":"    private StackPane tasksList;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"KiatLun"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"KiatLun"},"content":"    private Label listTitle;","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"KiatLun"},"content":"        tasksDisplay \u003d new TasksDisplay(logic.getTaskList());","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"KiatLun"},"content":"        tasksList.getChildren().add(tasksDisplay.getRoot());","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KiatLun":12,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"    private Label task;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"    private Label efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"    private Label comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        efficiency.setText(person.getEfficiency().value + \"%\");","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"        comment.setText(person.getComment().comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        double efficiencyValue \u003d Double.parseDouble(person.getEfficiency().value);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        if (efficiencyValue \u003c 80 \u0026\u0026 efficiencyValue \u003e 20) {","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"            efficiency.setStyle(\"-fx-text-fill: yellow;\");","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        } else if (efficiencyValue \u003c\u003d 20) {","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"            efficiency.setStyle(\"-fx-text-fill: red;\");","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"        Label departmentLabel \u003d new Label(person.getDepartment().department);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"        departmentLabel.setStyle(\"-fx-background-color: #3e7b91;\");","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"        tags.getChildren().add(departmentLabel);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"                    Label tagLabel \u003d new Label(tag.tagName);","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"                    tags.getChildren().add(tagLabel);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"                });","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ziyi22"},"content":"        if (person.getTask() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"ziyi22"},"content":"            task.setText(displayCurrentTask(person.getTask()));","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"ziyi22"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"ziyi22"},"content":"            task.setText(\"No current task\");","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"ziyi22"},"content":"    private String displayCurrentTask(Task t) {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"ziyi22"},"content":"        String taskTitle \u003d t.getTaskTitle();","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"ziyi22"},"content":"        String deadline \u003d t.getDeadline().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"        return (\"Current task: \" + taskTitle + \" (by \" + deadline + \")\");","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ziyi22":14,"yiwern5":14,"howen02":1,"wolffe88":5,"-":59}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"    private static final String DONE_STRING \u003d \"Done\";","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"    private static final String NOT_DONE_STRING \u003d \"Not Done\";","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"    public final Task task;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":"    private Label id;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"    private Label deadline;","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"    private Label taskName;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"    private Label status;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"    private Label inCharge;","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"     * Creates a {@code TaskCard} with the given {@code Task}, index and","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"     * other relevant information to display.","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"KiatLun"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"KiatLun"},"content":"        super(FXML);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"KiatLun"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"KiatLun"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"KiatLun"},"content":"        taskName.setText(task.getTaskTitle());","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"KiatLun"},"content":"        deadline.setText(getDeadline(task));","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"KiatLun"},"content":"        status.setText(getStatus(task));","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"KiatLun"},"content":"        inCharge.setText(getPersonInCharge(task));","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"KiatLun"},"content":"     * Get name of person in charge.","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"KiatLun"},"content":"    private String getPersonInCharge(Task task) {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"KiatLun"},"content":"        return \"In Charge: \" + task.getPersonInCharge().getName().fullName;","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"KiatLun"},"content":"     * Get deadline of Task.","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"KiatLun"},"content":"    private String getDeadline(Task task) {","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"KiatLun"},"content":"        return \"Deadline: \" + task.getDeadline().toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"KiatLun"},"content":"     * Get the current status of Task.","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"KiatLun"},"content":"    private String getStatus(Task task) {","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"KiatLun"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"KiatLun"},"content":"        if (task.isDone()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"KiatLun"},"content":"            output +\u003d DONE_STRING;","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"KiatLun"},"content":"            status.setStyle(\"-fx-text-fill: green;\");","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"KiatLun"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"KiatLun"},"content":"            output +\u003d NOT_DONE_STRING;","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"KiatLun"},"content":"            status.setStyle(\"-fx-text-fill: red;\");","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"KiatLun"},"content":"        return output;","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":81}},{"path":"src/main/java/seedu/address/ui/TasksDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":" * List containing all tasks.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"public class TasksDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"    private static final String FXML \u003d \"TasksDisplay.fxml\";","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":"     * Creates a {@code TasksDisplay} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"    public TasksDisplay(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"        super(FXML);","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"        taskListView.setCellFactory(listview -\u003e new TaskListViewCell());","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"        protected void updateItem(Task task, boolean isEmpty) {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"            super.updateItem(task, isEmpty);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"            if (isEmpty || task \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"KiatLun"},"content":"                setGraphic(null);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"KiatLun"},"content":"                setText(null);","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"KiatLun"},"content":"            } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"KiatLun"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"KiatLun"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":46}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ET_logo.png\";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yiwern5":1,"-":87}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":".command-pane {","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"     -fx-background-color: #F2E6CE;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    -fx-base: #FBF9F1;","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"    -fx-control-inner-background: #FBF9F1;","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"    -fx-padding: 0 0 5 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"    -fx-spacing: 10 10 10 10;","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BBAB8C;","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"    -fx-background-insets: 0 0 5 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"    -fx-background-insets: 0 0 5 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #A9B388;","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"    -fx-border-color: #6E8B74;","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":".efficiency_small_label {","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"KiatLun"},"content":".status_small_label {","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"KiatLun"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"KiatLun"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"KiatLun"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"     -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"     -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 30%);","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":171,"author":{"gitId":"yiwern5"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":181,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 30%);","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 30%);","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":202,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 30%);","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 50%);","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"yiwern5"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":220,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: #B99470;","lastModifiedDate":"2024-03-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"yiwern5"},"content":".menu {","lastModifiedDate":"2024-03-17"},{"lineNumber":225,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-03-17"},{"lineNumber":226,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":227,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-03-17"},{"lineNumber":230,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":231,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":232,"author":{"gitId":"yiwern5"},"content":".menu:hover {","lastModifiedDate":"2024-03-17"},{"lineNumber":233,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":234,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":235,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":236,"author":{"gitId":"yiwern5"},"content":".menu:hover .label {","lastModifiedDate":"2024-03-17"},{"lineNumber":237,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":238,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":239,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":240,"author":{"gitId":"yiwern5"},"content":".menu:selected {","lastModifiedDate":"2024-03-17"},{"lineNumber":241,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":242,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":243,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"yiwern5"},"content":".menu:focused {","lastModifiedDate":"2024-03-17"},{"lineNumber":245,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":246,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":247,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":248,"author":{"gitId":"yiwern5"},"content":".menu-item {","lastModifiedDate":"2024-03-17"},{"lineNumber":249,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derived(#FBF9F1, 30%);","lastModifiedDate":"2024-03-17"},{"lineNumber":250,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":251,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":252,"author":{"gitId":"yiwern5"},"content":".menu-item:hover {","lastModifiedDate":"2024-03-17"},{"lineNumber":253,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":254,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":255,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":256,"author":{"gitId":"yiwern5"},"content":".menu-item:hover .label {","lastModifiedDate":"2024-03-17"},{"lineNumber":257,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"yiwern5"},"content":"    -fx-border-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color:#BBAB8C;","lastModifiedDate":"2024-03-17"},{"lineNumber":302,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-03-17"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #FBF9F1;","lastModifiedDate":"2024-03-17"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 25%);","lastModifiedDate":"2024-03-17"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"yiwern5"},"content":"    -fx-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":331,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-03-17"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #F2E6CE;","lastModifiedDate":"2024-03-17"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"yiwern5"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2024-03-17"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"yiwern5"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":373,"author":{"gitId":"yiwern5"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-17"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":375,"author":{"gitId":"yiwern5"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-03-17"},{"lineNumber":376,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"yiwern5"},"content":"#listTitle {","lastModifiedDate":"2024-03-17"},{"lineNumber":384,"author":{"gitId":"yiwern5"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-17"},{"lineNumber":385,"author":{"gitId":"yiwern5"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2024-03-17"},{"lineNumber":386,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: #B99470;","lastModifiedDate":"2024-03-17"},{"lineNumber":387,"author":{"gitId":"yiwern5"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2024-03-17"},{"lineNumber":388,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":389,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":390,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":391,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: transparent, #F2E6CE, transparent, #F2E6CE;","lastModifiedDate":"2024-03-17"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":393,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":395,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":400,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":402,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #6E8B74;","lastModifiedDate":"2024-03-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":407,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"yiwern5":110,"KiatLun":6,"-":291}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    -fx-background: transparent;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yiwern5":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BBAB8C;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: #BB9E83;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    -fx-background-color: derive(#FBF9F1, 20%);","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yiwern5":4,"-":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"750\" onCloseRequest\u003d\"#handleExit\" title\u003d\"EffiTrack\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    \u003cImage url\u003d\"@/images/ET_logo.png\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"          \u003cVBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"command-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minWidth\u003d\"280\" prefWidth\u003d\"280\" styleClass\u003d\"command-pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"                        \u003cLabel text\u003d\"\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"KiatLun"},"content":"            \u003cStackPane fx:id\u003d\"tasksList\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"280\" prefHeight\u003d\"320\" styleClass\u003d\"command-pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"KiatLun"},"content":"                \u003cLabel fx:id\u003d\"listTitle\" text\u003d\"Tasks: \" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"              \u003c/children\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"          \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"440\" prefWidth\u003d\"440\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"              \u003cInsets bottom\u003d\"0\" left\u003d\"0\" right\u003d\"5\" top\u003d\"0\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yiwern5":29,"KiatLun":3,"-":40}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"        \u003cLabel fx:id\u003d\"task\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$task\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"          \u003cLabel fx:id\u003d\"commentLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Comment: \"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"          \u003cLabel fx:id\u003d\"comment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$comment\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"      \u003cHBox \u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        \u003cHBox alignment\u003d\"BOTTOM_RIGHT\" HBox.hgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"            \u003cLabel fx:id\u003d\"efficiencyLabel\" styleClass\u003d\"efficiency_small_label\" text\u003d\"Efficiency: \" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"            \u003cLabel fx:id\u003d\"efficiency\" styleClass\u003d\"efficiency_small_label\" text\u003d\"\\$efficiency \" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yiwern5":20,"ziyi22":3,"howen02":2,"wolffe88":5,"-":22}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yiwern5":3,"-":5}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"      style\u003d\"-fx-background-color: lightblue;\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"KiatLun"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"KiatLun"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"KiatLun"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"KiatLun"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"KiatLun"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"KiatLun"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"KiatLun"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"KiatLun"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"KiatLun"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"KiatLun"},"content":"                \u003cLabel fx:id\u003d\"taskName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"KiatLun"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"KiatLun"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"KiatLun"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"KiatLun"},"content":"                \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"KiatLun"},"content":"                \u003cLabel fx:id\u003d\"inCharge\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$inCharge\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"KiatLun"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"KiatLun"},"content":"            \u003cHBox alignment\u003d\"TOP_RIGHT\" HBox.hgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"KiatLun"},"content":"                \u003cLabel fx:id\u003d\"statusLabel\" styleClass\u003d\"status_small_label\" text\u003d\"Status: \" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"KiatLun"},"content":"                \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"status_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"KiatLun"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"KiatLun"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"KiatLun"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"KiatLun"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"KiatLun"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"KiatLun"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"KiatLun"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":40}},{"path":"src/main/resources/view/TasksDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"command-pane\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"    \u003cListView fx:id\u003d\"taskListView\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"KiatLun":9,"yiwern5":1}},{"path":"src/test/java/seedu/address/commons/util/InvalidationListenerManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public class InvalidationListenerManagerTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final SimpleObjectProperty\u003cObject\u003e dummyObservable \u003d new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private final InvalidationListenerManager invalidationListenerManager \u003d new InvalidationListenerManager();","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private int counter;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public void addListener_sameListenerOnce_listenerAdded() {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(observable -\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"            assertEquals(dummyObservable, observable);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"            counter++;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        });","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, counter);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    public void addListener_sameListenerTwice_listenerAddedTwice() {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        InvalidationListener listener \u003d observable -\u003e counter++;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        assertEquals(2, counter);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    public void addListener_listenersBeingCalled_listenerNotCalled() {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        InvalidationListener listener1 \u003d observable -\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"        };","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        InvalidationListener listener2 \u003d observable -\u003e invalidationListenerManager.addListener(listener1);","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(listener2);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    public void removeListener_singleListenerAdded_listenerRemoved() {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        InvalidationListener listener \u003d observable -\u003e counter++;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.removeListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        assertEquals(0, counter);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    public void removeListener_sameListenerAddedTwice_firstListenerRemoved() {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"        InvalidationListener listener \u003d observable -\u003e counter++;","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.removeListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, counter);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"    public void removeListener_listenersBeingCalled_listenerStillCalled() {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"        InvalidationListener listener1 \u003d observable -\u003e counter++;","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        InvalidationListener listener2 \u003d observable -\u003e invalidationListenerManager.removeListener(listener1);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(listener2);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.addListener(listener1);","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, counter);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":72}},{"path":"src/test/java/seedu/address/logic/CommandHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"public class CommandHistoryTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory history;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"        history \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    public void constructor_withCommandHistory_copiesCommandHistory() {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        final CommandHistory commandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        commandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        assertEquals(commandHistoryWithA, new CommandHistory(commandHistoryWithA));","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    public void add() {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        final String validCommand \u003d \"clear\";","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        final String invalidCommand \u003d \"adds Bob\";","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        history.add(validCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        history.add(invalidCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        assertEquals(Arrays.asList(validCommand, invalidCommand), history.getHistory());","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        final CommandHistory commandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        commandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        final CommandHistory anotherCommandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        anotherCommandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        final CommandHistory commandHistoryWithB \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        commandHistoryWithB.add(\"b\");","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        assertTrue(commandHistoryWithA.equals(commandHistoryWithA));","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"        assertTrue(commandHistoryWithA.equals(anotherCommandHistoryWithA));","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"        assertFalse(commandHistoryWithA.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        assertFalse(commandHistoryWithA.equals(5.0f));","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"        assertFalse(commandHistoryWithA.equals(commandHistoryWithB));","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    public void hashcode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        final CommandHistory commandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        commandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"        final CommandHistory anotherCommandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        anotherCommandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"        final CommandHistory commandHistoryWithB \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"        commandHistoryWithB.add(\"b\");","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"        assertEquals(commandHistoryWithA.hashCode(), anotherCommandHistoryWithA.hashCode());","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"        // different values -\u003e returns different hashcode","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"        assertNotEquals(commandHistoryWithA.hashCode(), commandHistoryWithB.hashCode());","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":79}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEPARTMENT_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EFFICIENCY_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.commands.HistoryCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        assertHistoryCorrect(invalidCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        assertHistoryCorrect(deleteCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"        assertHistoryCorrect(listCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"yiwern5"},"content":"     * Asserts that the result display shows all the {@code expectedCommands} upon the execution of","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"yiwern5"},"content":"     * {@code HistoryCommand}.","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"    private void assertHistoryCorrect(String... expectedCommands) {","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"            CommandResult result \u003d logic.execute(HistoryCommand.COMMAND_WORD);","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"            String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"                    HistoryCommand.MESSAGE_SUCCESS, String.join(\"\\n\", expectedCommands));","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"            assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"Parsing and execution of HistoryCommand.COMMAND_WORD should succeed.\", e);","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":190,"author":{"gitId":"howen02"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + DEPARTMENT_DESC_AMY + EFFICIENCY_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":194,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":196,"author":{"gitId":"yiwern5"},"content":"        assertHistoryCorrect(addCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yiwern5":21,"howen02":3,"-":174}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model, commandHistory,","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(new AddCommand(personInList), model, commandHistory,","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ziyi22":1,"yiwern5":5,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    private static final CommandHistory EMPTY_COMMAND_HISTORY \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub, commandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"                addCommand.execute(modelStub, commandHistory));","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"KiatLun"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"KiatLun"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"KiatLun"},"content":"            return null;","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"ziyi22"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"ziyi22"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"ziyi22"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"ziyi22"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"ziyi22"},"content":"        public void addTask(Task t) {","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"ziyi22"},"content":"            throw new ArithmeticException(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"yiwern5"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"ziyi22"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"ziyi22"},"content":"        public void assignTask(Task task, Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"ziyi22"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"KiatLun"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"KiatLun"},"content":"        public void reassignTask(Task task, Person assignedFrom, Person assignedTo) {","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"KiatLun"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"KiatLun"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"KiatLun"},"content":"        public void markTask(Task task) {","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"KiatLun"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"KiatLun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"ziyi22"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"ziyi22"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"yiwern5"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"yiwern5"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"yiwern5"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"yiwern5"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"yiwern5"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"yiwern5"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"yiwern5"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"yiwern5"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"yiwern5"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"yiwern5"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":270,"author":{"gitId":"yiwern5"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2024-03-27"},{"lineNumber":271,"author":{"gitId":"yiwern5"},"content":"            // called by {@code AddCommand#execute()}","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":273,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yiwern5":42,"ziyi22":21,"KiatLun":15,"-":202}},{"path":"src/test/java/seedu/address/logic/commands/AssignTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"public class AssignTaskCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AssignTaskCommand(null, null));","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":12}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new ClearCommand(), model, commandHistory, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new ClearCommand(), model, commandHistory, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ziyi22":1,"yiwern5":7,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EFFICIENCY;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    public static final String VALID_DEPARTMENT_AMY \u003d \"Business\";","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"    public static final String VALID_DEPARTMENT_BOB \u003d \"IT\";","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"    public static final String VALID_EFFICIENCY_AMY \u003d \"50\";","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"    public static final String VALID_EFFICIENCY_BOB \u003d \"80\";","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    public static final String DEPARTMENT_DESC_AMY \u003d \" \" + PREFIX_DEPARTMENT + VALID_DEPARTMENT_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"    public static final String DEPARTMENT_DESC_BOB \u003d \" \" + PREFIX_DEPARTMENT + VALID_DEPARTMENT_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"howen02"},"content":"    public static final String EFFICIENCY_DESC_AMY \u003d \" \" + PREFIX_EFFICIENCY + VALID_EFFICIENCY_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"howen02"},"content":"    public static final String EFFICIENCY_DESC_BOB \u003d \" \" + PREFIX_EFFICIENCY + VALID_EFFICIENCY_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"    public static final String INVALID_DEPARTMENT_DESC \u003d \" \" + PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"    // empty string not allowed for department","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"howen02"},"content":"    public static final String INVALID_EFFICIENCY_DESC \u003d \" \" + PREFIX_TAG + \"-1\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"howen02"},"content":"                .withDepartment(VALID_DEPARTMENT_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"howen02"},"content":"                .withEfficiency(VALID_EFFICIENCY_AMY).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"howen02"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withEfficiency(VALID_EFFICIENCY_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandHistory actualCommandHistory,","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"                                            CommandResult expectedCommandResult, Model expectedModel) {","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"        CommandHistory expectedCommandHistory \u003d new CommandHistory(actualCommandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"            CommandResult result \u003d command.execute(actualModel, actualCommandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"            assertEquals(expectedCommandHistory, actualCommandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandHistory, CommandResult, Model)}","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandHistory actualCommandHistory,","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"                                            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(command, actualModel, actualCommandHistory, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, CommandHistory actualCommandHistory,","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"                                            String expectedMessage) {","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"        CommandHistory expectedCommandHistory \u003d new CommandHistory(actualCommandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel, actualCommandHistory));","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"        assertEquals(expectedCommandHistory, actualCommandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"     * Deletes the first person in {@code model}\u0027s filtered list from {@code model}\u0027s address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"    public static void deleteFirstPerson(Model model) {","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"        model.deletePerson(firstPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yiwern5":29,"howen02":14,"-":117}},{"path":"src/test/java/seedu/address/logic/commands/CommentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.commands.CommentCommand.MESSAGE_ADD_COMMENT_SUCCESS;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"class CommentCommandTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    private static final String COMMENT_STUB \u003d \"Some comment\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"    void execute_addCommentUnfilteredList_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withComment(COMMENT_STUB).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"                new Comment(editedPerson.getComment().comment));","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ADD_COMMENT_SUCCESS, editedPerson.getName());","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"        assertCommandSuccess(commentCommand, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"        // Choose an index outside the bounds of the list","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"        int invalidIndex \u003d 100;","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"        Index index \u003d Index.fromZeroBased(invalidIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"        // Create a comment","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"        Comment comment \u003d new Comment(\"Test comment\");","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"        // Execute the command and assert that it throws CommandException","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(index, comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"        assertThrows(CommandException.class, () -\u003e commentCommand.execute(model, commandHistory));","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"wolffe88":61}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(deleteCommand, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(deleteCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(deleteCommand, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(deleteCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"        // delete -\u003e first person deleted","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"        deleteCommand.execute(model, commandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"yiwern5"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"        // redo -\u003e same first person deleted again","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"        // execution failed -\u003e address book state not added into model","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(deleteCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"        // single address book state in model -\u003e undoCommand and redoCommand fail","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"     * 1. Deletes a {@code Person} from a filtered list.","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"     * 2. Undo the deletion.","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"     * 3. The unfiltered list should be shown now. Verify that the index of the previously deleted person in the","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"     * unfiltered list is different from the index at the filtered list.","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"     * 4. Redo the deletion. This ensures {@code RedoCommand} deletes the person object regardless of indexing.","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"    public void executeUndoRedo_validIndexFilteredList_samePersonDeleted() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"yiwern5"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"yiwern5"},"content":"        // delete -\u003e deletes second person in unfiltered person list / first person in filtered person list","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"        deleteCommand.execute(model, commandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"yiwern5"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":"        assertNotEquals(personToDelete, model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"        // redo -\u003e deletes same second person in unfiltered person list","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yiwern5":72,"ziyi22":1,"-":115}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(editCommand, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(editCommand, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(editCommand, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(editCommand, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(editCommand, model, commandHistory, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(editCommand, model, commandHistory, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(editCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(editCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"yiwern5"},"content":"        // edit -\u003e first person edited","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"yiwern5"},"content":"        editCommand.execute(model, commandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"yiwern5"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"yiwern5"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"yiwern5"},"content":"        // redo -\u003e same first person edited again","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"yiwern5"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"yiwern5"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"yiwern5"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"yiwern5"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"yiwern5"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"yiwern5"},"content":"        // execution failed -\u003e address book state not added into model","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(editCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"yiwern5"},"content":"        // single address book state in model -\u003e undoCommand and redoCommand fail","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"yiwern5"},"content":"     * 1. Edits a {@code Person} from a filtered list.","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"yiwern5"},"content":"     * 2. Undo the edit.","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"yiwern5"},"content":"     * 3. The unfiltered list should be shown now. Verify that the index of the previously edited person in the","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"yiwern5"},"content":"     * unfiltered list is different from the index at the filtered list.","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"yiwern5"},"content":"     * 4. Redo the edit. This ensures {@code RedoCommand} edits the person object regardless of indexing.","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"yiwern5"},"content":"    public void executeUndoRedo_validIndexFilteredList_samePersonEdited() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"yiwern5"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"yiwern5"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"yiwern5"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"yiwern5"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"yiwern5"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"yiwern5"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"yiwern5"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"yiwern5"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"yiwern5"},"content":"        // edit -\u003e edits second person in unfiltered person list / first person in filtered person list","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"yiwern5"},"content":"        editCommand.execute(model, commandHistory);","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"yiwern5"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"yiwern5"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"yiwern5"},"content":"        assertNotEquals(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), personToEdit);","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"yiwern5"},"content":"        // redo -\u003e edits same second person in unfiltered person list","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"yiwern5"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"yiwern5":83,"ziyi22":1,"-":175}},{"path":"src/test/java/seedu/address/logic/commands/EditDeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"class EditDeadlineCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    public void execute_validInput_success() throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        Deadline newDeadline \u003d new Deadline(\"31-12-2024 2359\");","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        EditDeadlineCommand editDeadlineCommand \u003d new EditDeadlineCommand(INDEX_FIRST_PERSON, newDeadline);","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        String expectedMessage \u003d String.format(EditDeadlineCommand.MESSAGE_MARK_TASK_SUCCESS,","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"                Messages.printName(person), newDeadline.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"        Task task \u003d new Task(\"Complete Project Proposal\", newDeadline);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"        expectedModel.setTask(model.getFilteredPersonList().get(0).getTask(), task);","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"        assertCommandSuccess(editDeadlineCommand, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wolffe88":43}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"                + editPersonDescriptor.getDepartment().orElse(null) + \", department\u003d\"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yiwern5":1,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new ExitCommand(), model, commandHistory, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yiwern5":3,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"class FilterCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\"Marketing Production\");","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"    private PersonContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"        return new PersonContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ziyi22":1,"yiwern5":4,"wolffe88":48}},{"path":"src/test/java/seedu/address/logic/commands/FilterEfficiencyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.PersonLessThanEfficiencyPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterEfficiencyCommand}.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"public class FilterEfficiencyCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    public void execute_validPredicate_personsFound() {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate predicate \u003d preparePredicate(\"20\");","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"        FilterEfficiencyCommand command \u003d new FilterEfficiencyCommand(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"        assertEquals(Arrays.asList(FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate predicate \u003d new PersonLessThanEfficiencyPredicate(Integer.parseInt(\"20\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"        FilterEfficiencyCommand filterEfficiencyCommand \u003d new FilterEfficiencyCommand(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"        String expected \u003d FilterEfficiencyCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"        assertEquals(expected, filterEfficiencyCommand.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"     * Parses {@code userInput} into a {@code PersonLessThanEfficiencyPredicate}.","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"    private PersonLessThanEfficiencyPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"        int threshold \u003d Integer.parseInt(userInput);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"        return new PersonLessThanEfficiencyPredicate(threshold);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ziyi22":51,"yiwern5":3}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ziyi22":1,"yiwern5":4,"-":88}},{"path":"src/test/java/seedu/address/logic/commands/FindFreePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.PersonHasNoTaskPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":" * Contains integration tests (interaction with the Model) and unit tests for FindFreePersonCommand.","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"public class FindFreePersonCommandTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"    public void execute_multiplePersonsFoundWithNoTasks_multiplePersonFound() {","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"        FindFreePersonCommand command \u003d new FindFreePersonCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"        expectedModel.updateFilteredPersonList(new PersonHasNoTaskPredicate());","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"        assertEquals(expectedModel.getFilteredPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"        FindFreePersonCommand findFirstCommand \u003d new FindFreePersonCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"        FindFreePersonCommand findSecondCommand \u003d new FindFreePersonCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"howen02"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"howen02"},"content":"        // same type -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"howen02"},"content":"        assertTrue(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"howen02":52}},{"path":"src/test/java/seedu/address/logic/commands/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.TaskContainsKeywordsPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}.","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"public class FindTaskCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"        TaskContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"                new TaskContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"        TaskContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"                new TaskContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"        FindTaskCommand findTaskFirstCommand \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"        FindTaskCommand findTaskSecondCommand \u003d new FindTaskCommand(secondPredicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"howen02"},"content":"        assertTrue(findTaskFirstCommand.equals(findTaskFirstCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"        FindTaskCommand findTaskFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"        assertTrue(findTaskFirstCommand.equals(findTaskFirstCommandCopy));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"        assertFalse(findTaskFirstCommand.equals(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"howen02"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"howen02"},"content":"        assertFalse(findTaskFirstCommand.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"howen02"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"howen02"},"content":"        assertFalse(findTaskFirstCommand.equals(findTaskSecondCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"howen02"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"howen02"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"howen02"},"content":"        TaskContainsKeywordsPredicate predicate \u003d preparePredicate();","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"howen02"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"howen02"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"howen02"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"howen02"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"howen02"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"howen02"},"content":"        TaskContainsKeywordsPredicate predicate \u003d new TaskContainsKeywordsPredicate(List.of(\"keyword\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"howen02"},"content":"        FindTaskCommand findTaskCommand \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"howen02"},"content":"        String expected \u003d FindTaskCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"howen02"},"content":"        assertEquals(expected, findTaskCommand.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"howen02"},"content":"     * Parses {@code userInput} into a {@code TaskContainsKeywordsPredicate}.","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"howen02"},"content":"    private TaskContainsKeywordsPredicate preparePredicate() {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"howen02"},"content":"        return new TaskContainsKeywordsPredicate(Collections.singletonList(\" \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"howen02":80}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new HelpCommand(), model, commandHistory, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yiwern5":3,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/HistoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class HistoryCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory history \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    public void execute() {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new HistoryCommand(), model, history, HistoryCommand.MESSAGE_NO_HISTORY, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        String command1 \u003d \"clear\";","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        history.add(command1);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new HistoryCommand(), model, history,","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"                String.format(HistoryCommand.MESSAGE_SUCCESS, command1), expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        String command2 \u003d \"randomCommand\";","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        String command3 \u003d \"select 1\";","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        history.add(command2);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        history.add(command3);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        String expectedMessage \u003d String.format(HistoryCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"                String.join(\"\\n\", command3, command2, command1));","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new HistoryCommand(), model, history, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":35}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new ListCommand(), model, commandHistory, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new ListCommand(), model, commandHistory, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ziyi22":1,"yiwern5":4,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/MarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MarkTaskCommand(null, null));","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KiatLun":13}},{"path":"src/test/java/seedu/address/logic/commands/ReassignTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KiatLun"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"KiatLun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"KiatLun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"KiatLun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"KiatLun"},"content":"public class ReassignTaskCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"KiatLun"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"KiatLun"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"KiatLun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ReassignTaskCommand(null, null));","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"KiatLun"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"KiatLun"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"KiatLun":12}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstPerson;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"public class RedoCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    private final CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        // set up of both models\u0027 undo/redo history","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        model.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        model.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    public void execute() {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"        // multiple redoable states in model","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        // single redoable state in model","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        // no redoable state in model","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":49}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstPerson;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"public class UndoCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    private final CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        // set up of models\u0027 undo/redo history","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    public void execute() {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        // multiple undoable states in model","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"        // single undoable state in model","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        assertCommandSuccess(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        // no undoable states in model","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        assertCommandFailure(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":45}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEPARTMENT_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEPARTMENT_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EFFICIENCY_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EFFICIENCY_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEPARTMENT_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEPARTMENT_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EFFICIENCY;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"howen02"},"content":"                + ADDRESS_DESC_BOB + DEPARTMENT_DESC_BOB + TAG_DESC_FRIEND + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"howen02"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + DEPARTMENT_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"howen02"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"howen02"},"content":"                + ADDRESS_DESC_BOB + DEPARTMENT_DESC_BOB + TAG_DESC_FRIEND + EFFICIENCY_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"                        + DEPARTMENT_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"howen02"},"content":"                        PREFIX_PHONE, PREFIX_DEPARTMENT, PREFIX_EFFICIENCY));","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"        // invalid department","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, INVALID_DEPARTMENT_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DEPARTMENT));","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2024-03-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2024-03-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-03-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2024-03-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"        // invalid department","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_DEPARTMENT_DESC,","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DEPARTMENT));","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"howen02"},"content":"                        + DEPARTMENT_DESC_AMY + EFFICIENCY_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"howen02"},"content":"                        + DEPARTMENT_DESC_BOB + EFFICIENCY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"howen02"},"content":"                + DEPARTMENT_DESC_BOB + EFFICIENCY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"howen02"},"content":"                + DEPARTMENT_DESC_BOB + EFFICIENCY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"howen02"},"content":"                + DEPARTMENT_DESC_BOB + EFFICIENCY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"yiwern5"},"content":"        // missing department prefix","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"howen02"},"content":"                + VALID_DEPARTMENT_BOB + EFFICIENCY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"howen02"},"content":"                + VALID_DEPARTMENT_BOB + EFFICIENCY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"howen02"},"content":"                + DEPARTMENT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"howen02"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"howen02"},"content":"                + DEPARTMENT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"howen02"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":203,"author":{"gitId":"howen02"},"content":"                + DEPARTMENT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"howen02"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":208,"author":{"gitId":"howen02"},"content":"                + DEPARTMENT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"howen02"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"yiwern5"},"content":"        // invalid department","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"howen02"},"content":"                + INVALID_DEPARTMENT_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"howen02"},"content":"                Department.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":218,"author":{"gitId":"howen02"},"content":"                + DEPARTMENT_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"howen02"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"howen02"},"content":"                        + DEPARTMENT_DESC_BOB + INVALID_ADDRESS_DESC + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":228,"author":{"gitId":"howen02"},"content":"                + ADDRESS_DESC_BOB + DEPARTMENT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + EFFICIENCY_DESC_BOB,","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yiwern5":25,"howen02":34,"-":172}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.commands.AssignTaskCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.EditDeadlineCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.commands.FilterEfficiencyCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.commands.FindFreePersonCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.commands.HistoryCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.PersonLessThanEfficiencyPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.TaskContainsKeywordsPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"import seedu.address.testutil.TaskUtil;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"    public void parseCommand_assignTask() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"        Task task \u003d new TaskBuilder().buildTester();","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"        AssignTaskCommand command \u003d (AssignTaskCommand) parser.parseCommand(","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"                TaskUtil.getAssignTaskCommand(task, INDEX_FIRST_PERSON.getOneBased()));","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"        assertEquals(new AssignTaskCommand(task, INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"howen02"},"content":"    public void parseCommand_findTask() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"howen02"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\");","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"howen02"},"content":"        FindTaskCommand command \u003d (FindTaskCommand) parser.parseCommand(","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"howen02"},"content":"                FindTaskCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"howen02"},"content":"                        .joining(\" \")));","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"howen02"},"content":"        assertEquals(new FindTaskCommand(new TaskContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"wolffe88"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"wolffe88"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"wolffe88"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"wolffe88"},"content":"                FilterCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"wolffe88"},"content":"        assertEquals(new FilterCommand(new PersonContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"ziyi22"},"content":"    public void parseCommand_filter_efficiency() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"ziyi22"},"content":"        int threshold \u003d 20;","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"ziyi22"},"content":"        FilterEfficiencyCommand command \u003d (FilterEfficiencyCommand) parser.parseCommand(","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"ziyi22"},"content":"                FilterEfficiencyCommand.COMMAND_WORD + \" \" + threshold);","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"ziyi22"},"content":"        assertEquals(new FilterEfficiencyCommand(new PersonLessThanEfficiencyPredicate(threshold)), command);","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"yiwern5"},"content":"    public void parseCommand_history() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD) instanceof HistoryCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD + \" 3\") instanceof HistoryCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"            parser.parseCommand(\"histories\");","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"            assertEquals(MESSAGE_UNKNOWN_COMMAND, pe.getMessage());","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"    public void parseCommand_redoCommand() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"        assertTrue(parser.parseCommand(\"redo 1\") instanceof RedoCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"    public void parseCommand_undoCommand() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"yiwern5"},"content":"        assertTrue(parser.parseCommand(\"undo 3\") instanceof UndoCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"wolffe88"},"content":"    public void parseCommand_editDeadline() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"wolffe88"},"content":"        EditDeadlineCommand command \u003d (EditDeadlineCommand) parser.parseCommand(EditDeadlineCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"wolffe88"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + \"by/31-10-2024 2359\");","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"wolffe88"},"content":"        assertEquals(new EditDeadlineCommand(INDEX_FIRST_PERSON, new Deadline(\"31-10-2024 2359\")), command);","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"wolffe88"},"content":"    public void parseCommand_comment() throws Exception {","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"wolffe88"},"content":"        CommentCommand command \u003d (CommentCommand) parser.parseCommand(CommentCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"wolffe88"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + \"c/good communication\");","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"wolffe88"},"content":"        assertEquals(new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"good communication\")), command);","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"howen02"},"content":"    public void parseCommand_findFreePerson() throws Exception {","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"howen02"},"content":"        assertTrue(parser.parseCommand(FindFreePersonCommand.COMMAND_WORD) instanceof FindFreePersonCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"howen02"},"content":"        assertTrue(parser.parseCommand(FindFreePersonCommand.COMMAND_WORD + \" 3\") instanceof FindFreePersonCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":197,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":198,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ziyi22":22,"yiwern5":28,"howen02":18,"wolffe88":28,"-":103}},{"path":"src/test/java/seedu/address/logic/parser/CommentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"public class CommentCommandParserTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    private final CommentCommandParser parser \u003d new CommentCommandParser();","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    public void parse_validArgs_returnsCommentCommand() throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"        String args \u003d \"1 \" + CliSyntax.PREFIX_COMMENT + \"This is a test comment\";","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"        CommentCommand expectedCommand \u003d new CommentCommand(Index.fromOneBased(1),","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"                new Comment(\"This is a test comment\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    public void parse_emptyComment_returnsCommentCommandWithEmptyComment() throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        String args \u003d \"1 \" + CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        CommentCommand expectedCommand \u003d new CommentCommand(Index.fromOneBased(1), new Comment(\"\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"wolffe88":30}},{"path":"src/test/java/seedu/address/logic/parser/EditDeadlineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.EditDeadlineCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"public class EditDeadlineCommandParserTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditDeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"    private EditDeadlineCommandParser parser \u003d new EditDeadlineCommandParser();","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"    private Deadline deadline \u003d new Deadline(\"31-10-2024 1600\");","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        // no index specified","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        assertParseFailure(parser, PREFIX_DEADLINE + \"31-10-2024 1600\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"        // no field specified","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        // no index and no field specified","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"        // negative index","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"        assertParseFailure(parser, \"-5 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"                + PREFIX_DEADLINE + \"31-10-2024 1600\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"        // zero index","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        assertParseFailure(parser, \"0 \" + PREFIX_DEADLINE","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"                + \"31-10-2024 1600\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_DEADLINE + \"31-10-2024 1600\";","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"        EditDeadlineCommand expectedCommand \u003d new EditDeadlineCommand(targetIndex, deadline);","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wolffe88":63}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wolffe88":20}},{"path":"src/test/java/seedu/address/logic/parser/FilterEfficiencyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.commands.FilterEfficiencyCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.PersonLessThanEfficiencyPredicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"public class FilterEfficiencyCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    private FilterEfficiencyCommandParser parser \u003d new FilterEfficiencyCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterEfficiencyCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public void parse_nonIntegerArgs_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"        assertParseFailure(parser, \"abc\", \"The input efficiency should be an integer.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    public void parse_outOfRangeArgs_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"        assertParseFailure(parser, \"150\", Efficiency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"    public void parse_validArgs_returnsFilterEfficiencyCommand() {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"        FilterEfficiencyCommand expectedCommand \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"                new FilterEfficiencyCommand(new PersonLessThanEfficiencyPredicate(20));","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        assertParseSuccess(parser, \"20\", expectedCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"        // multiple whitespaces between argument","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"        assertParseSuccess(parser, \" \\n 20 \\n\", expectedCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ziyi22":43}},{"path":"src/test/java/seedu/address/logic/parser/FindTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.TaskContainsKeywordsPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"public class FindTaskCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"    private FindTaskCommandParser parser \u003d new FindTaskCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"                FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"        FindTaskCommand expectedFindCommand \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"                new FindTaskCommand(new TaskContainsKeywordsPredicate(Arrays.asList(\"fizz\", \"buzz\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"        assertParseSuccess(parser, \"fizz buzz\", expectedFindCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"        assertParseSuccess(parser, \" \\n fizz \\n \\t buzz  \\t\", expectedFindCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"howen02":33}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_ALICE;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"import javafx.beans.property.SimpleIntegerProperty;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList();","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newTasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTask(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"        assertFalse(addressBook.hasTask(TASK_ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"        addressBook.addTask(TASK_ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"        assertTrue(addressBook.hasTask(TASK_ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"    public void addListener_withInvalidationListener_listenerAdded() {","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"        SimpleIntegerProperty counter \u003d new SimpleIntegerProperty();","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"        InvalidationListener listener \u003d observable -\u003e counter.set(counter.get() + 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"        addressBook.addListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, counter.get());","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"yiwern5"},"content":"    public void removeListener_withInvalidationListener_listenerRemoved() {","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"        SimpleIntegerProperty counter \u003d new SimpleIntegerProperty();","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"yiwern5"},"content":"        InvalidationListener listener \u003d observable -\u003e counter.set(counter.get() + 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"yiwern5"},"content":"        addressBook.addListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"        addressBook.removeListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"        assertEquals(0, counter.get());","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"ziyi22"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList()","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"ziyi22"},"content":"                + \", tasks\u003d\" + addressBook.getTaskList() + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"ziyi22"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"ziyi22"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"ziyi22"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"ziyi22"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"ziyi22"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"ziyi22"},"content":"            return null;","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"        public void addListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"        @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"        public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ziyi22":31,"yiwern5":31,"-":104}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_ALICE;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ziyi22"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"ziyi22"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"ziyi22"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"ziyi22"},"content":"        assertFalse(modelManager.hasTask(TASK_ALICE));","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"ziyi22"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ziyi22"},"content":"        modelManager.addTask(TASK_ALICE);","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"ziyi22"},"content":"        assertTrue(modelManager.hasTask(TASK_ALICE));","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ziyi22":17,"-":132}},{"path":"src/test/java/seedu/address/model/VersionedAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"public class VersionedAddressBookTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    private final ReadOnlyAddressBook addressBookWithAmy \u003d new AddressBookBuilder().withPerson(AMY).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    private final ReadOnlyAddressBook addressBookWithBob \u003d new AddressBookBuilder().withPerson(BOB).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    private final ReadOnlyAddressBook addressBookWithCarl \u003d new AddressBookBuilder().withPerson(CARL).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    private final ReadOnlyAddressBook emptyAddressBook \u003d new AddressBookBuilder().build();","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    public void commit_singleAddressBook_noStatesRemovedCurrentStateSaved() {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"                Collections.singletonList(emptyAddressBook),","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"                Collections.emptyList());","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    public void commit_multipleAddressBookPointerAtEndOfStateList_noStatesRemovedCurrentStateSaved() {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"                Arrays.asList(emptyAddressBook, addressBookWithAmy, addressBookWithBob),","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"                addressBookWithBob,","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"                Collections.emptyList());","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"    public void commit_multipleAddressBookPointerNotAtEndOfStateList_statesAfterPointerRemovedCurrentStateSaved() {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"                Collections.singletonList(emptyAddressBook),","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"                Collections.emptyList());","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"    public void canUndo_multipleAddressBookPointerAtEndOfStateList_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        assertTrue(versionedAddressBook.canUndo());","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"    public void canUndo_multipleAddressBookPointerAtStartOfStateList_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"        assertTrue(versionedAddressBook.canUndo());","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"    public void canUndo_singleAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"        assertFalse(versionedAddressBook.canUndo());","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"    public void canUndo_multipleAddressBookPointerAtStartOfStateList_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"        assertFalse(versionedAddressBook.canUndo());","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"    public void canRedo_multipleAddressBookPointerNotAtEndOfStateList_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"yiwern5"},"content":"        assertTrue(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"    public void canRedo_multipleAddressBookPointerAtStartOfStateList_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"        assertTrue(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"    public void canRedo_singleAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"yiwern5"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"    public void canRedo_multipleAddressBookPointerAtEndOfStateList_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"    public void undo_multipleAddressBookPointerAtEndOfStateList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"yiwern5"},"content":"                Collections.singletonList(emptyAddressBook),","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"                addressBookWithAmy,","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"yiwern5"},"content":"                Collections.singletonList(addressBookWithBob));","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"    public void undo_multipleAddressBookPointerNotAtStartOfStateList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"                Collections.emptyList(),","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"yiwern5"},"content":"                Arrays.asList(addressBookWithAmy, addressBookWithBob));","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"    public void undo_singleAddressBook_throwsNoUndoableStateException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"        assertThrows(VersionedAddressBook.NoUndoableStateException.class, versionedAddressBook::undo);","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"    public void undo_multipleAddressBookPointerAtStartOfStateList_throwsNoUndoableStateException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"yiwern5"},"content":"        assertThrows(VersionedAddressBook.NoUndoableStateException.class, versionedAddressBook::undo);","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"yiwern5"},"content":"    public void redo_multipleAddressBookPointerNotAtEndOfStateList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"yiwern5"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"yiwern5"},"content":"                Arrays.asList(emptyAddressBook, addressBookWithAmy),","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"yiwern5"},"content":"                addressBookWithBob,","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"yiwern5"},"content":"                Collections.emptyList());","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"    public void redo_multipleAddressBookPointerAtStartOfStateList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"yiwern5"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"yiwern5"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"yiwern5"},"content":"                Collections.singletonList(emptyAddressBook),","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"yiwern5"},"content":"                addressBookWithAmy,","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"yiwern5"},"content":"                Collections.singletonList(addressBookWithBob));","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"yiwern5"},"content":"    public void redo_singleAddressBook_throwsNoRedoableStateException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"yiwern5"},"content":"        assertThrows(VersionedAddressBook.NoRedoableStateException.class, versionedAddressBook::redo);","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"yiwern5"},"content":"    public void redo_multipleAddressBookPointerAtEndOfStateList_throwsNoRedoableStateException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"yiwern5"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"yiwern5"},"content":"        assertThrows(VersionedAddressBook.NoRedoableStateException.class, versionedAddressBook::redo);","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"yiwern5"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"yiwern5"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook copy \u003d prepareAddressBookList(addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"yiwern5"},"content":"        assertTrue(versionedAddressBook.equals(copy));","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"yiwern5"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"yiwern5"},"content":"        assertTrue(versionedAddressBook.equals(versionedAddressBook));","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"yiwern5"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"        assertFalse(versionedAddressBook.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"yiwern5"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"yiwern5"},"content":"        assertFalse(versionedAddressBook.equals(1));","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"yiwern5"},"content":"        // different state list -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook differentAddressBookList \u003d prepareAddressBookList(addressBookWithBob, addressBookWithCarl);","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"yiwern5"},"content":"        assertFalse(versionedAddressBook.equals(differentAddressBookList));","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"yiwern5"},"content":"        // different current pointer index -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":232,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook differentCurrentStatePointer \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-27"},{"lineNumber":233,"author":{"gitId":"yiwern5"},"content":"                addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"yiwern5"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"yiwern5"},"content":"        assertFalse(versionedAddressBook.equals(differentCurrentStatePointer));","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":238,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"yiwern5"},"content":"     * Asserts that {@code versionedAddressBook} is currently pointing at {@code expectedCurrentState},","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"yiwern5"},"content":"     * states before {@code versionedAddressBook#currentStatePointer} is equal to {@code expectedStatesBeforePointer},","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"yiwern5"},"content":"     * and states after {@code versionedAddressBook#currentStatePointer} is equal to {@code expectedStatesAfterPointer}.","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"yiwern5"},"content":"    private void assertAddressBookListStatus(VersionedAddressBook versionedAddressBook,","lastModifiedDate":"2024-03-27"},{"lineNumber":244,"author":{"gitId":"yiwern5"},"content":"                                             List\u003cReadOnlyAddressBook\u003e expectedStatesBeforePointer,","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"yiwern5"},"content":"                                             ReadOnlyAddressBook expectedCurrentState,","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"yiwern5"},"content":"                                             List\u003cReadOnlyAddressBook\u003e expectedStatesAfterPointer) {","lastModifiedDate":"2024-03-27"},{"lineNumber":247,"author":{"gitId":"yiwern5"},"content":"        // check state currently pointing at is correct","lastModifiedDate":"2024-03-27"},{"lineNumber":248,"author":{"gitId":"yiwern5"},"content":"        assertEquals(new AddressBook(versionedAddressBook), expectedCurrentState);","lastModifiedDate":"2024-03-27"},{"lineNumber":249,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"yiwern5"},"content":"        // shift pointer to start of state list","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"yiwern5"},"content":"        while (versionedAddressBook.canUndo()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"yiwern5"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":255,"author":{"gitId":"yiwern5"},"content":"        // check states before pointer are correct","lastModifiedDate":"2024-03-27"},{"lineNumber":256,"author":{"gitId":"yiwern5"},"content":"        for (ReadOnlyAddressBook expectedAddressBook : expectedStatesBeforePointer) {","lastModifiedDate":"2024-03-27"},{"lineNumber":257,"author":{"gitId":"yiwern5"},"content":"            assertEquals(expectedAddressBook, new AddressBook(versionedAddressBook));","lastModifiedDate":"2024-03-27"},{"lineNumber":258,"author":{"gitId":"yiwern5"},"content":"            versionedAddressBook.redo();","lastModifiedDate":"2024-03-27"},{"lineNumber":259,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":260,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":261,"author":{"gitId":"yiwern5"},"content":"        // check states after pointer are correct","lastModifiedDate":"2024-03-27"},{"lineNumber":262,"author":{"gitId":"yiwern5"},"content":"        for (ReadOnlyAddressBook expectedAddressBook : expectedStatesAfterPointer) {","lastModifiedDate":"2024-03-27"},{"lineNumber":263,"author":{"gitId":"yiwern5"},"content":"            versionedAddressBook.redo();","lastModifiedDate":"2024-03-27"},{"lineNumber":264,"author":{"gitId":"yiwern5"},"content":"            assertEquals(expectedAddressBook, new AddressBook(versionedAddressBook));","lastModifiedDate":"2024-03-27"},{"lineNumber":265,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":266,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":267,"author":{"gitId":"yiwern5"},"content":"        // check that there are no more states after pointer","lastModifiedDate":"2024-03-27"},{"lineNumber":268,"author":{"gitId":"yiwern5"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":270,"author":{"gitId":"yiwern5"},"content":"        // revert pointer to original position","lastModifiedDate":"2024-03-27"},{"lineNumber":271,"author":{"gitId":"yiwern5"},"content":"        expectedStatesAfterPointer.forEach(unused -\u003e versionedAddressBook.undo());","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":273,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":274,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":275,"author":{"gitId":"yiwern5"},"content":"     * Creates and returns a {@code VersionedAddressBook} with the {@code addressBookStates} added into it, and the","lastModifiedDate":"2024-03-27"},{"lineNumber":276,"author":{"gitId":"yiwern5"},"content":"     * {@code VersionedAddressBook#currentStatePointer} at the end of list.","lastModifiedDate":"2024-03-27"},{"lineNumber":277,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"yiwern5"},"content":"    private VersionedAddressBook prepareAddressBookList(ReadOnlyAddressBook... addressBookStates) {","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"yiwern5"},"content":"        assertFalse(addressBookStates.length \u003d\u003d 0);","lastModifiedDate":"2024-03-27"},{"lineNumber":280,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":281,"author":{"gitId":"yiwern5"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(addressBookStates[0]);","lastModifiedDate":"2024-03-27"},{"lineNumber":282,"author":{"gitId":"yiwern5"},"content":"        for (int i \u003d 1; i \u003c addressBookStates.length; i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":283,"author":{"gitId":"yiwern5"},"content":"            versionedAddressBook.resetData(addressBookStates[i]);","lastModifiedDate":"2024-03-27"},{"lineNumber":284,"author":{"gitId":"yiwern5"},"content":"            versionedAddressBook.commit();","lastModifiedDate":"2024-03-27"},{"lineNumber":285,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":286,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":287,"author":{"gitId":"yiwern5"},"content":"        return versionedAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":288,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":289,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":290,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":291,"author":{"gitId":"yiwern5"},"content":"     * Shifts the {@code versionedAddressBook#currentStatePointer} by {@code count} to the left of its list.","lastModifiedDate":"2024-03-27"},{"lineNumber":292,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":293,"author":{"gitId":"yiwern5"},"content":"    private void shiftCurrentStatePointerLeftwards(VersionedAddressBook versionedAddressBook, int count) {","lastModifiedDate":"2024-03-27"},{"lineNumber":294,"author":{"gitId":"yiwern5"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":295,"author":{"gitId":"yiwern5"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2024-03-27"},{"lineNumber":296,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":297,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":298,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yiwern5":298}},{"path":"src/test/java/seedu/address/model/person/CommentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"public class CommentTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    public void isValidCommand() {","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"        // null name","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"        assertThrows(NullPointerException.class, () -\u003e Comment.isValidComment(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"        // invalid name","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"        assertFalse(Comment.isValidComment(\"\")); // empty string","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"        assertFalse(Comment.isValidComment(\" \")); // spaces only","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"        // valid comment","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        assertTrue(Name.isValidName(\"punctual\")); // alphabets only","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        assertTrue(Name.isValidName(\"took 2 days leave\")); // alphanumeric characters","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"        assertTrue(Name.isValidName(\"Good at Project Management\")); // with capital letters","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        assertTrue(Name.isValidName(\"Team leader for the building hygiene department\")); // long names","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        Comment comment \u003d new Comment(\"Valid Comment\");","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"        assertTrue(comment.equals(new Comment(\"Valid Comment\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        assertTrue(comment.equals(comment));","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"        assertFalse(comment.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        assertFalse(comment.equals(new Comment(\"Other Valid Comment\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"wolffe88":49}},{"path":"src/test/java/seedu/address/model/person/DepartmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class DepartmentTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Department(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    public void constructor_invalidDepartment_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"        String invalidDepartment \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Department(invalidDepartment));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public void isValidDepartment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        // null department","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        assertThrows(NullPointerException.class, () -\u003e Department.isValidDepartment(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        // invalid department","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        assertFalse(Department.isValidDepartment(\"\")); // empty string","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        assertFalse(Department.isValidDepartment(\" \")); // spaces only","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        // valid departments","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        assertTrue(Department.isValidDepartment(\"Business Development\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        assertTrue(Department.isValidDepartment(\"IT\")); // one character","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        assertTrue(Department.isValidDepartment(\"Facilities Maintenance and Sanitation\")); // long department name","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        Department department \u003d new Department(\"Valid Department\");","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        assertTrue(department.equals(new Department(\"Valid Department\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        assertTrue(department.equals(department));","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        assertFalse(department.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        assertFalse(department.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"        assertFalse(department.equals(new Address(\"Other Valid Department\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"yiwern5":56}},{"path":"src/test/java/seedu/address/model/person/EfficiencyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"public class EfficiencyTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Efficiency(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"    public void constructor_invalidEfficiency_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"        String invalidEfficiency \u003d \"101\"; // beyond valid range","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Efficiency(invalidEfficiency));","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"    public void isValidEfficiency() {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"        // null efficiency","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"        assertThrows(NullPointerException.class, () -\u003e Efficiency.isValidEfficiency(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"        // invalid efficiencies","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"        assertFalse(Efficiency.isValidEfficiency(\"-1\")); // below 0","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"        assertFalse(Efficiency.isValidEfficiency(\"101\")); // above 100","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"        assertFalse(Efficiency.isValidEfficiency(\"100.5\")); // non-integer","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"        assertFalse(Efficiency.isValidEfficiency(\"abc\")); // non-numeric","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"        // valid efficiencies","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"        assertTrue(Efficiency.isValidEfficiency(\"0\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"        assertTrue(Efficiency.isValidEfficiency(\"50\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"        assertTrue(Efficiency.isValidEfficiency(\"100\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"    public void increase() {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"        Efficiency efficiency \u003d new Efficiency(\"20\");","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"        // increase within bounds","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"        assertEquals(new Efficiency(\"25\"), efficiency.increase(5));","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"        // increase to boundary","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"        assertEquals(new Efficiency(\"100\"), efficiency.increase(80));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"howen02"},"content":"        // increase beyond boundary","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"howen02"},"content":"        assertEquals(new Efficiency(\"100\"), efficiency.increase(85));","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"howen02"},"content":"    public void decrease() {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"howen02"},"content":"        Efficiency efficiency \u003d new Efficiency(\"50\");","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"howen02"},"content":"        // decrease within bounds","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"howen02"},"content":"        assertEquals(new Efficiency(\"40\"), efficiency.decrease(5));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"howen02"},"content":"        // decrease to boundary","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"howen02"},"content":"        assertEquals(new Efficiency(\"0\"), efficiency.decrease(25));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"howen02"},"content":"        // decrease beyond boundary","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"howen02"},"content":"        assertEquals(new Efficiency(\"0\"), efficiency.decrease(30));","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"howen02"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"howen02"},"content":"        Efficiency efficiency \u003d new Efficiency(\"50\");","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"howen02"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"howen02"},"content":"        assertTrue(efficiency.equals(new Efficiency(\"50\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"howen02"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"howen02"},"content":"        assertTrue(efficiency.equals(efficiency));","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"howen02"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"howen02"},"content":"        assertFalse(efficiency.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"howen02"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"howen02"},"content":"        assertFalse(efficiency.equals(5.0f));","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"howen02"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"howen02"},"content":"        assertFalse(efficiency.equals(new Efficiency(\"51\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"howen02":87}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"        // Keywords without spacing","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"alicebob\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"        // Keywords with substrings","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"ice\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wolffe88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wolffe88":8,"-":85}},{"path":"src/test/java/seedu/address/model/person/PersonContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"class PersonContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d new PersonContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"                new PersonContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        PersonContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"                new PersonContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"        // One keyword","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"                new PersonContainsKeywordsPredicate(Collections.singletonList(\"Finance\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDepartment(\"Finance\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"        // Multiple keywords","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(\"Quantitative\", \"Finance\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDepartment(\"Quantitative Finance\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(\"Finance\", \"Marketing\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDepartment(\"Quantitative Finance\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(\"finAnce\", \"quaNtitative\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDepartment(\"Quantitative Finance\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"        // Keywords without spacing","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Collections.singletonList(\"quantitativefinance\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDepartment(\"Quantitative Finance\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"        // Keywords with substrings","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Collections.singletonList(\"nan\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDepartment(\"Quantitative Finance\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wolffe88"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"wolffe88"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDepartment(\"Finance\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"wolffe88"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"wolffe88"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Marketing\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"wolffe88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDepartment(\"Finance\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"wolffe88"},"content":"        // Keywords match phone, email and address, but does not match department","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"wolffe88"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"wolffe88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"wolffe88"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withDepartment(\"Finance\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"wolffe88"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"wolffe88"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"wolffe88"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"wolffe88"},"content":"        String expected \u003d PersonContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"wolffe88"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wolffe88":96}},{"path":"src/test/java/seedu/address/model/person/PersonHasNoTaskPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"howen02"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"howen02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"class PersonHasNoTaskPredicateTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"howen02"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"howen02"},"content":"        PersonHasNoTaskPredicate firstPredicate \u003d new PersonHasNoTaskPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"        PersonHasNoTaskPredicate secondPredicate \u003d new PersonHasNoTaskPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"howen02"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"howen02"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"howen02"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"        // same class -\u003e returns true, since there\u0027s no state to differ","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"howen02"},"content":"    public void test_personIsNotBusy_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"        // Person is not busy","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"howen02"},"content":"        PersonHasNoTaskPredicate predicate \u003d new PersonHasNoTaskPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"howen02"},"content":"        assertFalse(predicate.test(new PersonBuilder().build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"        PersonHasNoTaskPredicate predicate \u003d new PersonHasNoTaskPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"howen02"},"content":"        String expected \u003d \"PersonHasNoTaskPredicate\";","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"        assertTrue(predicate.toString().contains(expected));","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"howen02":44}},{"path":"src/test/java/seedu/address/model/person/PersonLessThanEfficiencyPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"public class PersonLessThanEfficiencyPredicateTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"        int firstPredicateThreshold \u003d 20;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"        int secondPredicateThreshold \u003d 50;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"                new PersonLessThanEfficiencyPredicate(firstPredicateThreshold);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"                new PersonLessThanEfficiencyPredicate(secondPredicateThreshold);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"                new PersonLessThanEfficiencyPredicate(firstPredicateThreshold);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"    public void test_personLessThanEfficiency_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"                new PersonLessThanEfficiencyPredicate(30);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEfficiency(\"20\").build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"    public void test_personEqualsToEfficiency_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"                new PersonLessThanEfficiencyPredicate(30);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEfficiency(\"30\").build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    public void test_personLargerEfficiency_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"                new PersonLessThanEfficiencyPredicate(30);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEfficiency(\"50\").build()));","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"        int threshold \u003d 30;","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"        PersonLessThanEfficiencyPredicate predicate \u003d new PersonLessThanEfficiencyPredicate(threshold);","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"        String expected \u003d PersonLessThanEfficiencyPredicate.class.getCanonicalName() + \"{threshold\u003d\" + threshold + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"ziyi22":69}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"howen02"},"content":"import java.time.Clock;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"howen02"},"content":"import java.time.ZoneId;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"howen02"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"howen02"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"howen02"},"content":"    private final ZoneId fixedZoneId \u003d ZoneId.of(\"UTC+8\");","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"    private final Clock fixedClock \u003d Clock.system(fixedZoneId);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"wolffe88"},"content":"                + \", department\u003d\" + ALICE.getDepartment() + \", tags\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"wolffe88"},"content":"                + ALICE.getTags() + \", comment\u003d\" + ALICE.getComment() + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"howen02"},"content":"    public void updateEfficiency_onDeadline_increaseByOne() {","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"howen02"},"content":"        LocalDateTime now \u003d LocalDateTime.now(fixedClock);","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"howen02"},"content":"        Person person \u003d new PersonBuilder().withEfficiency(\"50\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"howen02"},"content":"        Task task \u003d new Task(\"On Time Task\", new Deadline(now));","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"howen02"},"content":"        person.setTask(task);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"howen02"},"content":"        Efficiency updatedEfficiency \u003d person.updateEfficiency();","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"howen02"},"content":"        assertEquals(\"51\", updatedEfficiency.value);","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yiwern5":1,"howen02":20,"wolffe88":2,"-":98}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    private static final String INVALID_DEPARTMENT \u003d \" \";","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"howen02"},"content":"    private static final String INVALID_EFFICIENCY \u003d \"-1\";","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    private static final String VALID_COMMENT \u003d \"punctual\";","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    private static final String VALID_DEPARTMENT \u003d BENSON.getDepartment().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"    private static final String VALID_EFFICIENCY \u003d BENSON.getEfficiency().toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DEPARTMENT,","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"                        VALID_TAGS, VALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"                VALID_DEPARTMENT, VALID_TAGS, VALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"                        VALID_DEPARTMENT, VALID_TAGS, VALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"wolffe88"},"content":"                VALID_DEPARTMENT, VALID_TAGS, VALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"wolffe88"},"content":"                        VALID_DEPARTMENT, VALID_TAGS, VALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"wolffe88"},"content":"                VALID_DEPARTMENT, VALID_TAGS, VALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"wolffe88"},"content":"                        VALID_DEPARTMENT, VALID_TAGS, VALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"wolffe88"},"content":"                VALID_DEPARTMENT, VALID_TAGS, VALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"wolffe88"},"content":"                        VALID_DEPARTMENT, invalidTags, VALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"howen02"},"content":"    public void toModelType_invalidEfficiency_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"howen02"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"howen02"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"wolffe88"},"content":"                        VALID_DEPARTMENT, VALID_TAGS, INVALID_EFFICIENCY, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"howen02"},"content":"        String expectedMessage \u003d Efficiency.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"howen02"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"howen02"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"howen02"},"content":"    public void toModelType_nullEfficiency_throwsIllegalValueException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"howen02"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"wolffe88"},"content":"                VALID_DEPARTMENT, VALID_TAGS, null, VALID_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"howen02"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Efficiency.class.getSimpleName());","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"howen02"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yiwern5":11,"howen02":18,"wolffe88":12,"-":102}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ziyi22":1,"-":109}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    private static final Path TYPICAL_PERSONS_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalAddressBook.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_TASKS_FILE,","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        AddressBook typicalAddressBook \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"        assertEquals(addressBookFromFile, typicalAddressBook);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ziyi22":5,"-":42}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ziyi22":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        descriptor.setDepartment(person.getDepartment());","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"     * Sets the {@code Department} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"    public EditPersonDescriptorBuilder withDepartment(String department) {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"        descriptor.setDepartment(new Department(department));","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"howen02"},"content":"     * Sets the {@code Efficiency} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"howen02"},"content":"    public EditPersonDescriptorBuilder withEfficiency(String efficiency) {","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"howen02"},"content":"        descriptor.setEfficiency(new Efficiency(efficiency));","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"howen02"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yiwern5":10,"howen02":9,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import seedu.address.model.person.Department;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"howen02"},"content":"import seedu.address.model.person.Efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    public static final String DEFAULT_DEPARTMENT \u003d \"IT\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"howen02"},"content":"    public static final String DEFAULT_EFFICIENCY \u003d \"80\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    public static final String DEFAULT_COMMENT \u003d \"\";","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    private Department department;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"howen02"},"content":"    private Efficiency efficiency;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"    private Comment comment;","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        department \u003d new Department(DEFAULT_DEPARTMENT);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"howen02"},"content":"        efficiency \u003d new Efficiency(DEFAULT_EFFICIENCY);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        department \u003d personToCopy.getDepartment();","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"howen02"},"content":"        efficiency \u003d personToCopy.getEfficiency();","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"        comment \u003d personToCopy.getComment();","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"     * Sets the {@code Department} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"    public PersonBuilder withDepartment(String department) {","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"        this.department \u003d new Department(department);","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"howen02"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"howen02"},"content":"     * Sets the {@code Efficiency} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"howen02"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"howen02"},"content":"    public PersonBuilder withEfficiency(String efficiency) {","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"howen02"},"content":"        this.efficiency \u003d new Efficiency(efficiency);","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"howen02"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"howen02"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"wolffe88"},"content":"     * Sets the {@code Comment} of the {@code Person} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"wolffe88"},"content":"    public PersonBuilder withComment(String comment) {","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"wolffe88"},"content":"        this.comment \u003d new Comment(comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"wolffe88"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":135,"author":{"gitId":"wolffe88"},"content":"        return new Person(name, phone, email, address, department, tags, efficiency, comment);","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"yiwern5":13,"howen02":13,"wolffe88":15,"-":97}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EFFICIENCY;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"howen02"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        sb.append(PREFIX_DEPARTMENT + person.getDepartment().department + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"        sb.append(PREFIX_EFFICIENCY + person.getEfficiency().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        descriptor.getDepartment().ifPresent(department -\u003e sb.append(PREFIX_DEPARTMENT)","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"                .append(department.department).append(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yiwern5":3,"howen02":4,"-":62}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"public class TaskBuilder {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    public static final String DEFAULT_TITLE \u003d \"Submit Meeting Report\";","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"31-12-2024 2359\";","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    public static final Person DEFAULT_PERSON_IN_CHARGE \u003d TypicalPersons.AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"    private String title;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"    private Person personInCharge;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"    public TaskBuilder() {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"        title \u003d DEFAULT_TITLE;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"        deadline \u003d new Deadline(LocalDateTime.parse(DEFAULT_DEADLINE, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ziyi22"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"        title \u003d taskToCopy.getTaskTitle();","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"        deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        personInCharge \u003d taskToCopy.getPersonInCharge();","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"    public Task buildTester() {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"        return new Task(DEFAULT_TITLE, deadline);","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ziyi22"},"content":"     * Sets the {@code Title} of the {@code Task} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ziyi22"},"content":"    public TaskBuilder withTitle(String title) {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ziyi22"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ziyi22"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ziyi22"},"content":"     * Parses the deadline of the {@code Task} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ziyi22"},"content":"    public TaskBuilder withDeadline(String deadline) throws DateTimeParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ziyi22"},"content":"        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ziyi22"},"content":"        LocalDateTime parsedDeadline \u003d LocalDateTime.parse(deadline, f);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ziyi22"},"content":"        this.deadline \u003d new Deadline(parsedDeadline);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"ziyi22"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ziyi22"},"content":"     * Sets the {@code Person} of the {@code Task} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"ziyi22"},"content":"    public TaskBuilder withPerson(Person pic) {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ziyi22"},"content":"        this.personInCharge \u003d pic;","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ziyi22"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"ziyi22"},"content":"     * Builds a Task with the given details.","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ziyi22"},"content":"    public Task build() {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"ziyi22"},"content":"        Task t \u003d new Task(title, deadline);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"ziyi22"},"content":"        t.setPersonInCharge(personInCharge);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"ziyi22"},"content":"        personInCharge.setTask(t);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"ziyi22"},"content":"        return t;","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":80}},{"path":"src/test/java/seedu/address/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_OWNER;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"import seedu.address.logic.commands.AssignTaskCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":" * A utility class for Task.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"public class TaskUtil {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    public static String getAssignTaskCommand(Task task, int index) {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"        return AssignTaskCommand.COMMAND_WORD + \" \" + getTaskDetails(task, index);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"     * Returns an edit deadline command string.","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    public static String getEditDeadlineCommand(int index, Deadline deadline) {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        return AssignTaskCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"                + PREFIX_TASK_OWNER + index + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"                + PREFIX_DEADLINE + deadline.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"ziyi22"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ziyi22"},"content":"    public static String getTaskDetails(Task task, int index) {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"ziyi22"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"ziyi22"},"content":"        sb.append(PREFIX_TASK + task.getTaskTitle() + \" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"ziyi22"},"content":"        sb.append(PREFIX_DEADLINE + task.getDeadline().toString() + \" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"ziyi22"},"content":"        sb.append(PREFIX_TO + String.valueOf(index));","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"ziyi22"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ziyi22":31,"wolffe88":12}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":" * A utility class containing  objects to be used in tests.","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"     * Returns an {@code AddressBook} with all the typical persons and tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"        for (Person person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"        for (Task task : TypicalTasks.getTypicalTasks()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"            ab.addTask(task);","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"        return ab;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":25}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEPARTMENT_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEPARTMENT_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EFFICIENCY_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"howen02"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EFFICIENCY_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            .withPhone(\"94351253\").withDepartment(\"Finance\")","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"howen02"},"content":"            .withTags(\"friends\").withEfficiency(\"80\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"howen02"},"content":"            .withDepartment(\"IT\").withTags(\"owesMoney\", \"friends\").withEfficiency(\"50\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"howen02"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withDepartment(\"Marketing\")","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"howen02"},"content":"            .withEfficiency(\"90\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withDepartment(\"Production\")","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"howen02"},"content":"            .withTags(\"friends\").withEfficiency(\"40\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"howen02"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withDepartment(\"IT\")","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"howen02"},"content":"            .withEfficiency(\"30\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"howen02"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withDepartment(\"Business Development\")","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"howen02"},"content":"            .withEfficiency(\"20\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"howen02"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withDepartment(\"Administration\")","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"howen02"},"content":"            .withEfficiency(\"0\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"howen02"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withDepartment(\"IT\")","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"howen02"},"content":"            .withEfficiency(\"95\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"howen02"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withDepartment(\"Finance\")","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"howen02"},"content":"            .withEfficiency(\"10\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"howen02"},"content":"            .withDepartment(VALID_DEPARTMENT_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"howen02"},"content":"            .withEfficiency(VALID_EFFICIENCY_AMY).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"howen02"},"content":"            .withDepartment(VALID_DEPARTMENT_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"howen02"},"content":"            .withEfficiency(VALID_EFFICIENCY_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"yiwern5":6,"howen02":21,"-":51}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyi22"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyi22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyi22"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyi22"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyi22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyi22"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyi22"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyi22"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyi22"},"content":"public class TypicalTasks {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyi22"},"content":"    public static final Task TASK_ALICE \u003d new TaskBuilder().withTitle(\"Complete Project Proposal\")","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyi22"},"content":"            .withDeadline(\"25-03-2024 2359\").withPerson(TypicalPersons.ALICE).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyi22"},"content":"    public static final Task TASK_BENSON \u003d new TaskBuilder().withTitle(\"Prepare Presentation Slides\")","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyi22"},"content":"            .withDeadline(\"05-05-2024 0900\").withPerson(TypicalPersons.BENSON).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyi22"},"content":"    public static final Task TASK_CARL \u003d new TaskBuilder().withTitle(\"Submit Year End Report\")","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyi22"},"content":"            .withDeadline(\"30-11-2024 1700\").withPerson(TypicalPersons.CARL).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyi22"},"content":"    public static final Task TASK_DANIEL \u003d new TaskBuilder().withTitle(\"Organize Team Meeting\")","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyi22"},"content":"            .withDeadline(\"04-08-2024 1400\").withPerson(TypicalPersons.DANIEL).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyi22"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyi22"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ziyi22"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyi22"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TASK_ALICE, TASK_BENSON, TASK_CARL, TASK_DANIEL));","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyi22"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyi22"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyi22":31}}]
